syntax = "proto3";

package gincoinc.global.v1;

option go_package = "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1";

// =============================================================================
// Enum
// =============================================================================

// -----------------------------------------------------------------------------
// Blockchain
// -----------------------------------------------------------------------------

// Coin is a type of crypto asset.
enum Coin {
  COIN_INVALID = 0;
  COIN_BTC = 1;
  COIN_ETH = 2;
  COIN_LTC = 3;
  COIN_BCH = 4;
  COIN_XRP = 5;
  COIN_ERC20_BAT = 6;
  COIN_TRX = 7;
  COIN_ERC20_USDT = 8;
  COIN_RYO = 9;
  COIN_ERC20_JASMY = 10;
  COIN_ERC20_ENJ = 11;
  COIN_ERC20_OMG = 12;
  COIN_XLM = 13;
  COIN_ADA = 14;
  COIN_DOT = 15;
  COIN_ERC20_LINK = 16;
  COIN_ERC20_DEP = 17;
  COIN_ERC20_USDC = 18;
  COIN_ERC20_GYEN = 19;
  COIN_ERC20_ZAIF = 20;
  COIN_ERC20_FSCC = 21;
  COIN_ERC20_CMS = 22;
  COIN_ERC20_CICC = 23;
  COIN_ERC20_NCXC = 24;
  COIN_ERC20_COT = 25;
  COIN_XEM = 26;
  COIN_MONA = 27;
  COIN_IOST = 28;
  COIN_ERC20_SKEB = 29;
  COIN_KLAY = 30;
  COIN_MATIC = 31;
  COIN_XYM = 32;
  COIN_AVAX = 33;
  COIN_ERC20_MATIC = 34;
  COIN_ERC20_ROND = 35;
  COIN_ERC20_MV = 36;
  COIN_POLYGON_ERC20_ROND = 37;
  COIN_POLYGON_ERC20_MV = 38;
  COIN_POLYGON_ERC20_TSUGT = 39;
  COIN_ERC20_GXE = 40;
  COIN_OAS = 41;
  COIN_ASTR = 42;
  COIN_XDC = 43;
  COIN_ATOM = 44;
  COIN_KLAYTN_KIP7_MBX = 45;
  COIN_ETC = 46;
  COIN_ERC20_DAI = 47;
  COIN_ERC20_WETH = 48;
  COIN_ALGO = 49;
  COIN_ERC20_AXS = 50;
  COIN_ERC20_SAND = 51;
  COIN_ERC20_MKR = 52;
  COIN_ERC20_CHZ = 53;
  COIN_ERC20_NIDT = 54;
  COIN_ERC20_FNCT = 55;
  COIN_ERC20_SHIB = 56;
  COIN_ERC20_APE = 57;
  COIN_ERC20_BNB = 58;
  COIN_ERC20_FCR = 59;
  COIN_HBAR = 60;
  COIN_JOC = 61;
  COIN_SOL = 62;
  COIN_BNB = 63;
  COIN_FLR = 64;
  COIN_POLYGON_ERC20_OSHI = 65;
  COIN_ARBITRUM_ERC20_ARB = 66;
  COIN_KLAYTN_KIP7_BORA = 67;
  COIN_ERC20_MASK = 68;
  COIN_ERC20_SUP = 69;
  COIN_ERC20_DM2P = 70;
  COIN_APT = 71;
  COIN_DOGE = 72;
  COIN_POLYGON_ERC20_SNPT = 73;
  COIN_ERC20_RAT = 74;
  COIN_QUORUM = 75;
  COIN_QUORUM_ERC721_TCC = 76;
  COIN_ERC20_JPYPX = 77;
  COIN_ERC20_JPYCT = 78;
  COIN_SUI = 79;
  COIN_TON = 80;
  COIN_SDN = 10002;
  COIN_ERC20_SCDEV = 10003; // for stable coin development in dev
  COIN_ERC20_SCQA = 10004; // for stable coin development in qa
  COIN_ERC20_SCPROD = 10005; // for stable coin development in prod
  COIN_ERC20_COINSCDEV = 10006; // for stable coin development in dev
  COIN_ERC20_COINSCQA = 10007; // for stable coin development in qa
  COIN_ERC20_COINSCPROD = 10008; // for stable coin development in prod
  COIN_ERC20_COIN1 = 10009;
  COIN_ERC20_COIN2 = 10010;
  COIN_ERC20_COIN3 = 10011;
  COIN_ERC20_COIN4 = 10012;
  COIN_ERC20_COIN5 = 10013;
  COIN_ERC20_COIN6 = 10014;
  COIN_ERC20_COIN7 = 10015;
  COIN_ERC20_COIN8 = 10016;
  COIN_ERC20_COIN9 = 10017;
  COIN_ERC20_COIN10 = 10018;
  COIN_ERC20_COIN11 = 10019;
  COIN_ERC20_COIN12 = 10020;
  COIN_ERC20_COIN13 = 10021;
  COIN_ERC20_COIN14 = 10022;
  COIN_ERC20_COIN15 = 10023;
  COIN_ERC20_COIN = 10024;
  COIN_ERC20_PREUAT1 = 10025;
  COIN_ERC20_PREUAT2 = 10026;
  COIN_ERC20_PREUAT3 = 10027;
  COIN_ERC20_PREUAT4 = 10028;
  COIN_ERC20_DEVCOIN1 = 10029;
  COIN_ERC20_DEVCOIN2 = 10030;
  COIN_ERC20_MTBJJPY = 10031;
  COIN_ERC20_MTBJUSD = 10032;
  COIN_ERC20_PJPY = 10033;
  COIN_ERC20_PUSD = 10034;
  COIN_ERC20_UATJPY = 10035;
  COIN_ERC20_UATUSD = 10036;
  COIN_ERC20_COIN21 = 10037;
  COIN_ERC20_COIN22 = 10038;
  COIN_ERC20_COIN23 = 10039;
  COIN_ERC20_COIN24 = 10040;
  COIN_ERC20_COIN25 = 10041;
  COIN_ERC20_COIN26 = 10042;
  COIN_ERC20_COIN27 = 10043;
  COIN_ERC20_COIN28 = 10044;
  COIN_ERC20_COIN29 = 10045;
  COIN_ERC20_COIN30 = 10046;
  COIN_ERC20_COIN31 = 10047;
  COIN_ERC20_COIN32 = 10048;
  COIN_QUORUM_ERC721_TCCDEV = 10049; // for Quorum ERC721 development
  COIN_QUORUM_ERC721_TCCSTG = 10050; // for Quorum ERC721 staging
}

// Network is a type of blockchain network.
enum Network {
  NETWORK_INVALID = 0;
  NETWORK_BITCOIN_MAINNET = 1;
  NETWORK_BITCOIN_TESTNET = 2;
  NETWORK_ETHEREUM_MAINNET = 3;
  NETWORK_ETHEREUM_TESTNET = 4; // Sepolia
  NETWORK_ETHEREUM_TESTNET_2 = 59; // Holesky
  NETWORK_ETHEREUM_TESTNET_3 = 72; // Hoodi
  NETWORK_LITECOIN_MAINNET = 5;
  NETWORK_LITECOIN_TESTNET = 6;
  NETWORK_BITCOINCASH_MAINNET = 7;
  NETWORK_BITCOINCASH_TESTNET = 8;
  NETWORK_RIPPLE_MAINNET = 9;
  NETWORK_RIPPLE_TESTNET = 10;
  NETWORK_TRON_MAINNET = 11;
  NETWORK_TRON_TESTNET = 12;
  NETWORK_C0BAN_MAINNET = 13;
  NETWORK_C0BAN_TESTNET = 14;
  NETWORK_STELLAR_MAINNET = 15;
  NETWORK_STELLAR_TESTNET = 16;
  NETWORK_CARDANO_MAINNET = 17;
  NETWORK_CARDANO_TESTNET = 18;
  NETWORK_POLKADOT_MAINNET = 19;
  NETWORK_POLKADOT_TESTNET = 20;
  NETWORK_NEM_MAINNET = 21;
  NETWORK_NEM_TESTNET = 22;
  NETWORK_MONACOIN_MAINNET = 23;
  NETWORK_MONACOIN_TESTNET = 24;
  NETWORK_IOST_MAINNET = 25;
  NETWORK_IOST_TESTNET = 26;
  NETWORK_KLAY_MAINNET = 27;
  NETWORK_KLAY_TESTNET = 28;
  NETWORK_POLYGON_MAINNET = 29;
  NETWORK_POLYGON_TESTNET = 30;
  NETWORK_SYMBOL_MAINNET = 31;
  NETWORK_SYMBOL_TESTNET = 32;
  NETWORK_AVALANCHE_MAINNET = 33;
  NETWORK_AVALANCHE_TESTNET = 34;
  NETWORK_OASYS_MAINNET = 35;
  NETWORK_OASYS_TESTNET = 36;
  NETWORK_ASTAR_MAINNET = 37;
  NETWORK_SHIBUYA_TESTNET = 38;
  NETWORK_XDC_MAINNET = 39;
  NETWORK_XDC_TESTNET = 40;
  NETWORK_COSMOS_MAINNET = 41;
  NETWORK_COSMOS_TESTNET = 42;
  NETWORK_ETHEREUM_CLASSIC_MAINNET = 43;
  NETWORK_ETHEREUM_CLASSIC_TESTNET = 44;
  NETWORK_ALGORAND_MAINNET = 45;
  NETWORK_ALGORAND_TESTNET = 46;
  NETWORK_HEDERA_MAINNET = 47;
  NETWORK_HEDERA_TESTNET = 48;
  NETWORK_JAPAN_OPEN_CHAIN_MAINNET = 49;
  NETWORK_JAPAN_OPEN_CHAIN_TESTNET = 50;
  NETWORK_SOLANA_MAINNET = 51;
  NETWORK_SOLANA_TESTNET = 52;
  NETWORK_BNB_SMART_CHAIN_MAINNET = 53;
  NETWORK_BNB_SMART_CHAIN_TESTNET = 54;
  NETWORK_FLARE_MAINNET = 55;
  NETWORK_FLARE_TESTNET = 56;
  NETWORK_ARBITRUM_ONE_MAINNET = 57;
  NETWORK_ARBITRUM_ONE_TESTNET = 58;
  NETWORK_APTOS_MAINNET = 60;
  NETWORK_APTOS_TESTNET = 61;
  NETWORK_DOGECOIN_MAINNET = 62;
  NETWORK_DOGECOIN_TESTNET = 63;
  NETWORK_AVALANCHE_PLATFORM_CHAIN_MAINNET = 64;
  NETWORK_AVALANCHE_PLATFORM_CHAIN_TESTNET = 65;
  NETWORK_QUORUM_MAINNET = 66;
  NETWORK_QUORUM_TESTNET = 67;
  NETWORK_SUI_MAINNET = 68;
  NETWORK_SUI_TESTNET = 69;
  NETWORK_TON_MAINNET = 70;
  NETWORK_TON_TESTNET = 71;
  NETWORK_SHIDEN_MAINNET = 10002;
}

// AddressType is a type of address.
enum AddressType {
  ADDRESS_TYPE_INVALID = 0;
  ADDRESS_TYPE_P2SH = 1; // Pay to Script Hash
  ADDRESS_TYPE_P2SH_P2WSH = 2; // Pay to Witness Script Hash nested P2SH
  ADDRESS_TYPE_P2WSH = 3; // Pay to Witness Script Hash
  ADDRESS_TYPE_NONE = 100; // For ETH/XRP
}

// TransactionState is a state of transaction.
enum TransactionState {
  TRANSACTION_STATE_INVALID = 0;
  TRANSACTION_STATE_SUBMITTED = 1; // Transaction is submitted
  TRANSACTION_STATE_PENDING = 2; // Transaction is included in mempool
  TRANSACTION_STATE_PROCESSING = 3; // Transaction is included in a block
  TRANSACTION_STATE_CONFIRMED = 4; // Exceeded number of confirmations
  // specified
  TRANSACTION_STATE_DROPPED = 5; // Transaction is dropped
}

// UTXOState is a state of UTXO.
enum UTXOState {
  UTXO_STATE_INVALID = 0;
  UTXO_STATE_PENDING_UNSPENT = 1;
  UTXO_STATE_UNSPENT = 2;
  UTXO_STATE_PENDING_SPENT = 3;
  UTXO_STATE_SPENT = 4;
}

// -----------------------------------------------------------------------------
// Transfer
// -----------------------------------------------------------------------------

// TransferType is a type of transaction.
enum TransferType {
  TRANSFER_TYPE_INVALID = 0;
  TRANSFER_TYPE_SEND = 1; // The type of send
  TRANSFER_TYPE_RECEIVE = 2; // The type of receive
  TRANSFER_TYPE_CHANGE = 3; // The type of change transaction for BTC/LTC/BCH
  TRANSFER_TYPE_FATAL = 4; // The type of fraudulent remittance
}

// -----------------------------------------------------------------------------
// XRP Specification
// -----------------------------------------------------------------------------

// XRPTransactionType is a type of xrp transaction.
enum XRPTransactionType {
  XRP_TRANSACTION_TYPE_INVALID = 0;
  XRP_TRANSACTION_TYPE_PAYMENT = 1;
  XRP_TRANSACTION_TYPE_SET_SIGNER_LIST = 2;
  XRP_TRANSACTION_TYPE_DISABLE_MASTER = 3;
}

// -----------------------------------------------------------------------------
// TransactionResult
// -----------------------------------------------------------------------------

// TransactionResult is a result of transaction.
enum TransactionResult {
  TRANSACTION_RESULT_INVALID = 0;
  TRANSACTION_RESULT_PENDING = 1; // Transaction is pending
  TRANSACTION_RESULT_SUCCESS = 2; // Transaction is included in block
  TRANSACTION_RESULT_FAILURE = 3; // Failed to send transaction
  TRANSACTION_RESULT_NONE = 100;
}

// NemTransactionType is a type of nem transaction.
enum NemTransactionType {
  NEM_TRANSACTION_TYPE_INVALID = 0;
  NEM_TRANSACTION_TYPE_TRANSFER_TYPE = 1;
  NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE = 2;
  NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE = 3;
  NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE = 4;
  NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE = 5;
  NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE = 6;
  NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE = 7;
  NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE = 8;
}

// SymbolTransactionType is a type of symbol transaction.
enum SymbolTransactionType {
  SYMBOL_TRANSACTION_TYPE_INVALID = 0;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_KEY_LINK = 1;
  SYMBOL_TRANSACTION_TYPE_NODE_KEY_LINK = 2;
  SYMBOL_TRANSACTION_TYPE_AGGREGATE_COMPLETE = 3;
  SYMBOL_TRANSACTION_TYPE_AGGREGATE_BONDED = 4;
  SYMBOL_TRANSACTION_TYPE_VOTING_KEY_LINK = 5;
  SYMBOL_TRANSACTION_TYPE_VRF_KEY_LINK = 6;
  SYMBOL_TRANSACTION_TYPE_HASH_LOCK = 7;
  SYMBOL_TRANSACTION_TYPE_SECRET_LOCK = 8;
  SYMBOL_TRANSACTION_TYPE_SECRET_PROOF = 9;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_METADATA = 10;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_METADATA = 11;
  SYMBOL_TRANSACTION_TYPE_NAMESPACE_METADATA = 12;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_DEFINITION = 13;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_SUPPLY_CHANGE = 14;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_SUPPLY_REVOCATION = 15;
  SYMBOL_TRANSACTION_TYPE_MULTISIG_ACCOUNT_MODIFICATION = 16;
  SYMBOL_TRANSACTION_TYPE_ADDRESS_ALIAS = 17;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_ALIAS = 18;
  SYMBOL_TRANSACTION_TYPE_NAMESPACE_REGISTRATION = 19;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_ADDRESS_RESTRICTION = 20;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_MOSAIC_RESTRICTION = 21;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_OPERATION_RESTRICTION = 22;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_ADDRESS_RESTRICTION = 23;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_GLOBAL_RESTRICTION = 24;
  SYMBOL_TRANSACTION_TYPE_TRANSFER = 25;
}

enum EthereumStakingRewardLayerType {
  ETHEREUM_STAKING_REWARD_LAYER_TYPE_INVALID = 0;
  ETHEREUM_STAKING_REWARD_LAYER_TYPE_CONSENSUS = 1;
  ETHEREUM_STAKING_REWARD_LAYER_TYPE_EXECUTION = 2;
  ETHEREUM_STAKING_REWARD_LAYER_TYPE_EXECUTION_MEV = 3;
}

enum CosmosMsgType {
  COSMOS_MSG_TYPE_INVALID = 0;
  COSMOS_MSG_TYPE_SEND = 1;
  COSMOS_MSG_TYPE_DELEGATE = 2;
  COSMOS_MSG_TYPE_UNDELEGATE = 3;
  COSMOS_MSG_TYPE_UNBONDED = 4;
  COSMOS_MSG_TYPE_WITHDRAW_DELEGATOR_REWARD = 5;
}

enum StakingValidatorStatus {
  STAKING_VALIDATOR_STATUS_INVALID = 0;
  STAKING_VALIDATOR_STATUS_ACTIVE = 1; // 稼働中
  STAKING_VALIDATOR_STATUS_STOP = 2; // 停止中
  STAKING_VALIDATOR_STATUS_PAUSE = 3; // 一時停止中
}

enum StakingEventType {
  STAKING_EVENT_TYPE_INVALID = 0;
  STAKING_EVENT_TYPE_STAKE = 1; // ステーキング開始
  STAKING_EVENT_TYPE_UNSTAKE = 2; // ステーキング解除
  STAKING_EVENT_TYPE_REWARD = 3; // 報酬受取
}

enum EthereumStakingHistoryType {
  ETHEREUM_STAKING_HISTORY_TYPE_INVALID = 0;
  ETHEREUM_STAKING_HISTORY_TYPE_REWARD_CONSENSUS = 1;
  ETHEREUM_STAKING_HISTORY_TYPE_REWARD_EXECUTION = 2;
  ETHEREUM_STAKING_HISTORY_TYPE_REWARD_MEV = 3;
  ETHEREUM_STAKING_HISTORY_TYPE_START = 4;
  ETHEREUM_STAKING_HISTORY_TYPE_EXIT = 5;
}

enum SolanaRecentBlockhashType {
  SOLANA_RECENT_BLOCKHASH_TYPE_INVALID = 0;
  SOLANA_RECENT_BLOCKHASH_TYPE_FINALIZED = 1;
  SOLANA_RECENT_BLOCKHASH_TYPE_CONFIRMED = 2;
  SOLANA_RECENT_BLOCKHASH_TYPE_PROCESSED = 3;
}

enum SolanaEventType {
  SOLANA_EVENT_TYPE_INVALID = 0;
  SOLANA_EVENT_TYPE_DELEGATE = 1;
  SOLANA_EVENT_TYPE_DEACTIVATE = 2;
  SOLANA_EVENT_TYPE_WITHDRAW = 3;
  SOLANA_EVENT_TYPE_STAKE_INIT = 4; // ステークアカウント作成
  SOLANA_EVENT_TYPE_REWARD = 5;

  // ステータス遷移を監視する場合(ステータス変化するまで1Epoch要)
  // Withdrawだけは即時反映されるので不要
  SOLANA_EVENT_TYPE_DELEGATE_COMPLETE = 6; // Delegateステータス遷移時
  SOLANA_EVENT_TYPE_DEACTIVATE_COMPLETE = 7; // Deactivateステータス遷移時
}

enum EthereumCallMethod {
  ETHEREUM_CALL_METHOD_INVALID = 0;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_INITIALIZE = 1;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_CONFIGURE_MINTER = 2;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_MINT_AND_TRANSFER_DIRECT = 3;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_MINT = 4;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_BURN = 5;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_BULK_ADD_TO_WHITELIST = 6;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_BULK_REMOVE_FROM_WHITELIST = 7;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_BULK_ADD_TO_BLACKLIST = 8;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_BULK_REMOVE_FROM_BLACKLIST = 9;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_CONFISCATE = 10;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_PAUSE = 11;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_UNPAUSE = 12;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_MINT_AND_TRANSFER_INTERMEDIARY = 13;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_GRANT_WHITE_AND_BLACK_LISTER = 14;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_CONTRACT_CREATION = 15;
  ETHEREUM_CALL_METHOD_PROGMAT_COIN_UPGRADE_TO_AND_CALL = 16;
}

// -----------------------------------------------------------------------------
// Avalanche Transaction Type
// -----------------------------------------------------------------------------

enum AvalancheTxType {
  AVALANCHE_TX_TYPE_INVALID = 0;
  AVALANCHE_TX_TYPE_TRANSFER = 1;
  AVALANCHE_TX_TYPE_EXPORT = 2;
  AVALANCHE_TX_TYPE_IMPORT = 3;
  AVALANCHE_TX_TYPE_ADD_PERMISSIONLESS_DELEGATOR = 4;
  AVALANCHE_TX_TYPE_REWARD_VALIDATOR = 5;
}

// -----------------------------------------------------------------------------
// Avalanche UTXO Type
// -----------------------------------------------------------------------------

enum AvalancheInputType {
  AVALANCHE_INPUT_TYPE_INVALID = 0;
  AVALANCHE_INPUT_TYPE_TRANSFERABLE_INPUT = 1;
  AVALANCHE_INPUT_TYPE_IMPORTED_INPUT = 2;
  AVALANCHE_INPUT_TYPE_EVM_INPUT = 3;
}

enum AvalancheOutputType {
  AVALANCHE_OUTPUT_TYPE_INVALID = 0;
  AVALANCHE_OUTPUT_TYPE_TRANSFERABLE_OUTPUT = 1;
  AVALANCHE_OUTPUT_TYPE_EXPORTED_OUTPUT = 2;
  AVALANCHE_OUTPUT_TYPE_EVM_OUTPUT = 3;
  AVALANCHE_OUTPUT_TYPE_STAKE_OUTPUT = 4;
  AVALANCHE_OUTPUT_TYPE_OWNERS_OUTPUT = 5;
}

enum ContractCreationType {
  CONTRACT_CREATION_TYPE_INVALID = 0;
  CONTRACT_CREATION_TYPE_IMPL = 1;
  CONTRACT_CREATION_TYPE_UTILS = 2;
}

enum NFTCallMethod {
  NFT_CALL_METHOD_INVALID = 0;
  NFT_CALL_METHOD_MINT = 1;
  NFT_CALL_METHOD_BURN = 2;
  NFT_CALL_METHOD_TRANSFER = 3;
  NFT_CALL_METHOD_BATCH_MINT = 4;
  NFT_CALL_METHOD_BATCH_TRANSFER = 5;
  NFT_CALL_METHOD_TRANSFER_OWNERSHIP = 6;
  NFT_CALL_METHOD_BATCH_BURN = 7;
}
