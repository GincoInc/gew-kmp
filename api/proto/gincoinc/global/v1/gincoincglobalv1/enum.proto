syntax = "proto3";

package gincoinc.global.v1;

option go_package = "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1";

// =============================================================================
// Enum
// =============================================================================

// -----------------------------------------------------------------------------
// Blockchain
// -----------------------------------------------------------------------------

// Coin is a type of crypto asset.
enum Coin {
  COIN_INVALID = 0;
  COIN_BTC = 1;
  COIN_ETH = 2;
  COIN_LTC = 3;
  COIN_BCH = 4;
  COIN_XRP = 5;
  COIN_ERC20_BAT = 6;
  COIN_TRX = 7;
  COIN_ERC20_USDT = 8;
  COIN_RYO = 9;
  COIN_ERC20_JASMY = 10;
  COIN_ERC20_ENJ = 11;
  COIN_ERC20_OMG = 12;
  COIN_XLM = 13;
  COIN_ADA = 14;
  COIN_DOT = 15;
  COIN_ERC20_LINK = 16;
  COIN_ERC20_DEP = 17;
  COIN_ERC20_USDC = 18;
  COIN_ERC20_GYEN = 19;
  COIN_ERC20_ZAIF = 20;
  COIN_ERC20_FSCC = 21;
  COIN_ERC20_CMS = 22;
  COIN_ERC20_CICC = 23;
  COIN_ERC20_NCXC = 24;
  COIN_ERC20_COT = 25;
  COIN_XEM = 26;
  COIN_MONA = 27;
  COIN_IOST = 28;
  COIN_ERC20_SKEB = 29;
  COIN_KLAY = 30;
  COIN_MATIC = 31;
  COIN_XYM = 32;
  COIN_AVAX = 33;
  COIN_ERC20_MATIC = 34;
  COIN_ERC20_ROND = 35;
  COIN_ERC20_MV = 36;
  COIN_POLYGON_ERC20_ROND = 37;
  COIN_POLYGON_ERC20_MV = 38;
  COIN_POLYGON_ERC20_TSUGT = 39;
  COIN_ERC20_GXE = 40;
  COIN_OAS = 41;
  COIN_ASTR = 42;
  COIN_XDC = 43;
  COIN_ATOM = 44;
  COIN_KLAYTN_KIP7_MBX = 45;
  COIN_SDN = 10002;
}

// Network is a type of blockchain network.
enum Network {
  NETWORK_INVALID = 0;
  NETWORK_BITCOIN_MAINNET = 1;
  NETWORK_BITCOIN_TESTNET = 2;
  NETWORK_ETHEREUM_MAINNET = 3;
  NETWORK_ETHEREUM_TESTNET = 4;
  NETWORK_LITECOIN_MAINNET = 5;
  NETWORK_LITECOIN_TESTNET = 6;
  NETWORK_BITCOINCASH_MAINNET = 7;
  NETWORK_BITCOINCASH_TESTNET = 8;
  NETWORK_RIPPLE_MAINNET = 9;
  NETWORK_RIPPLE_TESTNET = 10;
  NETWORK_TRON_MAINNET = 11;
  NETWORK_TRON_TESTNET = 12;
  NETWORK_C0BAN_MAINNET = 13;
  NETWORK_C0BAN_TESTNET = 14;
  NETWORK_STELLAR_MAINNET = 15;
  NETWORK_STELLAR_TESTNET = 16;
  NETWORK_CARDANO_MAINNET = 17;
  NETWORK_CARDANO_TESTNET = 18;
  NETWORK_POLKADOT_MAINNET = 19;
  NETWORK_POLKADOT_TESTNET = 20;
  NETWORK_NEM_MAINNET = 21;
  NETWORK_NEM_TESTNET = 22;
  NETWORK_MONACOIN_MAINNET = 23;
  NETWORK_MONACOIN_TESTNET = 24;
  NETWORK_IOST_MAINNET = 25;
  NETWORK_IOST_TESTNET = 26;
  NETWORK_KLAY_MAINNET = 27;
  NETWORK_KLAY_TESTNET = 28;
  NETWORK_POLYGON_MAINNET = 29;
  NETWORK_POLYGON_TESTNET = 30;
  NETWORK_SYMBOL_MAINNET = 31;
  NETWORK_SYMBOL_TESTNET = 32;
  NETWORK_AVALANCHE_MAINNET = 33;
  NETWORK_AVALANCHE_TESTNET = 34;
  NETWORK_ASTAR_MAINNET = 10001; // For monitoring https://github.com/GincoInc/sre-dev/issues/1312
  NETWORK_SHIDEN_MAINNET = 10002;
}

// AddressType is a type of address.
enum AddressType {
  ADDRESS_TYPE_INVALID = 0;
  ADDRESS_TYPE_P2SH = 1; // Pay to Script Hash
  ADDRESS_TYPE_P2SH_P2WSH = 2; // Pay to Witness Script Hash nested P2SH
  ADDRESS_TYPE_P2WSH = 3; // Pay to Witness Script Hash
  ADDRESS_TYPE_NONE = 100; // For ETH/XRP
}

// TransactionState is a state of transaction.
enum TransactionState {
  TRANSACTION_STATE_INVALID = 0;
  TRANSACTION_STATE_SUBMITTED = 1; // Transaction is submitted
  TRANSACTION_STATE_PENDING = 2; // Transaction is included in mempool
  TRANSACTION_STATE_PROCESSING = 3; // Transaction is included in a block
  TRANSACTION_STATE_CONFIRMED = 4; // Exceeded number of confirmations
  // specified
  TRANSACTION_STATE_DROPPED = 5; // Transaction is dropped
}

// UTXOState is a state of UTXO.
enum UTXOState {
  UTXO_STATE_INVALID = 0;
  UTXO_STATE_PENDING_UNSPENT = 1;
  UTXO_STATE_UNSPENT = 2;
  UTXO_STATE_PENDING_SPENT = 3;
  UTXO_STATE_SPENT = 4;
}

// -----------------------------------------------------------------------------
// Transfer
// -----------------------------------------------------------------------------

// TransferType is a type of transaction.
enum TransferType {
  TRANSFER_TYPE_INVALID = 0;
  TRANSFER_TYPE_SEND = 1; // The type of send
  TRANSFER_TYPE_RECEIVE = 2; // The type of receive
  TRANSFER_TYPE_CHANGE = 3; // The type of change transaction for BTC/LTC/BCH
  TRANSFER_TYPE_FATAL = 4; // The type of fraudulent remittance
}

// -----------------------------------------------------------------------------
// XRP Specification
// -----------------------------------------------------------------------------

// XRPTransactionType is a type of xrp transaction.
enum XRPTransactionType {
  XRP_TRANSACTION_TYPE_INVALID = 0;
  XRP_TRANSACTION_TYPE_PAYMENT = 1;
  XRP_TRANSACTION_TYPE_SET_SIGNER_LIST = 2;
  XRP_TRANSACTION_TYPE_DISABLE_MASTER = 3;
}

// -----------------------------------------------------------------------------
// TransactionResult
// -----------------------------------------------------------------------------

// TransactionResult is a result of transaction.
enum TransactionResult {
  TRANSACTION_RESULT_INVALID = 0;
  TRANSACTION_RESULT_PENDING = 1; // Transaction is pending
  TRANSACTION_RESULT_SUCCESS = 2; // Transaction is included in block
  TRANSACTION_RESULT_FAILURE = 3; // Failed to send transaction
  TRANSACTION_RESULT_NONE = 100;
}

// NemTransactionType is a type of nem transaction.
enum NemTransactionType {
  NEM_TRANSACTION_TYPE_INVALID = 0;
  NEM_TRANSACTION_TYPE_TRANSFER_TYPE = 1;
  NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE = 2;
  NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE = 3;
  NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE = 4;
  NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE = 5;
  NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE = 6;
  NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE = 7;
  NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE = 8;
}

// SymbolTransactionType is a type of symbol transaction.
enum SymbolTransactionType {
  SYMBOL_TRANSACTION_TYPE_INVALID = 0;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_KEY_LINK = 1;
  SYMBOL_TRANSACTION_TYPE_NODE_KEY_LINK = 2;
  SYMBOL_TRANSACTION_TYPE_AGGREGATE_COMPLETE = 3;
  SYMBOL_TRANSACTION_TYPE_AGGREGATE_BONDED = 4;
  SYMBOL_TRANSACTION_TYPE_VOTING_KEY_LINK = 5;
  SYMBOL_TRANSACTION_TYPE_VRF_KEY_LINK = 6;
  SYMBOL_TRANSACTION_TYPE_HASH_LOCK = 7;
  SYMBOL_TRANSACTION_TYPE_SECRET_LOCK = 8;
  SYMBOL_TRANSACTION_TYPE_SECRET_PROOF = 9;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_METADATA = 10;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_METADATA = 11;
  SYMBOL_TRANSACTION_TYPE_NAMESPACE_METADATA = 12;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_DEFINITION = 13;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_SUPPLY_CHANGE = 14;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_SUPPLY_REVOCATION = 15;
  SYMBOL_TRANSACTION_TYPE_MULTISIG_ACCOUNT_MODIFICATION = 16;
  SYMBOL_TRANSACTION_TYPE_ADDRESS_ALIAS = 17;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_ALIAS = 18;
  SYMBOL_TRANSACTION_TYPE_NAMESPACE_REGISTRATION = 19;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_ADDRESS_RESTRICTION = 20;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_MOSAIC_RESTRICTION = 21;
  SYMBOL_TRANSACTION_TYPE_ACCOUNT_OPERATION_RESTRICTION = 22;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_ADDRESS_RESTRICTION = 23;
  SYMBOL_TRANSACTION_TYPE_MOSAIC_GLOBAL_RESTRICTION = 24;
  SYMBOL_TRANSACTION_TYPE_TRANSFER = 25;
}
