# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/audit_logger.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import importlib
gincoinc_dot_adamant_dot_global_dot_v1_dot_adamantglobalv1_dot_enum__pb2 = importlib.import_module('gincoinc.adamant.global_.v1.adamantglobalv1.enum_pb2')
gincoinc_dot_global_dot_v1_dot_gincoincglobalv1_dot_enum__pb2 = importlib.import_module('gincoinc.global_.v1.gincoincglobalv1.enum_pb2')
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n=gincoinc/adamant/global/v1/adamantglobalv1/audit_logger.proto\x12\x11\x61\x64\x61mant.global.v1\x1a\x35gincoinc/adamant/global/v1/adamantglobalv1/enum.proto\x1a.gincoinc/global/v1/gincoincglobalv1/enum.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaa\x13\n\x08\x41uditLog\x12 \n\x0c\x61udit_log_id\x18\x01 \x01(\tR\nauditLogId\x12H\n\x0f\x61udit_log_group\x18\x02 \x01(\x0e\x32 .adamant.global.v1.AuditLogGroupR\rauditLogGroup\x12\x45\n\x0e\x61udit_log_type\x18\x03 \x01(\x0e\x32\x1f.adamant.global.v1.AuditLogTypeR\x0c\x61uditLogType\x12\x1d\n\naccount_id\x18\x04 \x01(\tR\taccountId\x12!\n\x0c\x61\x63\x63ount_name\x18\x05 \x01(\tR\x0b\x61\x63\x63ountName\x12*\n\x11target_account_id\x18\x06 \x01(\tR\x0ftargetAccountId\x12.\n\x13target_account_name\x18\x07 \x01(\tR\x11targetAccountName\x12\x14\n\x05\x65mail\x18\x08 \x01(\tR\x05\x65mail\x12\x38\n\trole_type\x18\t \x01(\x0e\x32\x1b.adamant.global.v1.RoleTypeR\x08roleType\x12,\n\x12service_account_id\x18\n \x01(\tR\x10serviceAccountId\x12\x30\n\x14service_account_name\x18\x0b \x01(\tR\x12serviceAccountName\x12\x33\n\x16service_account_key_id\x18\x0c \x01(\tR\x13serviceAccountKeyId\x12\x1b\n\twallet_id\x18\r \x01(\tR\x08walletId\x12\x1f\n\x0bwallet_name\x18\x0e \x01(\tR\nwalletName\x12\x32\n\x15\x64\x65stination_wallet_id\x18\' \x01(\tR\x13\x64\x65stinationWalletId\x12\x36\n\x17\x64\x65stination_wallet_name\x18( \x01(\tR\x15\x64\x65stinationWalletName\x12&\n\x0fwallet_group_id\x18\" \x01(\tR\rwalletGroupId\x12*\n\x11wallet_group_name\x18# \x01(\tR\x0fwalletGroupName\x12!\n\x0cwallet_names\x18$ \x03(\tR\x0bwalletNames\x12,\n\x12pre_transaction_id\x18\x32 \x01(\tR\x10preTransactionId\x12=\n\x1bpre_transaction_external_id\x18\x35 \x01(\tR\x18preTransactionExternalId\x12%\n\x0etransaction_id\x18\x0f \x01(\tR\rtransactionId\x12\x35\n\tcoin_type\x18\x10 \x01(\x0e\x32\x18.gincoinc.global.v1.CoinR\x08\x63oinType\x12!\n\x0cstring_value\x18\x11 \x01(\tR\x0bstringValue\x12\x13\n\x05tx_id\x18\x12 \x01(\tR\x04txId\x12\x1b\n\tpolicy_id\x18\x13 \x01(\tR\x08policyId\x12\x1f\n\x0bpolicy_name\x18\x14 \x01(\tR\npolicyName\x12,\n\x12labeled_address_id\x18\x15 \x01(\tR\x10labeledAddressId\x12\x18\n\x07\x61\x64\x64ress\x18\x16 \x01(\tR\x07\x61\x64\x64ress\x12!\n\x0c\x61\x64\x64ress_name\x18\x17 \x01(\tR\x0b\x61\x64\x64ressName\x12\x18\n\x07message\x18+ \x01(\tR\x07message\x12*\n\x11transfer_limit_id\x18\x18 \x01(\tR\x0ftransferLimitId\x12.\n\x13transfer_limit_name\x18\x19 \x01(\tR\x11transferLimitName\x12\x35\n\x17transfer_one_time_limit\x18\x1a \x01(\x03R\x14transferOneTimeLimit\x12\x32\n\x15transfer_hourly_limit\x18\x1b \x01(\x03R\x13transferHourlyLimit\x12\x30\n\x14transfer_daily_limit\x18\x1c \x01(\x03R\x12transferDailyLimit\x12!\n\x0cwhitelist_id\x18\x1d \x01(\tR\x0bwhitelistId\x12%\n\x0ewhitelist_name\x18\x1e \x01(\tR\rwhitelistName\x12%\n\x0eold_validators\x18% \x03(\tR\roldValidators\x12%\n\x0enew_validators\x18& \x03(\tR\rnewValidators\x12/\n\x13whitelist_addresses\x18\x1f \x03(\tR\x12whitelistAddresses\x12\x39\n\nevent_time\x18  \x01(\x0b\x32\x1a.google.protobuf.TimestampR\teventTime\x12;\n\x0b\x63reate_time\x18! \x01(\x0b\x32\x1a.google.protobuf.TimestampR\ncreateTime\x12@\n\renabled_mails\x18) \x03(\x0e\x32\x1b.adamant.global.v1.MailTypeR\x0c\x65nabledMails\x12\x42\n\x0e\x64isabled_mails\x18* \x03(\x0e\x32\x1b.adamant.global.v1.MailTypeR\rdisabledMails\x12\x35\n\x07network\x18, \x01(\x0e\x32\x1b.gincoinc.global.v1.NetworkR\x07network\x12:\n\x19pre_transaction_threshold\x18- \x01(\x01R\x17preTransactionThreshold\x12?\n\x1cpre_transaction_threshold_id\x18. \x01(\tR\x19preTransactionThresholdId\x12\x30\n\x14\x62lacklist_address_id\x18/ \x01(\tR\x12\x62lacklistAddressId\x12\x1b\n\tfile_name\x18\x30 \x01(\tR\x08\x66ileName\x12#\n\raddress_count\x18\x31 \x01(\x03R\x0c\x61\x64\x64ressCount\x12\x36\n\x17previous_transaction_id\x18\x33 \x01(\tR\x15previousTransactionId\x12,\n\x12new_transaction_id\x18\x34 \x01(\tR\x10newTransactionId\x12\x1a\n\x08\x61\x63tivate\x18\x36 \x01(\x08R\x08\x61\x63tivate\x12\x17\n\x07\x66ile_id\x18\x37 \x01(\tR\x06\x66ileIdBLZJgithub.com/GincoInc/gew-kmp/gen/gincoinc/adamant/global/v1/adamantglobalv1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'gincoinc.adamant.global_.v1.adamantglobalv1.audit_logger_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  _globals['DESCRIPTOR']._options = None
  _globals['DESCRIPTOR']._serialized_options = b'ZJgithub.com/GincoInc/gew-kmp/gen/gincoinc/adamant/global/v1/adamantglobalv1'
  _globals['_AUDITLOG']._serialized_start=221
  _globals['_AUDITLOG']._serialized_end=2695
# @@protoc_insertion_point(module_scope)
