// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package com.adamant.global.v1;

/**
 * <pre>
 * The model of Litecoin specific fields of transaction
 * </pre>
 *
 * Protobuf type {@code adamant.global.v1.LitecoinSpecific}
 */
public final class LitecoinSpecific extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:adamant.global.v1.LitecoinSpecific)
    LitecoinSpecificOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LitecoinSpecific.newBuilder() to construct.
  private LitecoinSpecific(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LitecoinSpecific() {
    txInputs_ = java.util.Collections.emptyList();
    txOutputs_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LitecoinSpecific();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private LitecoinSpecific(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              txInputs_ = new java.util.ArrayList<com.adamant.global.v1.TxInput>();
              mutable_bitField0_ |= 0x00000001;
            }
            txInputs_.add(
                input.readMessage(com.adamant.global.v1.TxInput.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              txOutputs_ = new java.util.ArrayList<com.adamant.global.v1.TxOutput>();
              mutable_bitField0_ |= 0x00000002;
            }
            txOutputs_.add(
                input.readMessage(com.adamant.global.v1.TxOutput.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        txInputs_ = java.util.Collections.unmodifiableList(txInputs_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        txOutputs_ = java.util.Collections.unmodifiableList(txOutputs_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_LitecoinSpecific_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_LitecoinSpecific_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.adamant.global.v1.LitecoinSpecific.class, com.adamant.global.v1.LitecoinSpecific.Builder.class);
  }

  public static final int TX_INPUTS_FIELD_NUMBER = 1;
  private java.util.List<com.adamant.global.v1.TxInput> txInputs_;
  /**
   * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.adamant.global.v1.TxInput> getTxInputsList() {
    return txInputs_;
  }
  /**
   * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.adamant.global.v1.TxInputOrBuilder> 
      getTxInputsOrBuilderList() {
    return txInputs_;
  }
  /**
   * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
   */
  @java.lang.Override
  public int getTxInputsCount() {
    return txInputs_.size();
  }
  /**
   * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
   */
  @java.lang.Override
  public com.adamant.global.v1.TxInput getTxInputs(int index) {
    return txInputs_.get(index);
  }
  /**
   * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
   */
  @java.lang.Override
  public com.adamant.global.v1.TxInputOrBuilder getTxInputsOrBuilder(
      int index) {
    return txInputs_.get(index);
  }

  public static final int TX_OUTPUTS_FIELD_NUMBER = 2;
  private java.util.List<com.adamant.global.v1.TxOutput> txOutputs_;
  /**
   * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
   */
  @java.lang.Override
  public java.util.List<com.adamant.global.v1.TxOutput> getTxOutputsList() {
    return txOutputs_;
  }
  /**
   * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.adamant.global.v1.TxOutputOrBuilder> 
      getTxOutputsOrBuilderList() {
    return txOutputs_;
  }
  /**
   * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
   */
  @java.lang.Override
  public int getTxOutputsCount() {
    return txOutputs_.size();
  }
  /**
   * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
   */
  @java.lang.Override
  public com.adamant.global.v1.TxOutput getTxOutputs(int index) {
    return txOutputs_.get(index);
  }
  /**
   * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
   */
  @java.lang.Override
  public com.adamant.global.v1.TxOutputOrBuilder getTxOutputsOrBuilder(
      int index) {
    return txOutputs_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < txInputs_.size(); i++) {
      output.writeMessage(1, txInputs_.get(i));
    }
    for (int i = 0; i < txOutputs_.size(); i++) {
      output.writeMessage(2, txOutputs_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < txInputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, txInputs_.get(i));
    }
    for (int i = 0; i < txOutputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, txOutputs_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.adamant.global.v1.LitecoinSpecific)) {
      return super.equals(obj);
    }
    com.adamant.global.v1.LitecoinSpecific other = (com.adamant.global.v1.LitecoinSpecific) obj;

    if (!getTxInputsList()
        .equals(other.getTxInputsList())) return false;
    if (!getTxOutputsList()
        .equals(other.getTxOutputsList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTxInputsCount() > 0) {
      hash = (37 * hash) + TX_INPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getTxInputsList().hashCode();
    }
    if (getTxOutputsCount() > 0) {
      hash = (37 * hash) + TX_OUTPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getTxOutputsList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.LitecoinSpecific parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.adamant.global.v1.LitecoinSpecific prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The model of Litecoin specific fields of transaction
   * </pre>
   *
   * Protobuf type {@code adamant.global.v1.LitecoinSpecific}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:adamant.global.v1.LitecoinSpecific)
      com.adamant.global.v1.LitecoinSpecificOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_LitecoinSpecific_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_LitecoinSpecific_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.adamant.global.v1.LitecoinSpecific.class, com.adamant.global.v1.LitecoinSpecific.Builder.class);
    }

    // Construct using com.adamant.global.v1.LitecoinSpecific.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTxInputsFieldBuilder();
        getTxOutputsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (txInputsBuilder_ == null) {
        txInputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        txInputsBuilder_.clear();
      }
      if (txOutputsBuilder_ == null) {
        txOutputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        txOutputsBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_LitecoinSpecific_descriptor;
    }

    @java.lang.Override
    public com.adamant.global.v1.LitecoinSpecific getDefaultInstanceForType() {
      return com.adamant.global.v1.LitecoinSpecific.getDefaultInstance();
    }

    @java.lang.Override
    public com.adamant.global.v1.LitecoinSpecific build() {
      com.adamant.global.v1.LitecoinSpecific result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.adamant.global.v1.LitecoinSpecific buildPartial() {
      com.adamant.global.v1.LitecoinSpecific result = new com.adamant.global.v1.LitecoinSpecific(this);
      int from_bitField0_ = bitField0_;
      if (txInputsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          txInputs_ = java.util.Collections.unmodifiableList(txInputs_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.txInputs_ = txInputs_;
      } else {
        result.txInputs_ = txInputsBuilder_.build();
      }
      if (txOutputsBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          txOutputs_ = java.util.Collections.unmodifiableList(txOutputs_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.txOutputs_ = txOutputs_;
      } else {
        result.txOutputs_ = txOutputsBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.adamant.global.v1.LitecoinSpecific) {
        return mergeFrom((com.adamant.global.v1.LitecoinSpecific)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.adamant.global.v1.LitecoinSpecific other) {
      if (other == com.adamant.global.v1.LitecoinSpecific.getDefaultInstance()) return this;
      if (txInputsBuilder_ == null) {
        if (!other.txInputs_.isEmpty()) {
          if (txInputs_.isEmpty()) {
            txInputs_ = other.txInputs_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTxInputsIsMutable();
            txInputs_.addAll(other.txInputs_);
          }
          onChanged();
        }
      } else {
        if (!other.txInputs_.isEmpty()) {
          if (txInputsBuilder_.isEmpty()) {
            txInputsBuilder_.dispose();
            txInputsBuilder_ = null;
            txInputs_ = other.txInputs_;
            bitField0_ = (bitField0_ & ~0x00000001);
            txInputsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTxInputsFieldBuilder() : null;
          } else {
            txInputsBuilder_.addAllMessages(other.txInputs_);
          }
        }
      }
      if (txOutputsBuilder_ == null) {
        if (!other.txOutputs_.isEmpty()) {
          if (txOutputs_.isEmpty()) {
            txOutputs_ = other.txOutputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTxOutputsIsMutable();
            txOutputs_.addAll(other.txOutputs_);
          }
          onChanged();
        }
      } else {
        if (!other.txOutputs_.isEmpty()) {
          if (txOutputsBuilder_.isEmpty()) {
            txOutputsBuilder_.dispose();
            txOutputsBuilder_ = null;
            txOutputs_ = other.txOutputs_;
            bitField0_ = (bitField0_ & ~0x00000002);
            txOutputsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTxOutputsFieldBuilder() : null;
          } else {
            txOutputsBuilder_.addAllMessages(other.txOutputs_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.adamant.global.v1.LitecoinSpecific parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.adamant.global.v1.LitecoinSpecific) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.adamant.global.v1.TxInput> txInputs_ =
      java.util.Collections.emptyList();
    private void ensureTxInputsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        txInputs_ = new java.util.ArrayList<com.adamant.global.v1.TxInput>(txInputs_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.adamant.global.v1.TxInput, com.adamant.global.v1.TxInput.Builder, com.adamant.global.v1.TxInputOrBuilder> txInputsBuilder_;

    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public java.util.List<com.adamant.global.v1.TxInput> getTxInputsList() {
      if (txInputsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(txInputs_);
      } else {
        return txInputsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public int getTxInputsCount() {
      if (txInputsBuilder_ == null) {
        return txInputs_.size();
      } else {
        return txInputsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public com.adamant.global.v1.TxInput getTxInputs(int index) {
      if (txInputsBuilder_ == null) {
        return txInputs_.get(index);
      } else {
        return txInputsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder setTxInputs(
        int index, com.adamant.global.v1.TxInput value) {
      if (txInputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxInputsIsMutable();
        txInputs_.set(index, value);
        onChanged();
      } else {
        txInputsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder setTxInputs(
        int index, com.adamant.global.v1.TxInput.Builder builderForValue) {
      if (txInputsBuilder_ == null) {
        ensureTxInputsIsMutable();
        txInputs_.set(index, builderForValue.build());
        onChanged();
      } else {
        txInputsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder addTxInputs(com.adamant.global.v1.TxInput value) {
      if (txInputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxInputsIsMutable();
        txInputs_.add(value);
        onChanged();
      } else {
        txInputsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder addTxInputs(
        int index, com.adamant.global.v1.TxInput value) {
      if (txInputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxInputsIsMutable();
        txInputs_.add(index, value);
        onChanged();
      } else {
        txInputsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder addTxInputs(
        com.adamant.global.v1.TxInput.Builder builderForValue) {
      if (txInputsBuilder_ == null) {
        ensureTxInputsIsMutable();
        txInputs_.add(builderForValue.build());
        onChanged();
      } else {
        txInputsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder addTxInputs(
        int index, com.adamant.global.v1.TxInput.Builder builderForValue) {
      if (txInputsBuilder_ == null) {
        ensureTxInputsIsMutable();
        txInputs_.add(index, builderForValue.build());
        onChanged();
      } else {
        txInputsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder addAllTxInputs(
        java.lang.Iterable<? extends com.adamant.global.v1.TxInput> values) {
      if (txInputsBuilder_ == null) {
        ensureTxInputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, txInputs_);
        onChanged();
      } else {
        txInputsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder clearTxInputs() {
      if (txInputsBuilder_ == null) {
        txInputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        txInputsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public Builder removeTxInputs(int index) {
      if (txInputsBuilder_ == null) {
        ensureTxInputsIsMutable();
        txInputs_.remove(index);
        onChanged();
      } else {
        txInputsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public com.adamant.global.v1.TxInput.Builder getTxInputsBuilder(
        int index) {
      return getTxInputsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public com.adamant.global.v1.TxInputOrBuilder getTxInputsOrBuilder(
        int index) {
      if (txInputsBuilder_ == null) {
        return txInputs_.get(index);  } else {
        return txInputsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public java.util.List<? extends com.adamant.global.v1.TxInputOrBuilder> 
         getTxInputsOrBuilderList() {
      if (txInputsBuilder_ != null) {
        return txInputsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(txInputs_);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public com.adamant.global.v1.TxInput.Builder addTxInputsBuilder() {
      return getTxInputsFieldBuilder().addBuilder(
          com.adamant.global.v1.TxInput.getDefaultInstance());
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public com.adamant.global.v1.TxInput.Builder addTxInputsBuilder(
        int index) {
      return getTxInputsFieldBuilder().addBuilder(
          index, com.adamant.global.v1.TxInput.getDefaultInstance());
    }
    /**
     * <code>repeated .adamant.global.v1.TxInput tx_inputs = 1 [json_name = "txInputs"];</code>
     */
    public java.util.List<com.adamant.global.v1.TxInput.Builder> 
         getTxInputsBuilderList() {
      return getTxInputsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.adamant.global.v1.TxInput, com.adamant.global.v1.TxInput.Builder, com.adamant.global.v1.TxInputOrBuilder> 
        getTxInputsFieldBuilder() {
      if (txInputsBuilder_ == null) {
        txInputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.adamant.global.v1.TxInput, com.adamant.global.v1.TxInput.Builder, com.adamant.global.v1.TxInputOrBuilder>(
                txInputs_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        txInputs_ = null;
      }
      return txInputsBuilder_;
    }

    private java.util.List<com.adamant.global.v1.TxOutput> txOutputs_ =
      java.util.Collections.emptyList();
    private void ensureTxOutputsIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        txOutputs_ = new java.util.ArrayList<com.adamant.global.v1.TxOutput>(txOutputs_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.adamant.global.v1.TxOutput, com.adamant.global.v1.TxOutput.Builder, com.adamant.global.v1.TxOutputOrBuilder> txOutputsBuilder_;

    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public java.util.List<com.adamant.global.v1.TxOutput> getTxOutputsList() {
      if (txOutputsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(txOutputs_);
      } else {
        return txOutputsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public int getTxOutputsCount() {
      if (txOutputsBuilder_ == null) {
        return txOutputs_.size();
      } else {
        return txOutputsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public com.adamant.global.v1.TxOutput getTxOutputs(int index) {
      if (txOutputsBuilder_ == null) {
        return txOutputs_.get(index);
      } else {
        return txOutputsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder setTxOutputs(
        int index, com.adamant.global.v1.TxOutput value) {
      if (txOutputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxOutputsIsMutable();
        txOutputs_.set(index, value);
        onChanged();
      } else {
        txOutputsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder setTxOutputs(
        int index, com.adamant.global.v1.TxOutput.Builder builderForValue) {
      if (txOutputsBuilder_ == null) {
        ensureTxOutputsIsMutable();
        txOutputs_.set(index, builderForValue.build());
        onChanged();
      } else {
        txOutputsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder addTxOutputs(com.adamant.global.v1.TxOutput value) {
      if (txOutputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxOutputsIsMutable();
        txOutputs_.add(value);
        onChanged();
      } else {
        txOutputsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder addTxOutputs(
        int index, com.adamant.global.v1.TxOutput value) {
      if (txOutputsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTxOutputsIsMutable();
        txOutputs_.add(index, value);
        onChanged();
      } else {
        txOutputsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder addTxOutputs(
        com.adamant.global.v1.TxOutput.Builder builderForValue) {
      if (txOutputsBuilder_ == null) {
        ensureTxOutputsIsMutable();
        txOutputs_.add(builderForValue.build());
        onChanged();
      } else {
        txOutputsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder addTxOutputs(
        int index, com.adamant.global.v1.TxOutput.Builder builderForValue) {
      if (txOutputsBuilder_ == null) {
        ensureTxOutputsIsMutable();
        txOutputs_.add(index, builderForValue.build());
        onChanged();
      } else {
        txOutputsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder addAllTxOutputs(
        java.lang.Iterable<? extends com.adamant.global.v1.TxOutput> values) {
      if (txOutputsBuilder_ == null) {
        ensureTxOutputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, txOutputs_);
        onChanged();
      } else {
        txOutputsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder clearTxOutputs() {
      if (txOutputsBuilder_ == null) {
        txOutputs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        txOutputsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public Builder removeTxOutputs(int index) {
      if (txOutputsBuilder_ == null) {
        ensureTxOutputsIsMutable();
        txOutputs_.remove(index);
        onChanged();
      } else {
        txOutputsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public com.adamant.global.v1.TxOutput.Builder getTxOutputsBuilder(
        int index) {
      return getTxOutputsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public com.adamant.global.v1.TxOutputOrBuilder getTxOutputsOrBuilder(
        int index) {
      if (txOutputsBuilder_ == null) {
        return txOutputs_.get(index);  } else {
        return txOutputsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public java.util.List<? extends com.adamant.global.v1.TxOutputOrBuilder> 
         getTxOutputsOrBuilderList() {
      if (txOutputsBuilder_ != null) {
        return txOutputsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(txOutputs_);
      }
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public com.adamant.global.v1.TxOutput.Builder addTxOutputsBuilder() {
      return getTxOutputsFieldBuilder().addBuilder(
          com.adamant.global.v1.TxOutput.getDefaultInstance());
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public com.adamant.global.v1.TxOutput.Builder addTxOutputsBuilder(
        int index) {
      return getTxOutputsFieldBuilder().addBuilder(
          index, com.adamant.global.v1.TxOutput.getDefaultInstance());
    }
    /**
     * <code>repeated .adamant.global.v1.TxOutput tx_outputs = 2 [json_name = "txOutputs"];</code>
     */
    public java.util.List<com.adamant.global.v1.TxOutput.Builder> 
         getTxOutputsBuilderList() {
      return getTxOutputsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.adamant.global.v1.TxOutput, com.adamant.global.v1.TxOutput.Builder, com.adamant.global.v1.TxOutputOrBuilder> 
        getTxOutputsFieldBuilder() {
      if (txOutputsBuilder_ == null) {
        txOutputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.adamant.global.v1.TxOutput, com.adamant.global.v1.TxOutput.Builder, com.adamant.global.v1.TxOutputOrBuilder>(
                txOutputs_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        txOutputs_ = null;
      }
      return txOutputsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:adamant.global.v1.LitecoinSpecific)
  }

  // @@protoc_insertion_point(class_scope:adamant.global.v1.LitecoinSpecific)
  private static final com.adamant.global.v1.LitecoinSpecific DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.adamant.global.v1.LitecoinSpecific();
  }

  public static com.adamant.global.v1.LitecoinSpecific getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LitecoinSpecific>
      PARSER = new com.google.protobuf.AbstractParser<LitecoinSpecific>() {
    @java.lang.Override
    public LitecoinSpecific parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new LitecoinSpecific(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<LitecoinSpecific> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LitecoinSpecific> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.adamant.global.v1.LitecoinSpecific getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

