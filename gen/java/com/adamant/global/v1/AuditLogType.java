// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

package com.adamant.global.v1;

/**
 * <pre>
 * AuditLogType is a type of AuditLog
 * </pre>
 *
 * Protobuf enum {@code adamant.global.v1.AuditLogType}
 */
public enum AuditLogType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>AUDIT_LOG_TYPE_INVALID = 0;</code>
   */
  AUDIT_LOG_TYPE_INVALID(0),
  /**
   * <code>AUDIT_LOG_TYPE_LOGIN = 1;</code>
   */
  AUDIT_LOG_TYPE_LOGIN(1),
  /**
   * <code>AUDIT_LOG_TYPE_LOGIN_FAIL = 2;</code>
   */
  AUDIT_LOG_TYPE_LOGIN_FAIL(2),
  /**
   * <code>AUDIT_LOG_TYPE_2FA_FAIL = 50;</code>
   */
  AUDIT_LOG_TYPE_2FA_FAIL(50),
  /**
   * <code>AUDIT_LOG_TYPE_LOGOUT = 3;</code>
   */
  AUDIT_LOG_TYPE_LOGOUT(3),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_CREATE = 4;</code>
   */
  AUDIT_LOG_TYPE_WALLET_CREATE(4),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_APPROVE = 5;</code>
   */
  AUDIT_LOG_TYPE_WALLET_APPROVE(5),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_CANCEL = 6;</code>
   */
  AUDIT_LOG_TYPE_WALLET_CANCEL(6),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_REGISTER_PUBKEY = 7;</code>
   */
  AUDIT_LOG_TYPE_WALLET_REGISTER_PUBKEY(7),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ARCHIVE = 8;</code>
   */
  AUDIT_LOG_TYPE_WALLET_ARCHIVE(8),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_UNARCHIVE = 9;</code>
   */
  AUDIT_LOG_TYPE_WALLET_UNARCHIVE(9),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NAME_CHANGE = 10;</code>
   */
  AUDIT_LOG_TYPE_WALLET_NAME_CHANGE(10),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_POLICY_CHANGE = 11;</code>
   */
  AUDIT_LOG_TYPE_WALLET_POLICY_CHANGE(11),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_REQUEST = 12;</code>
   */
  AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_REQUEST(12),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_APPROVE = 13;</code>
   */
  AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_APPROVE(13),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_CANCEL = 14;</code>
   */
  AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_CANCEL(14),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_UPLOAD = 51;</code>
   */
  AUDIT_LOG_TYPE_WALLET_ADDRESS_UPLOAD(51),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_DOWNLOAD = 52;</code>
   */
  AUDIT_LOG_TYPE_WALLET_ADDRESS_DOWNLOAD(52),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_DELETE = 53;</code>
   */
  AUDIT_LOG_TYPE_WALLET_ADDRESS_DELETE(53),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_CREATE = 54;</code>
   */
  AUDIT_LOG_TYPE_WALLET_GROUP_CREATE(54),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_NAME_CHANGE = 55;</code>
   */
  AUDIT_LOG_TYPE_WALLET_GROUP_NAME_CHANGE(55),
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_CHANGE = 56;</code>
   */
  AUDIT_LOG_TYPE_WALLET_GROUP_CHANGE(56),
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_CREATE = 15;</code>
   */
  AUDIT_LOG_TYPE_TRANSACTION_CREATE(15),
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_APPROVE = 16;</code>
   */
  AUDIT_LOG_TYPE_TRANSACTION_APPROVE(16),
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_CANCEL = 17;</code>
   */
  AUDIT_LOG_TYPE_TRANSACTION_CANCEL(17),
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_REGISTER_SIGNATURE = 18;</code>
   */
  AUDIT_LOG_TYPE_TRANSACTION_REGISTER_SIGNATURE(18),
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_SUBMIT = 19;</code>
   */
  AUDIT_LOG_TYPE_TRANSACTION_SUBMIT(19),
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_PASSWORD_CHANGE = 20;</code>
   */
  AUDIT_LOG_TYPE_ACCOUNT_PASSWORD_CHANGE(20),
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_EMAIL_CHANGE = 21;</code>
   */
  AUDIT_LOG_TYPE_ACCOUNT_EMAIL_CHANGE(21),
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_INVITE = 22;</code>
   */
  AUDIT_LOG_TYPE_ACCOUNT_INVITE(22),
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_ARCHIVE = 23;</code>
   */
  AUDIT_LOG_TYPE_ACCOUNT_ARCHIVE(23),
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_UNARCHIVE = 24;</code>
   */
  AUDIT_LOG_TYPE_ACCOUNT_UNARCHIVE(24),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CREATE = 25;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CREATE(25),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CHANGE_PERMISSION = 26;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CHANGE_PERMISSION(26),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_ACTIVATE = 27;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_ACTIVATE(27),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_INACTIVE = 28;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_INACTIVE(28),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_DELETE = 29;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_DELETE(29),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_CREATE = 30;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_CREATE(30),
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_DELETE = 31;</code>
   */
  AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_DELETE(31),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_CREATE = 32;</code>
   */
  AUDIT_LOG_TYPE_POLICY_ADDRESS_CREATE(32),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_DELETE = 33;</code>
   */
  AUDIT_LOG_TYPE_POLICY_ADDRESS_DELETE(33),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_APPROVE = 34;</code>
   */
  AUDIT_LOG_TYPE_POLICY_ADDRESS_APPROVE(34),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_CANCEL = 35;</code>
   */
  AUDIT_LOG_TYPE_POLICY_ADDRESS_CANCEL(35),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CREATE = 36;</code>
   */
  AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CREATE(36),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CHANGE = 37;</code>
   */
  AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CHANGE(37),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_DELETE = 38;</code>
   */
  AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_DELETE(38),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_APPROVE = 39;</code>
   */
  AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_APPROVE(39),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CANCEL = 40;</code>
   */
  AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CANCEL(40),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_CREATE = 41;</code>
   */
  AUDIT_LOG_TYPE_POLICY_WHITELIST_CREATE(41),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_CHANGE = 42;</code>
   */
  AUDIT_LOG_TYPE_POLICY_WHITELIST_CHANGE(42),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_DELETE = 43;</code>
   */
  AUDIT_LOG_TYPE_POLICY_WHITELIST_DELETE(43),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_CREATE = 44;</code>
   */
  AUDIT_LOG_TYPE_POLICY_POLICY_CREATE(44),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_CHANGE = 45;</code>
   */
  AUDIT_LOG_TYPE_POLICY_POLICY_CHANGE(45),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_DELETE = 46;</code>
   */
  AUDIT_LOG_TYPE_POLICY_POLICY_DELETE(46),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_REQUEST_NO_WHITELIST = 47;</code>
   */
  AUDIT_LOG_TYPE_POLICY_REQUEST_NO_WHITELIST(47),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_APPROVE_NO_WHITELIST = 48;</code>
   */
  AUDIT_LOG_TYPE_POLICY_APPROVE_NO_WHITELIST(48),
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_CANCEL_NO_WHITELIST = 49;</code>
   */
  AUDIT_LOG_TYPE_POLICY_CANCEL_NO_WHITELIST(49),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>AUDIT_LOG_TYPE_INVALID = 0;</code>
   */
  public static final int AUDIT_LOG_TYPE_INVALID_VALUE = 0;
  /**
   * <code>AUDIT_LOG_TYPE_LOGIN = 1;</code>
   */
  public static final int AUDIT_LOG_TYPE_LOGIN_VALUE = 1;
  /**
   * <code>AUDIT_LOG_TYPE_LOGIN_FAIL = 2;</code>
   */
  public static final int AUDIT_LOG_TYPE_LOGIN_FAIL_VALUE = 2;
  /**
   * <code>AUDIT_LOG_TYPE_2FA_FAIL = 50;</code>
   */
  public static final int AUDIT_LOG_TYPE_2FA_FAIL_VALUE = 50;
  /**
   * <code>AUDIT_LOG_TYPE_LOGOUT = 3;</code>
   */
  public static final int AUDIT_LOG_TYPE_LOGOUT_VALUE = 3;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_CREATE = 4;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_CREATE_VALUE = 4;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_APPROVE = 5;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_APPROVE_VALUE = 5;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_CANCEL = 6;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_CANCEL_VALUE = 6;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_REGISTER_PUBKEY = 7;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_REGISTER_PUBKEY_VALUE = 7;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ARCHIVE = 8;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_ARCHIVE_VALUE = 8;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_UNARCHIVE = 9;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_UNARCHIVE_VALUE = 9;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NAME_CHANGE = 10;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_NAME_CHANGE_VALUE = 10;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_POLICY_CHANGE = 11;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_POLICY_CHANGE_VALUE = 11;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_REQUEST = 12;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_REQUEST_VALUE = 12;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_APPROVE = 13;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_APPROVE_VALUE = 13;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_CANCEL = 14;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_CANCEL_VALUE = 14;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_UPLOAD = 51;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_ADDRESS_UPLOAD_VALUE = 51;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_DOWNLOAD = 52;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_ADDRESS_DOWNLOAD_VALUE = 52;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_ADDRESS_DELETE = 53;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_ADDRESS_DELETE_VALUE = 53;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_CREATE = 54;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_GROUP_CREATE_VALUE = 54;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_NAME_CHANGE = 55;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_GROUP_NAME_CHANGE_VALUE = 55;
  /**
   * <code>AUDIT_LOG_TYPE_WALLET_GROUP_CHANGE = 56;</code>
   */
  public static final int AUDIT_LOG_TYPE_WALLET_GROUP_CHANGE_VALUE = 56;
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_CREATE = 15;</code>
   */
  public static final int AUDIT_LOG_TYPE_TRANSACTION_CREATE_VALUE = 15;
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_APPROVE = 16;</code>
   */
  public static final int AUDIT_LOG_TYPE_TRANSACTION_APPROVE_VALUE = 16;
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_CANCEL = 17;</code>
   */
  public static final int AUDIT_LOG_TYPE_TRANSACTION_CANCEL_VALUE = 17;
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_REGISTER_SIGNATURE = 18;</code>
   */
  public static final int AUDIT_LOG_TYPE_TRANSACTION_REGISTER_SIGNATURE_VALUE = 18;
  /**
   * <code>AUDIT_LOG_TYPE_TRANSACTION_SUBMIT = 19;</code>
   */
  public static final int AUDIT_LOG_TYPE_TRANSACTION_SUBMIT_VALUE = 19;
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_PASSWORD_CHANGE = 20;</code>
   */
  public static final int AUDIT_LOG_TYPE_ACCOUNT_PASSWORD_CHANGE_VALUE = 20;
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_EMAIL_CHANGE = 21;</code>
   */
  public static final int AUDIT_LOG_TYPE_ACCOUNT_EMAIL_CHANGE_VALUE = 21;
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_INVITE = 22;</code>
   */
  public static final int AUDIT_LOG_TYPE_ACCOUNT_INVITE_VALUE = 22;
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_ARCHIVE = 23;</code>
   */
  public static final int AUDIT_LOG_TYPE_ACCOUNT_ARCHIVE_VALUE = 23;
  /**
   * <code>AUDIT_LOG_TYPE_ACCOUNT_UNARCHIVE = 24;</code>
   */
  public static final int AUDIT_LOG_TYPE_ACCOUNT_UNARCHIVE_VALUE = 24;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CREATE = 25;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CREATE_VALUE = 25;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CHANGE_PERMISSION = 26;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CHANGE_PERMISSION_VALUE = 26;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_ACTIVATE = 27;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_ACTIVATE_VALUE = 27;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_INACTIVE = 28;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_INACTIVE_VALUE = 28;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_DELETE = 29;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_DELETE_VALUE = 29;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_CREATE = 30;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_CREATE_VALUE = 30;
  /**
   * <code>AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_DELETE = 31;</code>
   */
  public static final int AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_DELETE_VALUE = 31;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_CREATE = 32;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_ADDRESS_CREATE_VALUE = 32;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_DELETE = 33;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_ADDRESS_DELETE_VALUE = 33;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_APPROVE = 34;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_ADDRESS_APPROVE_VALUE = 34;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_ADDRESS_CANCEL = 35;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_ADDRESS_CANCEL_VALUE = 35;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CREATE = 36;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CREATE_VALUE = 36;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CHANGE = 37;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CHANGE_VALUE = 37;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_DELETE = 38;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_DELETE_VALUE = 38;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_APPROVE = 39;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_APPROVE_VALUE = 39;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CANCEL = 40;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CANCEL_VALUE = 40;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_CREATE = 41;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_WHITELIST_CREATE_VALUE = 41;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_CHANGE = 42;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_WHITELIST_CHANGE_VALUE = 42;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_WHITELIST_DELETE = 43;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_WHITELIST_DELETE_VALUE = 43;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_CREATE = 44;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_POLICY_CREATE_VALUE = 44;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_CHANGE = 45;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_POLICY_CHANGE_VALUE = 45;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_POLICY_DELETE = 46;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_POLICY_DELETE_VALUE = 46;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_REQUEST_NO_WHITELIST = 47;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_REQUEST_NO_WHITELIST_VALUE = 47;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_APPROVE_NO_WHITELIST = 48;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_APPROVE_NO_WHITELIST_VALUE = 48;
  /**
   * <code>AUDIT_LOG_TYPE_POLICY_CANCEL_NO_WHITELIST = 49;</code>
   */
  public static final int AUDIT_LOG_TYPE_POLICY_CANCEL_NO_WHITELIST_VALUE = 49;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AuditLogType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static AuditLogType forNumber(int value) {
    switch (value) {
      case 0: return AUDIT_LOG_TYPE_INVALID;
      case 1: return AUDIT_LOG_TYPE_LOGIN;
      case 2: return AUDIT_LOG_TYPE_LOGIN_FAIL;
      case 50: return AUDIT_LOG_TYPE_2FA_FAIL;
      case 3: return AUDIT_LOG_TYPE_LOGOUT;
      case 4: return AUDIT_LOG_TYPE_WALLET_CREATE;
      case 5: return AUDIT_LOG_TYPE_WALLET_APPROVE;
      case 6: return AUDIT_LOG_TYPE_WALLET_CANCEL;
      case 7: return AUDIT_LOG_TYPE_WALLET_REGISTER_PUBKEY;
      case 8: return AUDIT_LOG_TYPE_WALLET_ARCHIVE;
      case 9: return AUDIT_LOG_TYPE_WALLET_UNARCHIVE;
      case 10: return AUDIT_LOG_TYPE_WALLET_NAME_CHANGE;
      case 11: return AUDIT_LOG_TYPE_WALLET_POLICY_CHANGE;
      case 12: return AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_REQUEST;
      case 13: return AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_APPROVE;
      case 14: return AUDIT_LOG_TYPE_WALLET_NO_WHITELIST_CANCEL;
      case 51: return AUDIT_LOG_TYPE_WALLET_ADDRESS_UPLOAD;
      case 52: return AUDIT_LOG_TYPE_WALLET_ADDRESS_DOWNLOAD;
      case 53: return AUDIT_LOG_TYPE_WALLET_ADDRESS_DELETE;
      case 54: return AUDIT_LOG_TYPE_WALLET_GROUP_CREATE;
      case 55: return AUDIT_LOG_TYPE_WALLET_GROUP_NAME_CHANGE;
      case 56: return AUDIT_LOG_TYPE_WALLET_GROUP_CHANGE;
      case 15: return AUDIT_LOG_TYPE_TRANSACTION_CREATE;
      case 16: return AUDIT_LOG_TYPE_TRANSACTION_APPROVE;
      case 17: return AUDIT_LOG_TYPE_TRANSACTION_CANCEL;
      case 18: return AUDIT_LOG_TYPE_TRANSACTION_REGISTER_SIGNATURE;
      case 19: return AUDIT_LOG_TYPE_TRANSACTION_SUBMIT;
      case 20: return AUDIT_LOG_TYPE_ACCOUNT_PASSWORD_CHANGE;
      case 21: return AUDIT_LOG_TYPE_ACCOUNT_EMAIL_CHANGE;
      case 22: return AUDIT_LOG_TYPE_ACCOUNT_INVITE;
      case 23: return AUDIT_LOG_TYPE_ACCOUNT_ARCHIVE;
      case 24: return AUDIT_LOG_TYPE_ACCOUNT_UNARCHIVE;
      case 25: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CREATE;
      case 26: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_CHANGE_PERMISSION;
      case 27: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_ACTIVATE;
      case 28: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_INACTIVE;
      case 29: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_DELETE;
      case 30: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_CREATE;
      case 31: return AUDIT_LOG_TYPE_SERVICE_ACCOUNT_KEY_DELETE;
      case 32: return AUDIT_LOG_TYPE_POLICY_ADDRESS_CREATE;
      case 33: return AUDIT_LOG_TYPE_POLICY_ADDRESS_DELETE;
      case 34: return AUDIT_LOG_TYPE_POLICY_ADDRESS_APPROVE;
      case 35: return AUDIT_LOG_TYPE_POLICY_ADDRESS_CANCEL;
      case 36: return AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CREATE;
      case 37: return AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CHANGE;
      case 38: return AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_DELETE;
      case 39: return AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_APPROVE;
      case 40: return AUDIT_LOG_TYPE_POLICY_SPENDING_LIMIT_CANCEL;
      case 41: return AUDIT_LOG_TYPE_POLICY_WHITELIST_CREATE;
      case 42: return AUDIT_LOG_TYPE_POLICY_WHITELIST_CHANGE;
      case 43: return AUDIT_LOG_TYPE_POLICY_WHITELIST_DELETE;
      case 44: return AUDIT_LOG_TYPE_POLICY_POLICY_CREATE;
      case 45: return AUDIT_LOG_TYPE_POLICY_POLICY_CHANGE;
      case 46: return AUDIT_LOG_TYPE_POLICY_POLICY_DELETE;
      case 47: return AUDIT_LOG_TYPE_POLICY_REQUEST_NO_WHITELIST;
      case 48: return AUDIT_LOG_TYPE_POLICY_APPROVE_NO_WHITELIST;
      case 49: return AUDIT_LOG_TYPE_POLICY_CANCEL_NO_WHITELIST;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AuditLogType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AuditLogType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AuditLogType>() {
          public AuditLogType findValueByNumber(int number) {
            return AuditLogType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.adamant.global.v1.EnumProto.getDescriptor().getEnumTypes().get(14);
  }

  private static final AuditLogType[] VALUES = values();

  public static AuditLogType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AuditLogType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:adamant.global.v1.AuditLogType)
}

