// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package com.adamant.global.v1;

/**
 * <pre>
 * The model of total balace
 * </pre>
 *
 * Protobuf type {@code adamant.global.v1.TotalBalance}
 */
public final class TotalBalance extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:adamant.global.v1.TotalBalance)
    TotalBalanceOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TotalBalance.newBuilder() to construct.
  private TotalBalance(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TotalBalance() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TotalBalance();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TotalBalance(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              totalBalances_ = com.google.protobuf.MapField.newMapField(
                  TotalBalancesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
            totalBalances__ = input.readMessage(
                TotalBalancesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            totalBalances_.getMutableMap().put(
                totalBalances__.getKey(), totalBalances__.getValue());
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetTotalBalances();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.adamant.global.v1.TotalBalance.class, com.adamant.global.v1.TotalBalance.Builder.class);
  }

  public static final int TOTAL_BALANCES_FIELD_NUMBER = 1;
  private static final class TotalBalancesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>newDefaultInstance(
                com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_TotalBalancesEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.UINT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.adamant.global.v1.TotalBalanceByCoin.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> totalBalances_;
  private com.google.protobuf.MapField<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
  internalGetTotalBalances() {
    if (totalBalances_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          TotalBalancesDefaultEntryHolder.defaultEntry);
    }
    return totalBalances_;
  }

  public int getTotalBalancesCount() {
    return internalGetTotalBalances().getMap().size();
  }
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
   */

  @java.lang.Override
  public boolean containsTotalBalances(
      int key) {
    
    return internalGetTotalBalances().getMap().containsKey(key);
  }
  /**
   * Use {@link #getTotalBalancesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> getTotalBalances() {
    return getTotalBalancesMap();
  }
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> getTotalBalancesMap() {
    return internalGetTotalBalances().getMap();
  }
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
   */
  @java.lang.Override

  public com.adamant.global.v1.TotalBalanceByCoin getTotalBalancesOrDefault(
      int key,
      com.adamant.global.v1.TotalBalanceByCoin defaultValue) {
    
    java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> map =
        internalGetTotalBalances().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
   */
  @java.lang.Override

  public com.adamant.global.v1.TotalBalanceByCoin getTotalBalancesOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> map =
        internalGetTotalBalances().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeIntegerMapTo(
        output,
        internalGetTotalBalances(),
        TotalBalancesDefaultEntryHolder.defaultEntry,
        1);
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> entry
         : internalGetTotalBalances().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
      totalBalances__ = TotalBalancesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, totalBalances__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.adamant.global.v1.TotalBalance)) {
      return super.equals(obj);
    }
    com.adamant.global.v1.TotalBalance other = (com.adamant.global.v1.TotalBalance) obj;

    if (!internalGetTotalBalances().equals(
        other.internalGetTotalBalances())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetTotalBalances().getMap().isEmpty()) {
      hash = (37 * hash) + TOTAL_BALANCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetTotalBalances().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.adamant.global.v1.TotalBalance parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.TotalBalance parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.TotalBalance parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.TotalBalance parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.adamant.global.v1.TotalBalance prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The model of total balace
   * </pre>
   *
   * Protobuf type {@code adamant.global.v1.TotalBalance}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:adamant.global.v1.TotalBalance)
      com.adamant.global.v1.TotalBalanceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetTotalBalances();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableTotalBalances();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.adamant.global.v1.TotalBalance.class, com.adamant.global.v1.TotalBalance.Builder.class);
    }

    // Construct using com.adamant.global.v1.TotalBalance.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      internalGetMutableTotalBalances().clear();
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_TotalBalance_descriptor;
    }

    @java.lang.Override
    public com.adamant.global.v1.TotalBalance getDefaultInstanceForType() {
      return com.adamant.global.v1.TotalBalance.getDefaultInstance();
    }

    @java.lang.Override
    public com.adamant.global.v1.TotalBalance build() {
      com.adamant.global.v1.TotalBalance result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.adamant.global.v1.TotalBalance buildPartial() {
      com.adamant.global.v1.TotalBalance result = new com.adamant.global.v1.TotalBalance(this);
      int from_bitField0_ = bitField0_;
      result.totalBalances_ = internalGetTotalBalances();
      result.totalBalances_.makeImmutable();
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.adamant.global.v1.TotalBalance) {
        return mergeFrom((com.adamant.global.v1.TotalBalance)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.adamant.global.v1.TotalBalance other) {
      if (other == com.adamant.global.v1.TotalBalance.getDefaultInstance()) return this;
      internalGetMutableTotalBalances().mergeFrom(
          other.internalGetTotalBalances());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.adamant.global.v1.TotalBalance parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.adamant.global.v1.TotalBalance) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> totalBalances_;
    private com.google.protobuf.MapField<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
    internalGetTotalBalances() {
      if (totalBalances_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TotalBalancesDefaultEntryHolder.defaultEntry);
      }
      return totalBalances_;
    }
    private com.google.protobuf.MapField<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
    internalGetMutableTotalBalances() {
      onChanged();;
      if (totalBalances_ == null) {
        totalBalances_ = com.google.protobuf.MapField.newMapField(
            TotalBalancesDefaultEntryHolder.defaultEntry);
      }
      if (!totalBalances_.isMutable()) {
        totalBalances_ = totalBalances_.copy();
      }
      return totalBalances_;
    }

    public int getTotalBalancesCount() {
      return internalGetTotalBalances().getMap().size();
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */

    @java.lang.Override
    public boolean containsTotalBalances(
        int key) {
      
      return internalGetTotalBalances().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTotalBalancesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> getTotalBalances() {
      return getTotalBalancesMap();
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> getTotalBalancesMap() {
      return internalGetTotalBalances().getMap();
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */
    @java.lang.Override

    public com.adamant.global.v1.TotalBalanceByCoin getTotalBalancesOrDefault(
        int key,
        com.adamant.global.v1.TotalBalanceByCoin defaultValue) {
      
      java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> map =
          internalGetTotalBalances().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */
    @java.lang.Override

    public com.adamant.global.v1.TotalBalanceByCoin getTotalBalancesOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> map =
          internalGetTotalBalances().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearTotalBalances() {
      internalGetMutableTotalBalances().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */

    public Builder removeTotalBalances(
        int key) {
      
      internalGetMutableTotalBalances().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin>
    getMutableTotalBalances() {
      return internalGetMutableTotalBalances().getMutableMap();
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */
    public Builder putTotalBalances(
        int key,
        com.adamant.global.v1.TotalBalanceByCoin value) {
      
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableTotalBalances().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * map&lt;k, v&gt; ... k: enum number of Coin / v: TotalBalanceByCoin
     * </pre>
     *
     * <code>map&lt;uint32, .adamant.global.v1.TotalBalanceByCoin&gt; total_balances = 1 [json_name = "totalBalances", (.validate.rules) = { ... }</code>
     */

    public Builder putAllTotalBalances(
        java.util.Map<java.lang.Integer, com.adamant.global.v1.TotalBalanceByCoin> values) {
      internalGetMutableTotalBalances().getMutableMap()
          .putAll(values);
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:adamant.global.v1.TotalBalance)
  }

  // @@protoc_insertion_point(class_scope:adamant.global.v1.TotalBalance)
  private static final com.adamant.global.v1.TotalBalance DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.adamant.global.v1.TotalBalance();
  }

  public static com.adamant.global.v1.TotalBalance getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TotalBalance>
      PARSER = new com.google.protobuf.AbstractParser<TotalBalance>() {
    @java.lang.Override
    public TotalBalance parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TotalBalance(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TotalBalance> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TotalBalance> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.adamant.global.v1.TotalBalance getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

