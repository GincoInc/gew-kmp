// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package com.adamant.global.v1;

public interface RateSnapshotOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.RateSnapshot)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string rate_snapshot_id = 1 [json_name = "rateSnapshotId"];</code>
   * @return The rateSnapshotId.
   */
  java.lang.String getRateSnapshotId();
  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string rate_snapshot_id = 1 [json_name = "rateSnapshotId"];</code>
   * @return The bytes for rateSnapshotId.
   */
  com.google.protobuf.ByteString
      getRateSnapshotIdBytes();

  /**
   * <pre>
   * RatesEntry: map&lt;k, v&gt; / k: enum number of Coin, v: Rate
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.Rate&gt; rates = 2 [json_name = "rates"];</code>
   */
  int getRatesCount();
  /**
   * <pre>
   * RatesEntry: map&lt;k, v&gt; / k: enum number of Coin, v: Rate
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.Rate&gt; rates = 2 [json_name = "rates"];</code>
   */
  boolean containsRates(
      int key);
  /**
   * Use {@link #getRatesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, com.adamant.global.v1.Rate>
  getRates();
  /**
   * <pre>
   * RatesEntry: map&lt;k, v&gt; / k: enum number of Coin, v: Rate
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.Rate&gt; rates = 2 [json_name = "rates"];</code>
   */
  java.util.Map<java.lang.Integer, com.adamant.global.v1.Rate>
  getRatesMap();
  /**
   * <pre>
   * RatesEntry: map&lt;k, v&gt; / k: enum number of Coin, v: Rate
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.Rate&gt; rates = 2 [json_name = "rates"];</code>
   */

  com.adamant.global.v1.Rate getRatesOrDefault(
      int key,
      com.adamant.global.v1.Rate defaultValue);
  /**
   * <pre>
   * RatesEntry: map&lt;k, v&gt; / k: enum number of Coin, v: Rate
   * </pre>
   *
   * <code>map&lt;uint32, .adamant.global.v1.Rate&gt; rates = 2 [json_name = "rates"];</code>
   */

  com.adamant.global.v1.Rate getRatesOrThrow(
      int key);
}
