// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

package com.adamant.global.v1;

/**
 * Protobuf enum {@code adamant.global.v1.MailType}
 */
public enum MailType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>MAIL_TYPE_INVALID = 0;</code>
   */
  MAIL_TYPE_INVALID(0),
  /**
   * <code>MAIL_TYPE_USER_INVITED = 1;</code>
   */
  MAIL_TYPE_USER_INVITED(1),
  /**
   * <code>MAIL_TYPE_PASSWORD_RESET_REQUEST = 2;</code>
   */
  MAIL_TYPE_PASSWORD_RESET_REQUEST(2),
  /**
   * <code>MAIL_TYPE_PASSWORD_UPDATED = 3;</code>
   */
  MAIL_TYPE_PASSWORD_UPDATED(3),
  /**
   * <code>MAIL_TYPE_EMAIL_UPDATE_REQUEST = 4;</code>
   */
  MAIL_TYPE_EMAIL_UPDATE_REQUEST(4),
  /**
   * <code>MAIL_TYPE_EMAIL_UPDATED = 5;</code>
   */
  MAIL_TYPE_EMAIL_UPDATED(5),
  /**
   * <code>MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED = 6;</code>
   */
  MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED(6),
  /**
   * <code>MAIL_TYPE_IMPORT_ADDRESS_COMPLETED = 7;</code>
   */
  MAIL_TYPE_IMPORT_ADDRESS_COMPLETED(7),
  /**
   * <code>MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED = 8;</code>
   */
  MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED(8),
  /**
   * <code>MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS = 9;</code>
   */
  MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS(9),
  /**
   * <code>MAIL_TYPE_DOWNLOAD_RESOURCE = 10;</code>
   */
  MAIL_TYPE_DOWNLOAD_RESOURCE(10),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>MAIL_TYPE_INVALID = 0;</code>
   */
  public static final int MAIL_TYPE_INVALID_VALUE = 0;
  /**
   * <code>MAIL_TYPE_USER_INVITED = 1;</code>
   */
  public static final int MAIL_TYPE_USER_INVITED_VALUE = 1;
  /**
   * <code>MAIL_TYPE_PASSWORD_RESET_REQUEST = 2;</code>
   */
  public static final int MAIL_TYPE_PASSWORD_RESET_REQUEST_VALUE = 2;
  /**
   * <code>MAIL_TYPE_PASSWORD_UPDATED = 3;</code>
   */
  public static final int MAIL_TYPE_PASSWORD_UPDATED_VALUE = 3;
  /**
   * <code>MAIL_TYPE_EMAIL_UPDATE_REQUEST = 4;</code>
   */
  public static final int MAIL_TYPE_EMAIL_UPDATE_REQUEST_VALUE = 4;
  /**
   * <code>MAIL_TYPE_EMAIL_UPDATED = 5;</code>
   */
  public static final int MAIL_TYPE_EMAIL_UPDATED_VALUE = 5;
  /**
   * <code>MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED = 6;</code>
   */
  public static final int MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED_VALUE = 6;
  /**
   * <code>MAIL_TYPE_IMPORT_ADDRESS_COMPLETED = 7;</code>
   */
  public static final int MAIL_TYPE_IMPORT_ADDRESS_COMPLETED_VALUE = 7;
  /**
   * <code>MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED = 8;</code>
   */
  public static final int MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED_VALUE = 8;
  /**
   * <code>MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS = 9;</code>
   */
  public static final int MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS_VALUE = 9;
  /**
   * <code>MAIL_TYPE_DOWNLOAD_RESOURCE = 10;</code>
   */
  public static final int MAIL_TYPE_DOWNLOAD_RESOURCE_VALUE = 10;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MailType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static MailType forNumber(int value) {
    switch (value) {
      case 0: return MAIL_TYPE_INVALID;
      case 1: return MAIL_TYPE_USER_INVITED;
      case 2: return MAIL_TYPE_PASSWORD_RESET_REQUEST;
      case 3: return MAIL_TYPE_PASSWORD_UPDATED;
      case 4: return MAIL_TYPE_EMAIL_UPDATE_REQUEST;
      case 5: return MAIL_TYPE_EMAIL_UPDATED;
      case 6: return MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED;
      case 7: return MAIL_TYPE_IMPORT_ADDRESS_COMPLETED;
      case 8: return MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED;
      case 9: return MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS;
      case 10: return MAIL_TYPE_DOWNLOAD_RESOURCE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MailType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MailType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MailType>() {
          public MailType findValueByNumber(int number) {
            return MailType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.adamant.global.v1.EnumProto.getDescriptor().getEnumTypes().get(17);
  }

  private static final MailType[] VALUES = values();

  public static MailType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MailType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:adamant.global.v1.MailType)
}

