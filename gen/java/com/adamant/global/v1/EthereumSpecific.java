// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package com.adamant.global.v1;

/**
 * <pre>
 * The model of Ethereum specific fields of transaction
 * </pre>
 *
 * Protobuf type {@code adamant.global.v1.EthereumSpecific}
 */
public final class EthereumSpecific extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:adamant.global.v1.EthereumSpecific)
    EthereumSpecificOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EthereumSpecific.newBuilder() to construct.
  private EthereumSpecific(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EthereumSpecific() {
    methodIdType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new EthereumSpecific();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EthereumSpecific(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            gasLimit_ = input.readUInt64();
            break;
          }
          case 16: {

            nonce_ = input.readUInt64();
            break;
          }
          case 24: {

            isNextNonce_ = input.readBool();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            methodIdType_ = rawValue;
            break;
          }
          case 40: {

            expiration_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_EthereumSpecific_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_EthereumSpecific_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.adamant.global.v1.EthereumSpecific.class, com.adamant.global.v1.EthereumSpecific.Builder.class);
  }

  public static final int GAS_LIMIT_FIELD_NUMBER = 1;
  private long gasLimit_;
  /**
   * <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
   * @return The gasLimit.
   */
  @java.lang.Override
  public long getGasLimit() {
    return gasLimit_;
  }

  public static final int NONCE_FIELD_NUMBER = 2;
  private long nonce_;
  /**
   * <code>uint64 nonce = 2 [json_name = "nonce"];</code>
   * @return The nonce.
   */
  @java.lang.Override
  public long getNonce() {
    return nonce_;
  }

  public static final int IS_NEXT_NONCE_FIELD_NUMBER = 3;
  private boolean isNextNonce_;
  /**
   * <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
   * @return The isNextNonce.
   */
  @java.lang.Override
  public boolean getIsNextNonce() {
    return isNextNonce_;
  }

  public static final int METHOD_ID_TYPE_FIELD_NUMBER = 4;
  private int methodIdType_;
  /**
   * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
   * @return The enum numeric value on the wire for methodIdType.
   */
  @java.lang.Override public int getMethodIdTypeValue() {
    return methodIdType_;
  }
  /**
   * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
   * @return The methodIdType.
   */
  @java.lang.Override public com.adamant.global.v1.EthereumContractMethodIDType getMethodIdType() {
    @SuppressWarnings("deprecation")
    com.adamant.global.v1.EthereumContractMethodIDType result = com.adamant.global.v1.EthereumContractMethodIDType.valueOf(methodIdType_);
    return result == null ? com.adamant.global.v1.EthereumContractMethodIDType.UNRECOGNIZED : result;
  }

  public static final int EXPIRATION_FIELD_NUMBER = 5;
  private long expiration_;
  /**
   * <code>uint64 expiration = 5 [json_name = "expiration"];</code>
   * @return The expiration.
   */
  @java.lang.Override
  public long getExpiration() {
    return expiration_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (gasLimit_ != 0L) {
      output.writeUInt64(1, gasLimit_);
    }
    if (nonce_ != 0L) {
      output.writeUInt64(2, nonce_);
    }
    if (isNextNonce_ != false) {
      output.writeBool(3, isNextNonce_);
    }
    if (methodIdType_ != com.adamant.global.v1.EthereumContractMethodIDType.ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID.getNumber()) {
      output.writeEnum(4, methodIdType_);
    }
    if (expiration_ != 0L) {
      output.writeUInt64(5, expiration_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (gasLimit_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(1, gasLimit_);
    }
    if (nonce_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, nonce_);
    }
    if (isNextNonce_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isNextNonce_);
    }
    if (methodIdType_ != com.adamant.global.v1.EthereumContractMethodIDType.ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, methodIdType_);
    }
    if (expiration_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(5, expiration_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.adamant.global.v1.EthereumSpecific)) {
      return super.equals(obj);
    }
    com.adamant.global.v1.EthereumSpecific other = (com.adamant.global.v1.EthereumSpecific) obj;

    if (getGasLimit()
        != other.getGasLimit()) return false;
    if (getNonce()
        != other.getNonce()) return false;
    if (getIsNextNonce()
        != other.getIsNextNonce()) return false;
    if (methodIdType_ != other.methodIdType_) return false;
    if (getExpiration()
        != other.getExpiration()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + GAS_LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGasLimit());
    hash = (37 * hash) + NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getNonce());
    hash = (37 * hash) + IS_NEXT_NONCE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsNextNonce());
    hash = (37 * hash) + METHOD_ID_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + methodIdType_;
    hash = (37 * hash) + EXPIRATION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getExpiration());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.EthereumSpecific parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.EthereumSpecific parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.adamant.global.v1.EthereumSpecific parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.adamant.global.v1.EthereumSpecific prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The model of Ethereum specific fields of transaction
   * </pre>
   *
   * Protobuf type {@code adamant.global.v1.EthereumSpecific}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:adamant.global.v1.EthereumSpecific)
      com.adamant.global.v1.EthereumSpecificOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_EthereumSpecific_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_EthereumSpecific_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.adamant.global.v1.EthereumSpecific.class, com.adamant.global.v1.EthereumSpecific.Builder.class);
    }

    // Construct using com.adamant.global.v1.EthereumSpecific.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      gasLimit_ = 0L;

      nonce_ = 0L;

      isNextNonce_ = false;

      methodIdType_ = 0;

      expiration_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.adamant.global.v1.ModelProto.internal_static_adamant_global_v1_EthereumSpecific_descriptor;
    }

    @java.lang.Override
    public com.adamant.global.v1.EthereumSpecific getDefaultInstanceForType() {
      return com.adamant.global.v1.EthereumSpecific.getDefaultInstance();
    }

    @java.lang.Override
    public com.adamant.global.v1.EthereumSpecific build() {
      com.adamant.global.v1.EthereumSpecific result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.adamant.global.v1.EthereumSpecific buildPartial() {
      com.adamant.global.v1.EthereumSpecific result = new com.adamant.global.v1.EthereumSpecific(this);
      result.gasLimit_ = gasLimit_;
      result.nonce_ = nonce_;
      result.isNextNonce_ = isNextNonce_;
      result.methodIdType_ = methodIdType_;
      result.expiration_ = expiration_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.adamant.global.v1.EthereumSpecific) {
        return mergeFrom((com.adamant.global.v1.EthereumSpecific)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.adamant.global.v1.EthereumSpecific other) {
      if (other == com.adamant.global.v1.EthereumSpecific.getDefaultInstance()) return this;
      if (other.getGasLimit() != 0L) {
        setGasLimit(other.getGasLimit());
      }
      if (other.getNonce() != 0L) {
        setNonce(other.getNonce());
      }
      if (other.getIsNextNonce() != false) {
        setIsNextNonce(other.getIsNextNonce());
      }
      if (other.methodIdType_ != 0) {
        setMethodIdTypeValue(other.getMethodIdTypeValue());
      }
      if (other.getExpiration() != 0L) {
        setExpiration(other.getExpiration());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.adamant.global.v1.EthereumSpecific parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.adamant.global.v1.EthereumSpecific) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long gasLimit_ ;
    /**
     * <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     * @return The gasLimit.
     */
    @java.lang.Override
    public long getGasLimit() {
      return gasLimit_;
    }
    /**
     * <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     * @param value The gasLimit to set.
     * @return This builder for chaining.
     */
    public Builder setGasLimit(long value) {
      
      gasLimit_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     * @return This builder for chaining.
     */
    public Builder clearGasLimit() {
      
      gasLimit_ = 0L;
      onChanged();
      return this;
    }

    private long nonce_ ;
    /**
     * <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     * @return The nonce.
     */
    @java.lang.Override
    public long getNonce() {
      return nonce_;
    }
    /**
     * <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     * @param value The nonce to set.
     * @return This builder for chaining.
     */
    public Builder setNonce(long value) {
      
      nonce_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     * @return This builder for chaining.
     */
    public Builder clearNonce() {
      
      nonce_ = 0L;
      onChanged();
      return this;
    }

    private boolean isNextNonce_ ;
    /**
     * <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     * @return The isNextNonce.
     */
    @java.lang.Override
    public boolean getIsNextNonce() {
      return isNextNonce_;
    }
    /**
     * <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     * @param value The isNextNonce to set.
     * @return This builder for chaining.
     */
    public Builder setIsNextNonce(boolean value) {
      
      isNextNonce_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     * @return This builder for chaining.
     */
    public Builder clearIsNextNonce() {
      
      isNextNonce_ = false;
      onChanged();
      return this;
    }

    private int methodIdType_ = 0;
    /**
     * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
     * @return The enum numeric value on the wire for methodIdType.
     */
    @java.lang.Override public int getMethodIdTypeValue() {
      return methodIdType_;
    }
    /**
     * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
     * @param value The enum numeric value on the wire for methodIdType to set.
     * @return This builder for chaining.
     */
    public Builder setMethodIdTypeValue(int value) {
      
      methodIdType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
     * @return The methodIdType.
     */
    @java.lang.Override
    public com.adamant.global.v1.EthereumContractMethodIDType getMethodIdType() {
      @SuppressWarnings("deprecation")
      com.adamant.global.v1.EthereumContractMethodIDType result = com.adamant.global.v1.EthereumContractMethodIDType.valueOf(methodIdType_);
      return result == null ? com.adamant.global.v1.EthereumContractMethodIDType.UNRECOGNIZED : result;
    }
    /**
     * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
     * @param value The methodIdType to set.
     * @return This builder for chaining.
     */
    public Builder setMethodIdType(com.adamant.global.v1.EthereumContractMethodIDType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      methodIdType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.adamant.global.v1.EthereumContractMethodIDType method_id_type = 4 [json_name = "methodIdType"];</code>
     * @return This builder for chaining.
     */
    public Builder clearMethodIdType() {
      
      methodIdType_ = 0;
      onChanged();
      return this;
    }

    private long expiration_ ;
    /**
     * <code>uint64 expiration = 5 [json_name = "expiration"];</code>
     * @return The expiration.
     */
    @java.lang.Override
    public long getExpiration() {
      return expiration_;
    }
    /**
     * <code>uint64 expiration = 5 [json_name = "expiration"];</code>
     * @param value The expiration to set.
     * @return This builder for chaining.
     */
    public Builder setExpiration(long value) {
      
      expiration_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint64 expiration = 5 [json_name = "expiration"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExpiration() {
      
      expiration_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:adamant.global.v1.EthereumSpecific)
  }

  // @@protoc_insertion_point(class_scope:adamant.global.v1.EthereumSpecific)
  private static final com.adamant.global.v1.EthereumSpecific DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.adamant.global.v1.EthereumSpecific();
  }

  public static com.adamant.global.v1.EthereumSpecific getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<EthereumSpecific>
      PARSER = new com.google.protobuf.AbstractParser<EthereumSpecific>() {
    @java.lang.Override
    public EthereumSpecific parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EthereumSpecific(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EthereumSpecific> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EthereumSpecific> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.adamant.global.v1.EthereumSpecific getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

