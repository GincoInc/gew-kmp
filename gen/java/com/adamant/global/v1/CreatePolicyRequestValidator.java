// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package com.adamant.global.v1;

/**
* Validates {@code CreatePolicyRequest} protobuf objects.
*/
public class CreatePolicyRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<com.adamant.global.v1.CreatePolicyRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(com.adamant.global.v1.CreatePolicyRequest.class)) return new CreatePolicyRequestValidator();
		
		return null;
	}
		
	
		
		private final com.gincoinc.global.v1.Coin[] COIN__NOT_IN = new com.gincoinc.global.v1.Coin[]{
			com.gincoinc.global.v1.Coin.forNumber(0),
		};
	
		
		private final com.adamant.global.v1.PolicyType[] TYPE__NOT_IN = new com.adamant.global.v1.PolicyType[]{
			com.adamant.global.v1.PolicyType.forNumber(0),
		};
	
		
		com.google.re2j.Pattern WHITELIST_ID__PATTERN = com.google.re2j.Pattern.compile("^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$");
	
		
		com.google.re2j.Pattern TRANSFER_LIMIT_ID__PATTERN = com.google.re2j.Pattern.compile("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$");
	
	

	public void assertValid(com.adamant.global.v1.CreatePolicyRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.minLength(".adamant.global.v1.CreatePolicyRequest.name", proto.getName(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".adamant.global.v1.CreatePolicyRequest.name", proto.getName(), 40);
	
			io.envoyproxy.pgv.EnumValidation.definedOnly(".adamant.global.v1.CreatePolicyRequest.coin", proto.getCoin());
			io.envoyproxy.pgv.CollectiveValidation.notIn(".adamant.global.v1.CreatePolicyRequest.coin", proto.getCoin(), COIN__NOT_IN);
	
			io.envoyproxy.pgv.EnumValidation.definedOnly(".adamant.global.v1.CreatePolicyRequest.type", proto.getType());
			io.envoyproxy.pgv.CollectiveValidation.notIn(".adamant.global.v1.CreatePolicyRequest.type", proto.getType(), TYPE__NOT_IN);
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.global.v1.CreatePolicyRequest.whitelist_id", proto.getWhitelistId(), WHITELIST_ID__PATTERN);
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.global.v1.CreatePolicyRequest.transfer_limit_id", proto.getTransferLimitId(), TRANSFER_LIMIT_ID__PATTERN);
	
	}

}

