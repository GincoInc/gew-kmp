// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/global/v1/gincoincglobalv1/enum.proto

package java.gincoinc.global.v1;

public final class EnumProto {
  private EnumProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.gincoinc/global/v1/gincoincglobalv1/en" +
      "um.proto\022\022gincoinc.global.v1*\235\003\n\004Coin\022\020\n" +
      "\014COIN_INVALID\020\000\022\014\n\010COIN_BTC\020\001\022\014\n\010COIN_ET" +
      "H\020\002\022\014\n\010COIN_LTC\020\003\022\014\n\010COIN_BCH\020\004\022\014\n\010COIN_" +
      "XRP\020\005\022\014\n\010COIN_BAT\020\006\022\014\n\010COIN_TRX\020\007\022\r\n\tCOI" +
      "N_USDT\020\010\022\014\n\010COIN_RYO\020\t\022\016\n\nCOIN_JASMY\020\n\022\014" +
      "\n\010COIN_ENJ\020\013\022\014\n\010COIN_OMG\020\014\022\014\n\010COIN_XLM\020\r" +
      "\022\014\n\010COIN_ADA\020\016\022\014\n\010COIN_DOT\020\017\022\r\n\tCOIN_LIN" +
      "K\020\020\022\014\n\010COIN_DEP\020\021\022\r\n\tCOIN_USDC\020\022\022\r\n\tCOIN" +
      "_GYEN\020\023\022\r\n\tCOIN_ZAIF\020\024\022\r\n\tCOIN_FSCC\020\025\022\014\n" +
      "\010COIN_CMS\020\026\022\r\n\tCOIN_CICC\020\027\022\r\n\tCOIN_NCXC\020" +
      "\030\022\014\n\010COIN_COT\020\031\022\014\n\010COIN_XEM\020\032\022\r\n\tCOIN_MO" +
      "NA\020\033*\322\005\n\007Network\022\023\n\017NETWORK_INVALID\020\000\022\033\n" +
      "\027NETWORK_BITCOIN_MAINNET\020\001\022\033\n\027NETWORK_BI" +
      "TCOIN_TESTNET\020\002\022\034\n\030NETWORK_ETHEREUM_MAIN" +
      "NET\020\003\022\034\n\030NETWORK_ETHEREUM_TESTNET\020\004\022\034\n\030N" +
      "ETWORK_LITECOIN_MAINNET\020\005\022\034\n\030NETWORK_LIT" +
      "ECOIN_TESTNET\020\006\022\037\n\033NETWORK_BITCOINCASH_M" +
      "AINNET\020\007\022\037\n\033NETWORK_BITCOINCASH_TESTNET\020" +
      "\010\022\032\n\026NETWORK_RIPPLE_MAINNET\020\t\022\032\n\026NETWORK" +
      "_RIPPLE_TESTNET\020\n\022\030\n\024NETWORK_TRON_MAINNE" +
      "T\020\013\022\030\n\024NETWORK_TRON_TESTNET\020\014\022\031\n\025NETWORK" +
      "_C0BAN_MAINNET\020\r\022\031\n\025NETWORK_C0BAN_TESTNE" +
      "T\020\016\022\033\n\027NETWORK_STELLAR_MAINNET\020\017\022\033\n\027NETW" +
      "ORK_STELLAR_TESTNET\020\020\022\033\n\027NETWORK_CARDANO" +
      "_MAINNET\020\021\022\033\n\027NETWORK_CARDANO_TESTNET\020\022\022" +
      "\034\n\030NETWORK_POLKADOT_MAINNET\020\023\022\034\n\030NETWORK" +
      "_POLKADOT_TESTNET\020\024\022\027\n\023NETWORK_NEM_MAINN" +
      "ET\020\025\022\027\n\023NETWORK_NEM_TESTNET\020\026\022\034\n\030NETWORK" +
      "_MONACOIN_MAINNET\020\027\022\034\n\030NETWORK_MONACOIN_" +
      "TESTNET\020\030*\212\001\n\013AddressType\022\030\n\024ADDRESS_TYP" +
      "E_INVALID\020\000\022\025\n\021ADDRESS_TYPE_P2SH\020\001\022\033\n\027AD" +
      "DRESS_TYPE_P2SH_P2WSH\020\002\022\026\n\022ADDRESS_TYPE_" +
      "P2WSH\020\003\022\025\n\021ADDRESS_TYPE_NONE\020d*\323\001\n\020Trans" +
      "actionState\022\035\n\031TRANSACTION_STATE_INVALID" +
      "\020\000\022\037\n\033TRANSACTION_STATE_SUBMITTED\020\001\022\035\n\031T" +
      "RANSACTION_STATE_PENDING\020\002\022 \n\034TRANSACTIO" +
      "N_STATE_PROCESSING\020\003\022\037\n\033TRANSACTION_STAT" +
      "E_CONFIRMED\020\004\022\035\n\031TRANSACTION_STATE_DROPP" +
      "ED\020\005*\217\001\n\tUTXOState\022\026\n\022UTXO_STATE_INVALID" +
      "\020\000\022\036\n\032UTXO_STATE_PENDING_UNSPENT\020\001\022\026\n\022UT" +
      "XO_STATE_UNSPENT\020\002\022\034\n\030UTXO_STATE_PENDING" +
      "_SPENT\020\003\022\024\n\020UTXO_STATE_SPENT\020\004*\217\001\n\014Trans" +
      "ferType\022\031\n\025TRANSFER_TYPE_INVALID\020\000\022\026\n\022TR" +
      "ANSFER_TYPE_SEND\020\001\022\031\n\025TRANSFER_TYPE_RECE" +
      "IVE\020\002\022\030\n\024TRANSFER_TYPE_CHANGE\020\003\022\027\n\023TRANS" +
      "FER_TYPE_FATAL\020\004*\253\001\n\022XRPTransactionType\022" +
      " \n\034XRP_TRANSACTION_TYPE_INVALID\020\000\022 \n\034XRP" +
      "_TRANSACTION_TYPE_PAYMENT\020\001\022(\n$XRP_TRANS" +
      "ACTION_TYPE_SET_SIGNER_LIST\020\002\022\'\n#XRP_TRA" +
      "NSACTION_TYPE_DISABLE_MASTER\020\003*\260\001\n\021Trans" +
      "actionResult\022\036\n\032TRANSACTION_RESULT_INVAL" +
      "ID\020\000\022\036\n\032TRANSACTION_RESULT_PENDING\020\001\022\036\n\032" +
      "TRANSACTION_RESULT_SUCCESS\020\002\022\036\n\032TRANSACT" +
      "ION_RESULT_FAILURE\020\003\022\033\n\027TRANSACTION_RESU" +
      "LT_NONE\020d*\275\003\n\022NemTransactionType\022 \n\034NEM_" +
      "TRANSACTION_TYPE_INVALID\020\000\022&\n\"NEM_TRANSA" +
      "CTION_TYPE_TRANSFER_TYPE\020\001\0221\n-NEM_TRANSA" +
      "CTION_TYPE_IMPORTANCE_TRANSFER_TYPE\020\002\0223\n" +
      "/NEM_TRANSACTION_TYPE_MULTISIG_MODIFICAT" +
      "ION_TYPE\020\003\0220\n,NEM_TRANSACTION_TYPE_MULTI" +
      "SIG_SIGNATURE_TYPE\020\004\0222\n.NEM_TRANSACTION_" +
      "TYPE_MULTISIG_TRANSACTION_TYPE\020\005\0221\n-NEM_" +
      "TRANSACTION_TYPE_PROVISION_NAMESPACE_TYP" +
      "E\020\006\022/\n+NEM_TRANSACTION_TYPE_MOSAIC_DEFIN" +
      "ITION_TYPE\020\007\022+\n\'NEM_TRANSACTION_TYPE_MOS" +
      "AIC_SUPPLY_TYPE\020\010B\336\001\n\027java.gincoinc.glob" +
      "al.v1B\tEnumProtoP\001ZLgithub.com/GincoInc/" +
      "gew-kmp/gen/gincoinc/global/v1/gincoincg" +
      "lobalv1;globalv1\242\002\003GGX\252\002\022Gincoinc.Global" +
      ".V1\312\002\023Gincoinc\\Global_\\V1\342\002\037Gincoinc\\Glo" +
      "bal_\\V1\\GPBMetadata\352\002\024Gincoinc::Global::" +
      "V1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
