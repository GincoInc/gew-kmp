// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\356\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022D\n\007network\030\007 \001(\0162\033.gincoinc.global.v1.N" +
      "etworkB\010\372B\005\202\001\002\020\001H\000R\007network\210\001\001\022L\n\013wallet" +
      "_type\030\003 \001(\0162\035.adamant.global.v1.WalletTy" +
      "peB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N\n\014address_" +
      "type\030\004 \001(\0162\037.gincoinc.global.v1.AddressT" +
      "ypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203\001\n\025destina" +
      "tion_wallet_id\030\005 \001(\tBO\372BLrJ2H^$|^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\023destinationWallet" +
      "Id\022{\n\021inherit_wallet_id\030\006 \001(\tBO\372BLrJ2H^$" +
      "|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$R\017inheritW" +
      "alletIdB\n\n\010_network\"\207\001\n\032InitializeXRPWal" +
      "letRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001" +
      "\n\027InitializeWalletRequest\022i\n\twallet_id\030\001" +
      " \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[" +
      "0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12" +
      "}$R\010walletId\"\370\001\n\026SignTransactionRequest\022" +
      "i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\010walletId\022s\n\016transactio" +
      "n_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\rtransactionId\"\310\002\n\022SignMessageR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\nadd" +
      "ress_id\030\002 \001(\tBO\372BLrJ2H^$|^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$H\000R\taddressId\210\001\001\022\035\n\007addres" +
      "s\030\004 \001(\tH\001R\007address\210\001\001\022\030\n\007message\030\003 \001(\tR\007" +
      "messageB\r\n\013_address_idB\n\n\010_address\"3\n\023Si" +
      "gnMessageResponse\022\034\n\tsignature\030\001 \001(\tR\tsi" +
      "gnature\"\370\001\n\026SendTransactionRequest\022i\n\twa" +
      "llet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a" +
      "-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0" +
      "-9a-f]{12}$R\010walletId\022s\n\016transaction_id\030" +
      "\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\rtransactionId\"\372\001\n\030ResendTransaction" +
      "Request\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9" +
      "a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][" +
      "0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016tr" +
      "ansaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\rtransactionId\"\220\006\n\034Prog" +
      "matCoinInitializeRequest\022i\n\twallet_id\030\001 " +
      "\001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0" +
      "-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}" +
      "$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H" +
      "\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[" +
      "0-9a-fA-F]{40}$R\017contractAddress\022(\n\ntoke" +
      "n_name\030\004 \001(\tB\t\372B\006r\004\020\001\030(R\ttokenName\022,\n\014to" +
      "ken_symbol\030\005 \001(\tB\t\372B\006r\004\020\001\030\nR\013tokenSymbol" +
      "\0220\n\016token_currency\030\006 \001(\tB\t\372B\006r\004\020\001\030\003R\rtok" +
      "enCurrency\022.\n\016token_decimals\030\007 \001(\rB\007\372B\004*" +
      "\002\020dR\rtokenDecimals\022I\n\021new_master_minter\030" +
      "\010 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017ne" +
      "wMasterMinter\022<\n\nnew_pauser\030\t \001(\tB\035\372B\032r\030" +
      "2\026^(0x)?[0-9a-fA-F]{40}$R\tnewPauser\022Y\n\032n" +
      "ew_white_and_black_lister\030\n \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\026newWhiteAndBlack" +
      "Lister\022F\n\017new_confiscator\030\013 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\016newConfiscator\022:" +
      "\n\tnew_owner\030\014 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA" +
      "-F]{40}$R\010newOwner\"\340\002\n!ProgmatCoinConfig" +
      "ureMinterRequest\022i\n\twallet_id\030\001 \001(\tBL\372BI" +
      "rG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3" +
      "}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walle" +
      "tId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contra" +
      "ct_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\017contractAddress\0227\n\007address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007addres" +
      "s\0222\n\025minter_allowed_amount\030\005 \001(\tR\023minter" +
      "AllowedAmount\"\227\003\n!ProgmatCoinMintAndTran" +
      "sferRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^" +
      "[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89" +
      "ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031" +
      "\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_ad" +
      "dress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40" +
      "}$R\017contractAddress\022@\n\014mint_address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\013mintAd" +
      "dress\022H\n\020transfer_address\030\005 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\017transferAddress\022" +
      "\026\n\006amount\030\006 \001(\tR\006amount\"\271\002\n\026ProgmatCoinM" +
      "intRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n" +
      "\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_add" +
      "ress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}" +
      "$R\017contractAddress\0227\n\007address\030\004 \001(\tB\035\372B\032" +
      "r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007address\022\026\n\006a" +
      "mount\030\005 \001(\tR\006amount\"\200\002\n\026ProgmatCoinBurnR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee" +
      "_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_address" +
      "\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017c" +
      "ontractAddress\022\026\n\006amount\030\004 \001(\tR\006amount\"\253" +
      "\002\n ProgmatCoinAddToWhitelistRequest\022i\n\tw" +
      "allet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9" +
      "a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[" +
      "0-9a-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004" +
      "R\007feeRate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032" +
      "r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017contractAddr" +
      "ess\0227\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a" +
      "-fA-F]{40}$R\007address\"\260\002\n%ProgmatCoinRemo" +
      "veFromWhitelistRequest\022i\n\twallet_id\030\001 \001(" +
      "\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9" +
      "a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R" +
      "\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020" +
      "contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-" +
      "9a-fA-F]{40}$R\017contractAddress\0227\n\007addres" +
      "s\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007" +
      "address\"\253\002\n ProgmatCoinAddToBlacklistReq" +
      "uest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_r" +
      "ate\030\002 \001(\004R\007feeRate\022H\n\020contract_address\030\003" +
      " \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017con" +
      "tractAddress\0227\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(" +
      "0x)?[0-9a-fA-F]{40}$R\007address\"\260\002\n%Progma" +
      "tCoinRemoveFromBlacklistRequest\022i\n\twalle" +
      "t_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fe" +
      "eRate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\017contractAddress\022" +
      "7\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\007address\"\225\003\n\034ProgmatCoinConfisca" +
      "teRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0" +
      "-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab" +
      "][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010" +
      "fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_addr" +
      "ess\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$" +
      "R\017contractAddress\022O\n\024black_listed_accoun" +
      "t\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\022" +
      "blackListedAccount\022<\n\nto_account\030\005 \001(\tB\035" +
      "\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\ttoAccount" +
      "\022\026\n\006amount\030\006 \001(\tR\006amount\"\351\001\n\027ProgmatCoin" +
      "PauseRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E" +
      "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[8" +
      "9ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022" +
      "\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_a" +
      "ddress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{4" +
      "0}$R\017contractAddress\"\353\001\n\031ProgmatCoinUnpa" +
      "useRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n" +
      "\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_add" +
      "ress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}" +
      "$R\017contractAddress2\3144\n\tTellerAPI\022a\n\014Crea" +
      "teWallet\022&.adamant.teller.v1.CreateWalle" +
      "tRequest\032\'.adamant.global.v1.CreateWalle" +
      "tResponse\"\000\022M\n\tGetWallet\022#.adamant.globa" +
      "l.v1.GetWalletRequest\032\031.adamant.global.v" +
      "1.Wallet\"\000\022^\n\013ListWallets\022%.adamant.glob" +
      "al.v1.ListWalletsRequest\032&.adamant.globa" +
      "l.v1.ListWalletsResponse\"\000\022n\n\023ListWallet" +
      "sByFilter\022-.adamant.global.v1.ListWallet" +
      "sByFilterRequest\032&.adamant.global.v1.Lis" +
      "tWalletsResponse\"\000\022\203\001\n\032ListStakingWallet" +
      "sByFilter\0224.adamant.global.v1.ListStakin" +
      "gWalletsByFilterRequest\032-.adamant.global" +
      ".v1.ListStakingWalletsResponse\"\000\022j\n\017List" +
      "BaseWallets\022).adamant.global.v1.ListBase" +
      "WalletsRequest\032*.adamant.global.v1.ListB" +
      "aseWalletsResponse\"\000\022v\n\023GetSpendableBala" +
      "nce\022-.adamant.global.v1.GetSpendableBala" +
      "nceRequest\032..adamant.global.v1.GetSpenda" +
      "bleBalanceResponse\"\000\022^\n\023InitializeXRPWal" +
      "let\022-.adamant.teller.v1.InitializeXRPWal" +
      "letRequest\032\026.google.protobuf.Empty\"\000\022X\n\020" +
      "InitializeWallet\022*.adamant.teller.v1.Ini" +
      "tializeWalletRequest\032\026.google.protobuf.E" +
      "mpty\"\000\022j\n\031UpdateDestinationWalletID\0223.ad" +
      "amant.global.v1.UpdateDestinationWalletI" +
      "DRequest\032\026.google.protobuf.Empty\"\000\022m\n\020Ge" +
      "tCosmosBalance\022*.adamant.global.v1.GetCo" +
      "smosBalanceRequest\032+.adamant.global.v1.G" +
      "etCosmosBalanceResponse\"\000\022\216\001\n\033ListCosmos" +
      "DelegateHistories\0225.adamant.global.v1.Li" +
      "stCosmosDelegateHistoriesRequest\0326.adama" +
      "nt.global.v1.ListCosmosDelegateHistories" +
      "Response\"\000\022d\n\rCreateAddress\022\'.adamant.gl" +
      "obal.v1.CreateAddressRequest\032(.adamant.g" +
      "lobal.v1.CreateAddressResponse\"\000\022p\n\021Crea" +
      "teIOSTAccount\022+.adamant.global.v1.Create" +
      "IOSTAccountRequest\032,.adamant.global.v1.C" +
      "reateIOSTAccountResponse\"\000\022\205\001\n\030ListSymbo" +
      "lChildAddresses\0222.adamant.global.v1.List" +
      "SymbolChildAddressesRequest\0323.adamant.gl" +
      "obal.v1.ListSymbolChildAddressesResponse" +
      "\"\000\022P\n\nGetAddress\022$.adamant.global.v1.Get" +
      "AddressRequest\032\032.adamant.global.v1.Addre" +
      "ss\"\000\022b\n\023GetAddressByAddress\022-.adamant.gl" +
      "obal.v1.GetAddressByAddressRequest\032\032.ada" +
      "mant.global.v1.Address\"\000\022j\n\027GetAddressBy" +
      "AddressCoin\0221.adamant.global.v1.GetAddre" +
      "ssByAddressCoinRequest\032\032.adamant.global." +
      "v1.Address\"\000\022^\n\021GetAddressByIndex\022+.adam" +
      "ant.global.v1.GetAddressByIndexRequest\032\032" +
      ".adamant.global.v1.Address\"\000\022d\n\rListAddr" +
      "esses\022\'.adamant.global.v1.ListAddressesR" +
      "equest\032(.adamant.global.v1.ListAddresses" +
      "Response\"\000\022R\n\rImportAddress\022\'.adamant.gl" +
      "obal.v1.ImportAddressRequest\032\026.google.pr" +
      "otobuf.Empty\"\000\022q\n\025GetEthereumFeeAddress\022" +
      "/.adamant.global.v1.GetEthereumFeeAddres" +
      "sRequest\032%.adamant.global.v1.EthereumFee" +
      "Address\"\000\022`\n\024UpdateAddressBalance\022..adam" +
      "ant.global.v1.UpdateAddressBalanceReques" +
      "t\032\026.google.protobuf.Empty\"\000\022p\n\021CreateTra" +
      "nsaction\022+.adamant.global.v1.CreateTrans" +
      "actionRequest\032,.adamant.global.v1.Create" +
      "TransactionResponse\"\000\022V\n\017SignTransaction" +
      "\022).adamant.teller.v1.SignTransactionRequ" +
      "est\032\026.google.protobuf.Empty\"\000\022j\n\017SendTra" +
      "nsaction\022).adamant.teller.v1.SendTransac" +
      "tionRequest\032*.adamant.global.v1.SendTran" +
      "sactionResponse\"\000\022p\n\021ResendTransaction\022+" +
      ".adamant.teller.v1.ResendTransactionRequ" +
      "est\032,.adamant.global.v1.ResendTransactio" +
      "nResponse\"\000\022Z\n\021CancelTransaction\022+.adama" +
      "nt.global.v1.CancelTransactionRequest\032\026." +
      "google.protobuf.Empty\"\000\022s\n\022ReplaceTransa" +
      "ction\022,.adamant.global.v1.ReplaceTransac" +
      "tionRequest\032-.adamant.global.v1.ReplaceT" +
      "ransactionResponse\"\000\022\205\001\n\030IsTransactionRe" +
      "placeable\0222.adamant.global.v1.IsTransact" +
      "ionReplaceableRequest\0323.adamant.global.v" +
      "1.IsTransactionReplaceableResponse\"\000\022\\\n\016" +
      "GetTransaction\022(.adamant.global.v1.GetTr" +
      "ansactionRequest\032\036.adamant.global.v1.Tra" +
      "nsaction\"\000\022h\n\024GetTransactionByTxID\022..ada" +
      "mant.global.v1.GetTransactionByTxIDReque" +
      "st\032\036.adamant.global.v1.Transaction\"\000\022m\n\020" +
      "ListTransactions\022*.adamant.global.v1.Lis" +
      "tTransactionsRequest\032+.adamant.global.v1" +
      ".ListTransactionsResponse\"\000\022}\n\030ListTrans" +
      "actionsByFilter\0222.adamant.global.v1.List" +
      "TransactionsByFilterRequest\032+.adamant.gl" +
      "obal.v1.ListTransactionsResponse\"\000\022\224\001\n\035E" +
      "xitEthereumStakingValidators\0227.adamant.g" +
      "lobal.v1.ExitEthereumStakingValidatorsRe" +
      "quest\0328.adamant.global.v1.ExitEthereumSt" +
      "akingValidatorsResponse\"\000\022d\n\rListTransfe" +
      "rs\022\'.adamant.global.v1.ListTransfersRequ" +
      "est\032(.adamant.global.v1.ListTransfersRes" +
      "ponse\"\000\022t\n\025ListTransfersByFilter\022/.adama" +
      "nt.global.v1.ListTransfersByFilterReques" +
      "t\032(.adamant.global.v1.ListTransfersRespo" +
      "nse\"\000\022_\n\017GetRateSnapshot\022).adamant.globa" +
      "l.v1.GetRateSnapshotRequest\032\037.adamant.gl" +
      "obal.v1.RateSnapshot\"\000\022k\n\025GetLatestRateS" +
      "napshot\022/.adamant.global.v1.GetLatestRat" +
      "eSnapshotRequest\032\037.adamant.global.v1.Rat" +
      "eSnapshot\"\000\022U\n\010SetRates\022\".adamant.global" +
      ".v1.SetRatesRequest\032#.adamant.global.v1." +
      "SetRatesResponse\"\000\022a\n\014CalculateFee\022&.ada" +
      "mant.global.v1.CalculateFeeRequest\032\'.ada" +
      "mant.global.v1.CalculateFeeResponse\"\000\022|\n" +
      "\025GetRecommendedFeeRate\022/.adamant.global." +
      "v1.GetRecommendedFeeRateRequest\0320.adaman" +
      "t.global.v1.GetRecommendedFeeRateRespons" +
      "e\"\000\022j\n\017ValidateAddress\022).adamant.global." +
      "v1.ValidateAddressRequest\032*.adamant.glob" +
      "al.v1.ValidateAddressResponse\"\000\022a\n\014Flush" +
      "Balance\022&.adamant.global.v1.FlushBalance" +
      "Request\032\'.adamant.global.v1.FlushBalance" +
      "Response\"\000\022d\n\rListAuditLogs\022\'.adamant.gl" +
      "obal.v1.ListAuditLogsRequest\032(.adamant.g" +
      "lobal.v1.ListAuditLogsResponse\"\000\022\211\001\n\034Lis" +
      "tStakingHistoriesByFilter\0226.adamant.glob" +
      "al.v1.ListStakingHistoriesByFilterReques" +
      "t\032/.adamant.global.v1.ListStakingHistori" +
      "esResponse\"\000\022\214\001\n\035ListStakingValidatorsBy" +
      "Filter\0227.adamant.global.v1.ListStakingVa" +
      "lidatorsByFilterRequest\0320.adamant.global" +
      ".v1.ListStakingValidatorsResponse\"\000\022^\n\013S" +
      "ignMessage\022%.adamant.teller.v1.SignMessa" +
      "geRequest\032&.adamant.teller.v1.SignMessag" +
      "eResponse\"\000\022x\n\025ProgmatCoinInitialize\022/.a" +
      "damant.teller.v1.ProgmatCoinInitializeRe" +
      "quest\032,.adamant.global.v1.CreateTransact" +
      "ionResponse\"\000\022\202\001\n\032ProgmatCoinConfigureMi" +
      "nter\0224.adamant.teller.v1.ProgmatCoinConf" +
      "igureMinterRequest\032,.adamant.global.v1.C" +
      "reateTransactionResponse\"\000\022\202\001\n\032ProgmatCo" +
      "inMintAndTransfer\0224.adamant.teller.v1.Pr" +
      "ogmatCoinMintAndTransferRequest\032,.adaman" +
      "t.global.v1.CreateTransactionResponse\"\000\022" +
      "l\n\017ProgmatCoinMint\022).adamant.teller.v1.P" +
      "rogmatCoinMintRequest\032,.adamant.global.v" +
      "1.CreateTransactionResponse\"\000\022l\n\017Progmat" +
      "CoinBurn\022).adamant.teller.v1.ProgmatCoin" +
      "BurnRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022\200\001\n\031ProgmatCoinAddTo" +
      "Whitelist\0223.adamant.teller.v1.ProgmatCoi" +
      "nAddToWhitelistRequest\032,.adamant.global." +
      "v1.CreateTransactionResponse\"\000\022\212\001\n\036Progm" +
      "atCoinRemoveFromWhitelist\0228.adamant.tell" +
      "er.v1.ProgmatCoinRemoveFromWhitelistRequ" +
      "est\032,.adamant.global.v1.CreateTransactio" +
      "nResponse\"\000\022\200\001\n\031ProgmatCoinAddToBlacklis" +
      "t\0223.adamant.teller.v1.ProgmatCoinAddToBl" +
      "acklistRequest\032,.adamant.global.v1.Creat" +
      "eTransactionResponse\"\000\022\212\001\n\036ProgmatCoinRe" +
      "moveFromBlacklist\0228.adamant.teller.v1.Pr" +
      "ogmatCoinRemoveFromBlacklistRequest\032,.ad" +
      "amant.global.v1.CreateTransactionRespons" +
      "e\"\000\022x\n\025ProgmatCoinConfiscate\022/.adamant.t" +
      "eller.v1.ProgmatCoinConfiscateRequest\032,." +
      "adamant.global.v1.CreateTransactionRespo" +
      "nse\"\000\022n\n\020ProgmatCoinPause\022*.adamant.tell" +
      "er.v1.ProgmatCoinPauseRequest\032,.adamant." +
      "global.v1.CreateTransactionResponse\"\000\022r\n" +
      "\022ProgmatCoinUnpause\022,.adamant.teller.v1." +
      "ProgmatCoinUnpauseRequest\032,.adamant.glob" +
      "al.v1.CreateTransactionResponse\"\000B^B\016Tel" +
      "lerAPIProtoP\001ZJgithub.com/GincoInc/gew-k" +
      "mp/gen/gincoinc/adamant/teller/v1/adaman" +
      "ttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "Network", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", "Network", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageRequest_descriptor,
        new java.lang.String[] { "WalletId", "AddressId", "Address", "Message", "AddressId", "Address", });
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageResponse_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "TokenName", "TokenSymbol", "TokenCurrency", "TokenDecimals", "NewMasterMinter", "NewPauser", "NewWhiteAndBlackLister", "NewConfiscator", "NewOwner", });
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "MinterAllowedAmount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "MintAddress", "TransferAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "BlackListedAccount", "ToAccount", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
