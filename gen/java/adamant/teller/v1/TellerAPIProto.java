// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\234\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022L\n\013wallet_type\030\003 \001(\0162\035.adamant.global.v" +
      "1.WalletTypeB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N" +
      "\n\014address_type\030\004 \001(\0162\037.gincoinc.global.v" +
      "1.AddressTypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203" +
      "\001\n\025destination_wallet_id\030\005 \001(\tBO\372BLrJ2H^" +
      "$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-" +
      "[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\023destina" +
      "tionWalletId\022{\n\021inherit_wallet_id\030\006 \001(\tB" +
      "O\372BLrJ2H^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\017inheritWalletId\"\207\001\n\032InitializeXRPWalle" +
      "tRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001\n\027" +
      "InitializeWalletRequest\022i\n\twallet_id\030\001 \001" +
      "(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\010walletId\"\370\001\n\026SignTransactionRequest\022i\n" +
      "\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$R\010walletId\022s\n\016transaction_" +
      "id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\rtransactionId\"\370\001\n\026SendTransactio" +
      "nRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016t" +
      "ransaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}" +
      "-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]" +
      "{3}-[0-9a-f]{12}$R\rtransactionId2\326\037\n\tTel" +
      "lerAPI\022a\n\014CreateWallet\022&.adamant.teller." +
      "v1.CreateWalletRequest\032\'.adamant.global." +
      "v1.CreateWalletResponse\"\000\022M\n\tGetWallet\022#" +
      ".adamant.global.v1.GetWalletRequest\032\031.ad" +
      "amant.global.v1.Wallet\"\000\022^\n\013ListWallets\022" +
      "%.adamant.global.v1.ListWalletsRequest\032&" +
      ".adamant.global.v1.ListWalletsResponse\"\000" +
      "\022n\n\023ListWalletsByFilter\022-.adamant.global" +
      ".v1.ListWalletsByFilterRequest\032&.adamant" +
      ".global.v1.ListWalletsResponse\"\000\022j\n\017List" +
      "BaseWallets\022).adamant.global.v1.ListBase" +
      "WalletsRequest\032*.adamant.global.v1.ListB" +
      "aseWalletsResponse\"\000\022v\n\023GetSpendableBala" +
      "nce\022-.adamant.global.v1.GetSpendableBala" +
      "nceRequest\032..adamant.global.v1.GetSpenda" +
      "bleBalanceResponse\"\000\022^\n\023InitializeXRPWal" +
      "let\022-.adamant.teller.v1.InitializeXRPWal" +
      "letRequest\032\026.google.protobuf.Empty\"\000\022X\n\020" +
      "InitializeWallet\022*.adamant.teller.v1.Ini" +
      "tializeWalletRequest\032\026.google.protobuf.E" +
      "mpty\"\000\022j\n\031UpdateDestinationWalletID\0223.ad" +
      "amant.global.v1.UpdateDestinationWalletI" +
      "DRequest\032\026.google.protobuf.Empty\"\000\022m\n\020Ge" +
      "tCosmosBalance\022*.adamant.global.v1.GetCo" +
      "smosBalanceRequest\032+.adamant.global.v1.G" +
      "etCosmosBalanceResponse\"\000\022d\n\rCreateAddre" +
      "ss\022\'.adamant.global.v1.CreateAddressRequ" +
      "est\032(.adamant.global.v1.CreateAddressRes" +
      "ponse\"\000\022p\n\021CreateIOSTAccount\022+.adamant.g" +
      "lobal.v1.CreateIOSTAccountRequest\032,.adam" +
      "ant.global.v1.CreateIOSTAccountResponse\"" +
      "\000\022\205\001\n\030ListSymbolChildAddresses\0222.adamant" +
      ".global.v1.ListSymbolChildAddressesReque" +
      "st\0323.adamant.global.v1.ListSymbolChildAd" +
      "dressesResponse\"\000\022P\n\nGetAddress\022$.adaman" +
      "t.global.v1.GetAddressRequest\032\032.adamant." +
      "global.v1.Address\"\000\022b\n\023GetAddressByAddre" +
      "ss\022-.adamant.global.v1.GetAddressByAddre" +
      "ssRequest\032\032.adamant.global.v1.Address\"\000\022" +
      "j\n\027GetAddressByAddressCoin\0221.adamant.glo" +
      "bal.v1.GetAddressByAddressCoinRequest\032\032." +
      "adamant.global.v1.Address\"\000\022^\n\021GetAddres" +
      "sByIndex\022+.adamant.global.v1.GetAddressB" +
      "yIndexRequest\032\032.adamant.global.v1.Addres" +
      "s\"\000\022d\n\rListAddresses\022\'.adamant.global.v1" +
      ".ListAddressesRequest\032(.adamant.global.v" +
      "1.ListAddressesResponse\"\000\022R\n\rImportAddre" +
      "ss\022\'.adamant.global.v1.ImportAddressRequ" +
      "est\032\026.google.protobuf.Empty\"\000\022q\n\025GetEthe" +
      "reumFeeAddress\022/.adamant.global.v1.GetEt" +
      "hereumFeeAddressRequest\032%.adamant.global" +
      ".v1.EthereumFeeAddress\"\000\022`\n\024UpdateAddres" +
      "sBalance\022..adamant.global.v1.UpdateAddre" +
      "ssBalanceRequest\032\026.google.protobuf.Empty" +
      "\"\000\022p\n\021CreateTransaction\022+.adamant.global" +
      ".v1.CreateTransactionRequest\032,.adamant.g" +
      "lobal.v1.CreateTransactionResponse\"\000\022V\n\017" +
      "SignTransaction\022).adamant.teller.v1.Sign" +
      "TransactionRequest\032\026.google.protobuf.Emp" +
      "ty\"\000\022j\n\017SendTransaction\022).adamant.teller" +
      ".v1.SendTransactionRequest\032*.adamant.glo" +
      "bal.v1.SendTransactionResponse\"\000\022Z\n\021Canc" +
      "elTransaction\022+.adamant.global.v1.Cancel" +
      "TransactionRequest\032\026.google.protobuf.Emp" +
      "ty\"\000\022\\\n\016GetTransaction\022(.adamant.global." +
      "v1.GetTransactionRequest\032\036.adamant.globa" +
      "l.v1.Transaction\"\000\022h\n\024GetTransactionByTx" +
      "ID\022..adamant.global.v1.GetTransactionByT" +
      "xIDRequest\032\036.adamant.global.v1.Transacti" +
      "on\"\000\022m\n\020ListTransactions\022*.adamant.globa" +
      "l.v1.ListTransactionsRequest\032+.adamant.g" +
      "lobal.v1.ListTransactionsResponse\"\000\022}\n\030L" +
      "istTransactionsByFilter\0222.adamant.global" +
      ".v1.ListTransactionsByFilterRequest\032+.ad" +
      "amant.global.v1.ListTransactionsResponse" +
      "\"\000\022d\n\rListTransfers\022\'.adamant.global.v1." +
      "ListTransfersRequest\032(.adamant.global.v1" +
      ".ListTransfersResponse\"\000\022t\n\025ListTransfer" +
      "sByFilter\022/.adamant.global.v1.ListTransf" +
      "ersByFilterRequest\032(.adamant.global.v1.L" +
      "istTransfersResponse\"\000\022_\n\017GetRateSnapsho" +
      "t\022).adamant.global.v1.GetRateSnapshotReq" +
      "uest\032\037.adamant.global.v1.RateSnapshot\"\000\022" +
      "k\n\025GetLatestRateSnapshot\022/.adamant.globa" +
      "l.v1.GetLatestRateSnapshotRequest\032\037.adam" +
      "ant.global.v1.RateSnapshot\"\000\022U\n\010SetRates" +
      "\022\".adamant.global.v1.SetRatesRequest\032#.a" +
      "damant.global.v1.SetRatesResponse\"\000\022a\n\014C" +
      "alculateFee\022&.adamant.global.v1.Calculat" +
      "eFeeRequest\032\'.adamant.global.v1.Calculat" +
      "eFeeResponse\"\000\022|\n\025GetRecommendedFeeRate\022" +
      "/.adamant.global.v1.GetRecommendedFeeRat" +
      "eRequest\0320.adamant.global.v1.GetRecommen" +
      "dedFeeRateResponse\"\000\022j\n\017ValidateAddress\022" +
      ").adamant.global.v1.ValidateAddressReque" +
      "st\032*.adamant.global.v1.ValidateAddressRe" +
      "sponse\"\000\022a\n\014FlushBalance\022&.adamant.globa" +
      "l.v1.FlushBalanceRequest\032\'.adamant.globa" +
      "l.v1.FlushBalanceResponse\"\000\022d\n\rListAudit" +
      "Logs\022\'.adamant.global.v1.ListAuditLogsRe" +
      "quest\032(.adamant.global.v1.ListAuditLogsR" +
      "esponse\"\000B^B\016TellerAPIProtoP\001ZJgithub.co" +
      "m/GincoInc/gew-kmp/gen/gincoinc/adamant/" +
      "teller/v1/adamanttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
