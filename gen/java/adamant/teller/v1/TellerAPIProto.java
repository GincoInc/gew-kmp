// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\234\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022L\n\013wallet_type\030\003 \001(\0162\035.adamant.global.v" +
      "1.WalletTypeB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N" +
      "\n\014address_type\030\004 \001(\0162\037.gincoinc.global.v" +
      "1.AddressTypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203" +
      "\001\n\025destination_wallet_id\030\005 \001(\tBO\372BLrJ2H^" +
      "$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-" +
      "[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\023destina" +
      "tionWalletId\022{\n\021inherit_wallet_id\030\006 \001(\tB" +
      "O\372BLrJ2H^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\017inheritWalletId\"\207\001\n\032InitializeXRPWalle" +
      "tRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001\n\027" +
      "InitializeWalletRequest\022i\n\twallet_id\030\001 \001" +
      "(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\010walletId\"\370\001\n\026SignTransactionRequest\022i\n" +
      "\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$R\010walletId\022s\n\016transaction_" +
      "id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\rtransactionId\"\370\001\n\026SendTransactio" +
      "nRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016t" +
      "ransaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}" +
      "-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]" +
      "{3}-[0-9a-f]{12}$R\rtransactionId2\373\035\n\tTel" +
      "lerAPI\022a\n\014CreateWallet\022&.adamant.teller." +
      "v1.CreateWalletRequest\032\'.adamant.global." +
      "v1.CreateWalletResponse\"\000\022M\n\tGetWallet\022#" +
      ".adamant.global.v1.GetWalletRequest\032\031.ad" +
      "amant.global.v1.Wallet\"\000\022^\n\013ListWallets\022" +
      "%.adamant.global.v1.ListWalletsRequest\032&" +
      ".adamant.global.v1.ListWalletsResponse\"\000" +
      "\022n\n\023ListWalletsByFilter\022-.adamant.global" +
      ".v1.ListWalletsByFilterRequest\032&.adamant" +
      ".global.v1.ListWalletsResponse\"\000\022j\n\017List" +
      "BaseWallets\022).adamant.global.v1.ListBase" +
      "WalletsRequest\032*.adamant.global.v1.ListB" +
      "aseWalletsResponse\"\000\022v\n\023GetSpendableBala" +
      "nce\022-.adamant.global.v1.GetSpendableBala" +
      "nceRequest\032..adamant.global.v1.GetSpenda" +
      "bleBalanceResponse\"\000\022^\n\023InitializeXRPWal" +
      "let\022-.adamant.teller.v1.InitializeXRPWal" +
      "letRequest\032\026.google.protobuf.Empty\"\000\022X\n\020" +
      "InitializeWallet\022*.adamant.teller.v1.Ini" +
      "tializeWalletRequest\032\026.google.protobuf.E" +
      "mpty\"\000\022d\n\rCreateAddress\022\'.adamant.global" +
      ".v1.CreateAddressRequest\032(.adamant.globa" +
      "l.v1.CreateAddressResponse\"\000\022p\n\021CreateIO" +
      "STAccount\022+.adamant.global.v1.CreateIOST" +
      "AccountRequest\032,.adamant.global.v1.Creat" +
      "eIOSTAccountResponse\"\000\022\205\001\n\030ListSymbolChi" +
      "ldAddresses\0222.adamant.global.v1.ListSymb" +
      "olChildAddressesRequest\0323.adamant.global" +
      ".v1.ListSymbolChildAddressesResponse\"\000\022P" +
      "\n\nGetAddress\022$.adamant.global.v1.GetAddr" +
      "essRequest\032\032.adamant.global.v1.Address\"\000" +
      "\022b\n\023GetAddressByAddress\022-.adamant.global" +
      ".v1.GetAddressByAddressRequest\032\032.adamant" +
      ".global.v1.Address\"\000\022j\n\027GetAddressByAddr" +
      "essCoin\0221.adamant.global.v1.GetAddressBy" +
      "AddressCoinRequest\032\032.adamant.global.v1.A" +
      "ddress\"\000\022^\n\021GetAddressByIndex\022+.adamant." +
      "global.v1.GetAddressByIndexRequest\032\032.ada" +
      "mant.global.v1.Address\"\000\022d\n\rListAddresse" +
      "s\022\'.adamant.global.v1.ListAddressesReque" +
      "st\032(.adamant.global.v1.ListAddressesResp" +
      "onse\"\000\022R\n\rImportAddress\022\'.adamant.global" +
      ".v1.ImportAddressRequest\032\026.google.protob" +
      "uf.Empty\"\000\022q\n\025GetEthereumFeeAddress\022/.ad" +
      "amant.global.v1.GetEthereumFeeAddressReq" +
      "uest\032%.adamant.global.v1.EthereumFeeAddr" +
      "ess\"\000\022`\n\024UpdateAddressBalance\022..adamant." +
      "global.v1.UpdateAddressBalanceRequest\032\026." +
      "google.protobuf.Empty\"\000\022p\n\021CreateTransac" +
      "tion\022+.adamant.global.v1.CreateTransacti" +
      "onRequest\032,.adamant.global.v1.CreateTran" +
      "sactionResponse\"\000\022V\n\017SignTransaction\022).a" +
      "damant.teller.v1.SignTransactionRequest\032" +
      "\026.google.protobuf.Empty\"\000\022j\n\017SendTransac" +
      "tion\022).adamant.teller.v1.SendTransaction" +
      "Request\032*.adamant.global.v1.SendTransact" +
      "ionResponse\"\000\022Z\n\021CancelTransaction\022+.ada" +
      "mant.global.v1.CancelTransactionRequest\032" +
      "\026.google.protobuf.Empty\"\000\022\\\n\016GetTransact" +
      "ion\022(.adamant.global.v1.GetTransactionRe" +
      "quest\032\036.adamant.global.v1.Transaction\"\000\022" +
      "h\n\024GetTransactionByTxID\022..adamant.global" +
      ".v1.GetTransactionByTxIDRequest\032\036.adaman" +
      "t.global.v1.Transaction\"\000\022m\n\020ListTransac" +
      "tions\022*.adamant.global.v1.ListTransactio" +
      "nsRequest\032+.adamant.global.v1.ListTransa" +
      "ctionsResponse\"\000\022}\n\030ListTransactionsByFi" +
      "lter\0222.adamant.global.v1.ListTransaction" +
      "sByFilterRequest\032+.adamant.global.v1.Lis" +
      "tTransactionsResponse\"\000\022d\n\rListTransfers" +
      "\022\'.adamant.global.v1.ListTransfersReques" +
      "t\032(.adamant.global.v1.ListTransfersRespo" +
      "nse\"\000\022t\n\025ListTransfersByFilter\022/.adamant" +
      ".global.v1.ListTransfersByFilterRequest\032" +
      "(.adamant.global.v1.ListTransfersRespons" +
      "e\"\000\022_\n\017GetRateSnapshot\022).adamant.global." +
      "v1.GetRateSnapshotRequest\032\037.adamant.glob" +
      "al.v1.RateSnapshot\"\000\022k\n\025GetLatestRateSna" +
      "pshot\022/.adamant.global.v1.GetLatestRateS" +
      "napshotRequest\032\037.adamant.global.v1.RateS" +
      "napshot\"\000\022U\n\010SetRates\022\".adamant.global.v" +
      "1.SetRatesRequest\032#.adamant.global.v1.Se" +
      "tRatesResponse\"\000\022a\n\014CalculateFee\022&.adama" +
      "nt.global.v1.CalculateFeeRequest\032\'.adama" +
      "nt.global.v1.CalculateFeeResponse\"\000\022|\n\025G" +
      "etRecommendedFeeRate\022/.adamant.global.v1" +
      ".GetRecommendedFeeRateRequest\0320.adamant." +
      "global.v1.GetRecommendedFeeRateResponse\"" +
      "\000\022j\n\017ValidateAddress\022).adamant.global.v1" +
      ".ValidateAddressRequest\032*.adamant.global" +
      ".v1.ValidateAddressResponse\"\000\022a\n\014FlushBa" +
      "lance\022&.adamant.global.v1.FlushBalanceRe" +
      "quest\032\'.adamant.global.v1.FlushBalanceRe" +
      "sponse\"\000\022d\n\rListAuditLogs\022\'.adamant.glob" +
      "al.v1.ListAuditLogsRequest\032(.adamant.glo" +
      "bal.v1.ListAuditLogsResponse\"\000B^B\016Teller" +
      "APIProtoP\001ZJgithub.com/GincoInc/gew-kmp/" +
      "gen/gincoinc/adamant/teller/v1/adamantte" +
      "llerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
