// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\234\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022L\n\013wallet_type\030\003 \001(\0162\035.adamant.global.v" +
      "1.WalletTypeB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N" +
      "\n\014address_type\030\004 \001(\0162\037.gincoinc.global.v" +
      "1.AddressTypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203" +
      "\001\n\025destination_wallet_id\030\005 \001(\tBO\372BLrJ2H^" +
      "$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-" +
      "[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\023destina" +
      "tionWalletId\022{\n\021inherit_wallet_id\030\006 \001(\tB" +
      "O\372BLrJ2H^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\017inheritWalletId\"\207\001\n\032InitializeXRPWalle" +
      "tRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001\n\027" +
      "InitializeWalletRequest\022i\n\twallet_id\030\001 \001" +
      "(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\010walletId\"\370\001\n\026SignTransactionRequest\022i\n" +
      "\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$R\010walletId\022s\n\016transaction_" +
      "id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\rtransactionId\"\310\002\n\022SignMessageReq" +
      "uest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\naddre" +
      "ss_id\030\002 \001(\tBO\372BLrJ2H^$|^[0-9a-f]{8}-[0-9" +
      "a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[" +
      "0-9a-f]{12}$H\000R\taddressId\210\001\001\022\035\n\007address\030" +
      "\004 \001(\tH\001R\007address\210\001\001\022\030\n\007message\030\003 \001(\tR\007me" +
      "ssageB\r\n\013_address_idB\n\n\010_address\"3\n\023Sign" +
      "MessageResponse\022\034\n\tsignature\030\001 \001(\tR\tsign" +
      "ature\"\370\001\n\026SendTransactionRequest\022i\n\twall" +
      "et_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f" +
      "]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9" +
      "a-f]{12}$R\010walletId\022s\n\016transaction_id\030\002 " +
      "\001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0" +
      "-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}" +
      "$R\rtransactionId\"\254\004\n\034ProgmatCoinInitiali" +
      "zeRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0" +
      "-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab" +
      "][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010" +
      "fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_addr" +
      "ess\030\003 \001(\tR\017contractAddress\022\035\n\ntoken_name" +
      "\030\004 \001(\tR\ttokenName\022!\n\014token_symbol\030\005 \001(\tR" +
      "\013tokenSymbol\022%\n\016token_currency\030\006 \001(\tR\rto" +
      "kenCurrency\022%\n\016token_decimals\030\007 \001(\rR\rtok" +
      "enDecimals\022*\n\021new_master_minter\030\010 \001(\tR\017n" +
      "ewMasterMinter\022\035\n\nnew_pauser\030\t \001(\tR\tnewP" +
      "auser\022:\n\032new_white_and_black_lister\030\n \001(" +
      "\tR\026newWhiteAndBlackLister\022\'\n\017new_confisc" +
      "ator\030\013 \001(\tR\016newConfiscator\022\033\n\tnew_owner\030" +
      "\014 \001(\tR\010newOwner\"\242\002\n!ProgmatCoinConfigure" +
      "MinterRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2" +
      "E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId" +
      "\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_" +
      "address\030\003 \001(\tR\017contractAddress\022\030\n\007addres" +
      "s\030\004 \001(\tR\007address\0222\n\025minter_allowed_amoun" +
      "t\030\005 \001(\tR\023minterAllowedAmount\"\272\002\n!Progmat" +
      "CoinMintAndTransferRequest\022i\n\twallet_id\030" +
      "\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate" +
      "\022)\n\020contract_address\030\003 \001(\tR\017contractAddr" +
      "ess\022!\n\014mint_address\030\004 \001(\tR\013mintAddress\022)" +
      "\n\020transfer_address\030\005 \001(\tR\017transferAddres" +
      "s\022\026\n\006amount\030\006 \001(\tR\006amount\"\373\001\n\026ProgmatCoi" +
      "nMintRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E" +
      "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[8" +
      "9ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022" +
      "\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_a" +
      "ddress\030\003 \001(\tR\017contractAddress\022\030\n\007address" +
      "\030\004 \001(\tR\007address\022\026\n\006amount\030\005 \001(\tR\006amount\"" +
      "\337\001\n\032ProgmatCoinTransferRequest\022i\n\twallet" +
      "_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{" +
      "4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-" +
      "f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fee" +
      "Rate\022\030\n\007address\030\003 \001(\tR\007address\022!\n\014string" +
      "_value\030\004 \001(\tR\013stringValue\"\341\001\n\026ProgmatCoi" +
      "nBurnRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E" +
      "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[8" +
      "9ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022" +
      "\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_a" +
      "ddress\030\003 \001(\tR\017contractAddress\022\026\n\006amount\030" +
      "\004 \001(\tR\006amount\"\355\001\n ProgmatCoinAddToWhitel" +
      "istRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n" +
      "\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_add" +
      "ress\030\003 \001(\tR\017contractAddress\022\030\n\007address\030\004" +
      " \001(\tR\007address\"\362\001\n%ProgmatCoinRemoveFromW" +
      "hitelistRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIr" +
      "G2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}" +
      "-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010wallet" +
      "Id\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contrac" +
      "t_address\030\003 \001(\tR\017contractAddress\022\030\n\007addr" +
      "ess\030\004 \001(\tR\007address\"\355\001\n ProgmatCoinAddToB" +
      "lacklistRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIr" +
      "G2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}" +
      "-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010wallet" +
      "Id\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contrac" +
      "t_address\030\003 \001(\tR\017contractAddress\022\030\n\007addr" +
      "ess\030\004 \001(\tR\007address\"\362\001\n%ProgmatCoinRemove" +
      "FromBlacklistRequest\022i\n\twallet_id\030\001 \001(\tB" +
      "L\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-" +
      "f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010w" +
      "alletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020co" +
      "ntract_address\030\003 \001(\tR\017contractAddress\022\030\n" +
      "\007address\030\004 \001(\tR\007address\"\270\002\n\034ProgmatCoinC" +
      "onfiscateRequest\022i\n\twallet_id\030\001 \001(\tBL\372BI" +
      "rG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3" +
      "}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walle" +
      "tId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contra" +
      "ct_address\030\003 \001(\tR\017contractAddress\0220\n\024bla" +
      "ck_listed_account\030\004 \001(\tR\022blackListedAcco" +
      "unt\022\035\n\nto_account\030\005 \001(\tR\ttoAccount\022\026\n\006am" +
      "ount\030\006 \001(\tR\006amount\"\312\001\n\027ProgmatCoinPauseR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee" +
      "_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_address" +
      "\030\003 \001(\tR\017contractAddress\"\314\001\n\031ProgmatCoinU" +
      "npauseRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2" +
      "E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId" +
      "\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020contract_" +
      "address\030\003 \001(\tR\017contractAddress2\3103\n\tTelle" +
      "rAPI\022a\n\014CreateWallet\022&.adamant.teller.v1" +
      ".CreateWalletRequest\032\'.adamant.global.v1" +
      ".CreateWalletResponse\"\000\022M\n\tGetWallet\022#.a" +
      "damant.global.v1.GetWalletRequest\032\031.adam" +
      "ant.global.v1.Wallet\"\000\022^\n\013ListWallets\022%." +
      "adamant.global.v1.ListWalletsRequest\032&.a" +
      "damant.global.v1.ListWalletsResponse\"\000\022n" +
      "\n\023ListWalletsByFilter\022-.adamant.global.v" +
      "1.ListWalletsByFilterRequest\032&.adamant.g" +
      "lobal.v1.ListWalletsResponse\"\000\022\203\001\n\032ListS" +
      "takingWalletsByFilter\0224.adamant.global.v" +
      "1.ListStakingWalletsByFilterRequest\032-.ad" +
      "amant.global.v1.ListStakingWalletsRespon" +
      "se\"\000\022j\n\017ListBaseWallets\022).adamant.global" +
      ".v1.ListBaseWalletsRequest\032*.adamant.glo" +
      "bal.v1.ListBaseWalletsResponse\"\000\022v\n\023GetS" +
      "pendableBalance\022-.adamant.global.v1.GetS" +
      "pendableBalanceRequest\032..adamant.global." +
      "v1.GetSpendableBalanceResponse\"\000\022^\n\023Init" +
      "ializeXRPWallet\022-.adamant.teller.v1.Init" +
      "ializeXRPWalletRequest\032\026.google.protobuf" +
      ".Empty\"\000\022X\n\020InitializeWallet\022*.adamant.t" +
      "eller.v1.InitializeWalletRequest\032\026.googl" +
      "e.protobuf.Empty\"\000\022j\n\031UpdateDestinationW" +
      "alletID\0223.adamant.global.v1.UpdateDestin" +
      "ationWalletIDRequest\032\026.google.protobuf.E" +
      "mpty\"\000\022m\n\020GetCosmosBalance\022*.adamant.glo" +
      "bal.v1.GetCosmosBalanceRequest\032+.adamant" +
      ".global.v1.GetCosmosBalanceResponse\"\000\022\216\001" +
      "\n\033ListCosmosDelegateHistories\0225.adamant." +
      "global.v1.ListCosmosDelegateHistoriesReq" +
      "uest\0326.adamant.global.v1.ListCosmosDeleg" +
      "ateHistoriesResponse\"\000\022d\n\rCreateAddress\022" +
      "\'.adamant.global.v1.CreateAddressRequest" +
      "\032(.adamant.global.v1.CreateAddressRespon" +
      "se\"\000\022p\n\021CreateIOSTAccount\022+.adamant.glob" +
      "al.v1.CreateIOSTAccountRequest\032,.adamant" +
      ".global.v1.CreateIOSTAccountResponse\"\000\022\205" +
      "\001\n\030ListSymbolChildAddresses\0222.adamant.gl" +
      "obal.v1.ListSymbolChildAddressesRequest\032" +
      "3.adamant.global.v1.ListSymbolChildAddre" +
      "ssesResponse\"\000\022P\n\nGetAddress\022$.adamant.g" +
      "lobal.v1.GetAddressRequest\032\032.adamant.glo" +
      "bal.v1.Address\"\000\022b\n\023GetAddressByAddress\022" +
      "-.adamant.global.v1.GetAddressByAddressR" +
      "equest\032\032.adamant.global.v1.Address\"\000\022j\n\027" +
      "GetAddressByAddressCoin\0221.adamant.global" +
      ".v1.GetAddressByAddressCoinRequest\032\032.ada" +
      "mant.global.v1.Address\"\000\022^\n\021GetAddressBy" +
      "Index\022+.adamant.global.v1.GetAddressByIn" +
      "dexRequest\032\032.adamant.global.v1.Address\"\000" +
      "\022d\n\rListAddresses\022\'.adamant.global.v1.Li" +
      "stAddressesRequest\032(.adamant.global.v1.L" +
      "istAddressesResponse\"\000\022R\n\rImportAddress\022" +
      "\'.adamant.global.v1.ImportAddressRequest" +
      "\032\026.google.protobuf.Empty\"\000\022q\n\025GetEthereu" +
      "mFeeAddress\022/.adamant.global.v1.GetEther" +
      "eumFeeAddressRequest\032%.adamant.global.v1" +
      ".EthereumFeeAddress\"\000\022`\n\024UpdateAddressBa" +
      "lance\022..adamant.global.v1.UpdateAddressB" +
      "alanceRequest\032\026.google.protobuf.Empty\"\000\022" +
      "p\n\021CreateTransaction\022+.adamant.global.v1" +
      ".CreateTransactionRequest\032,.adamant.glob" +
      "al.v1.CreateTransactionResponse\"\000\022V\n\017Sig" +
      "nTransaction\022).adamant.teller.v1.SignTra" +
      "nsactionRequest\032\026.google.protobuf.Empty\"" +
      "\000\022j\n\017SendTransaction\022).adamant.teller.v1" +
      ".SendTransactionRequest\032*.adamant.global" +
      ".v1.SendTransactionResponse\"\000\022Z\n\021CancelT" +
      "ransaction\022+.adamant.global.v1.CancelTra" +
      "nsactionRequest\032\026.google.protobuf.Empty\"" +
      "\000\022s\n\022ReplaceTransaction\022,.adamant.global" +
      ".v1.ReplaceTransactionRequest\032-.adamant." +
      "global.v1.ReplaceTransactionResponse\"\000\022\\" +
      "\n\016GetTransaction\022(.adamant.global.v1.Get" +
      "TransactionRequest\032\036.adamant.global.v1.T" +
      "ransaction\"\000\022h\n\024GetTransactionByTxID\022..a" +
      "damant.global.v1.GetTransactionByTxIDReq" +
      "uest\032\036.adamant.global.v1.Transaction\"\000\022m" +
      "\n\020ListTransactions\022*.adamant.global.v1.L" +
      "istTransactionsRequest\032+.adamant.global." +
      "v1.ListTransactionsResponse\"\000\022}\n\030ListTra" +
      "nsactionsByFilter\0222.adamant.global.v1.Li" +
      "stTransactionsByFilterRequest\032+.adamant." +
      "global.v1.ListTransactionsResponse\"\000\022\224\001\n" +
      "\035ExitEthereumStakingValidators\0227.adamant" +
      ".global.v1.ExitEthereumStakingValidators" +
      "Request\0328.adamant.global.v1.ExitEthereum" +
      "StakingValidatorsResponse\"\000\022d\n\rListTrans" +
      "fers\022\'.adamant.global.v1.ListTransfersRe" +
      "quest\032(.adamant.global.v1.ListTransfersR" +
      "esponse\"\000\022t\n\025ListTransfersByFilter\022/.ada" +
      "mant.global.v1.ListTransfersByFilterRequ" +
      "est\032(.adamant.global.v1.ListTransfersRes" +
      "ponse\"\000\022_\n\017GetRateSnapshot\022).adamant.glo" +
      "bal.v1.GetRateSnapshotRequest\032\037.adamant." +
      "global.v1.RateSnapshot\"\000\022k\n\025GetLatestRat" +
      "eSnapshot\022/.adamant.global.v1.GetLatestR" +
      "ateSnapshotRequest\032\037.adamant.global.v1.R" +
      "ateSnapshot\"\000\022U\n\010SetRates\022\".adamant.glob" +
      "al.v1.SetRatesRequest\032#.adamant.global.v" +
      "1.SetRatesResponse\"\000\022a\n\014CalculateFee\022&.a" +
      "damant.global.v1.CalculateFeeRequest\032\'.a" +
      "damant.global.v1.CalculateFeeResponse\"\000\022" +
      "|\n\025GetRecommendedFeeRate\022/.adamant.globa" +
      "l.v1.GetRecommendedFeeRateRequest\0320.adam" +
      "ant.global.v1.GetRecommendedFeeRateRespo" +
      "nse\"\000\022j\n\017ValidateAddress\022).adamant.globa" +
      "l.v1.ValidateAddressRequest\032*.adamant.gl" +
      "obal.v1.ValidateAddressResponse\"\000\022a\n\014Flu" +
      "shBalance\022&.adamant.global.v1.FlushBalan" +
      "ceRequest\032\'.adamant.global.v1.FlushBalan" +
      "ceResponse\"\000\022d\n\rListAuditLogs\022\'.adamant." +
      "global.v1.ListAuditLogsRequest\032(.adamant" +
      ".global.v1.ListAuditLogsResponse\"\000\022\211\001\n\034L" +
      "istStakingHistoriesByFilter\0226.adamant.gl" +
      "obal.v1.ListStakingHistoriesByFilterRequ" +
      "est\032/.adamant.global.v1.ListStakingHisto" +
      "riesResponse\"\000\022\214\001\n\035ListStakingValidators" +
      "ByFilter\0227.adamant.global.v1.ListStaking" +
      "ValidatorsByFilterRequest\0320.adamant.glob" +
      "al.v1.ListStakingValidatorsResponse\"\000\022^\n" +
      "\013SignMessage\022%.adamant.teller.v1.SignMes" +
      "sageRequest\032&.adamant.teller.v1.SignMess" +
      "ageResponse\"\000\022x\n\025ProgmatCoinInitialize\022/" +
      ".adamant.teller.v1.ProgmatCoinInitialize" +
      "Request\032,.adamant.global.v1.CreateTransa" +
      "ctionResponse\"\000\022\202\001\n\032ProgmatCoinConfigure" +
      "Minter\0224.adamant.teller.v1.ProgmatCoinCo" +
      "nfigureMinterRequest\032,.adamant.global.v1" +
      ".CreateTransactionResponse\"\000\022\202\001\n\032Progmat" +
      "CoinMintAndTransfer\0224.adamant.teller.v1." +
      "ProgmatCoinMintAndTransferRequest\032,.adam" +
      "ant.global.v1.CreateTransactionResponse\"" +
      "\000\022l\n\017ProgmatCoinMint\022).adamant.teller.v1" +
      ".ProgmatCoinMintRequest\032,.adamant.global" +
      ".v1.CreateTransactionResponse\"\000\022t\n\023Progm" +
      "atCoinTransfer\022-.adamant.teller.v1.Progm" +
      "atCoinTransferRequest\032,.adamant.global.v" +
      "1.CreateTransactionResponse\"\000\022l\n\017Progmat" +
      "CoinBurn\022).adamant.teller.v1.ProgmatCoin" +
      "BurnRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022\200\001\n\031ProgmatCoinAddTo" +
      "Whitelist\0223.adamant.teller.v1.ProgmatCoi" +
      "nAddToWhitelistRequest\032,.adamant.global." +
      "v1.CreateTransactionResponse\"\000\022\212\001\n\036Progm" +
      "atCoinRemoveFromWhitelist\0228.adamant.tell" +
      "er.v1.ProgmatCoinRemoveFromWhitelistRequ" +
      "est\032,.adamant.global.v1.CreateTransactio" +
      "nResponse\"\000\022\200\001\n\031ProgmatCoinAddToBlacklis" +
      "t\0223.adamant.teller.v1.ProgmatCoinAddToBl" +
      "acklistRequest\032,.adamant.global.v1.Creat" +
      "eTransactionResponse\"\000\022\212\001\n\036ProgmatCoinRe" +
      "moveFromBlacklist\0228.adamant.teller.v1.Pr" +
      "ogmatCoinRemoveFromBlacklistRequest\032,.ad" +
      "amant.global.v1.CreateTransactionRespons" +
      "e\"\000\022x\n\025ProgmatCoinConfiscate\022/.adamant.t" +
      "eller.v1.ProgmatCoinConfiscateRequest\032,." +
      "adamant.global.v1.CreateTransactionRespo" +
      "nse\"\000\022n\n\020ProgmatCoinPause\022*.adamant.tell" +
      "er.v1.ProgmatCoinPauseRequest\032,.adamant." +
      "global.v1.CreateTransactionResponse\"\000\022r\n" +
      "\022ProgmatCoinUnpause\022,.adamant.teller.v1." +
      "ProgmatCoinUnpauseRequest\032,.adamant.glob" +
      "al.v1.CreateTransactionResponse\"\000B^B\016Tel" +
      "lerAPIProtoP\001ZJgithub.com/GincoInc/gew-k" +
      "mp/gen/gincoinc/adamant/teller/v1/adaman" +
      "ttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageRequest_descriptor,
        new java.lang.String[] { "WalletId", "AddressId", "Address", "Message", "AddressId", "Address", });
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageResponse_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "TokenName", "TokenSymbol", "TokenCurrency", "TokenDecimals", "NewMasterMinter", "NewPauser", "NewWhiteAndBlackLister", "NewConfiscator", "NewOwner", });
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "MinterAllowedAmount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "MintAddress", "TransferAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "Address", "StringValue", });
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "BlackListedAccount", "ToAccount", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
