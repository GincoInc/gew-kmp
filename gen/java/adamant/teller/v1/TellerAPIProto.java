// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\356\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022D\n\007network\030\007 \001(\0162\033.gincoinc.global.v1.N" +
      "etworkB\010\372B\005\202\001\002\020\001H\000R\007network\210\001\001\022L\n\013wallet" +
      "_type\030\003 \001(\0162\035.adamant.global.v1.WalletTy" +
      "peB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N\n\014address_" +
      "type\030\004 \001(\0162\037.gincoinc.global.v1.AddressT" +
      "ypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203\001\n\025destina" +
      "tion_wallet_id\030\005 \001(\tBO\372BLrJ2H^$|^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\023destinationWallet" +
      "Id\022{\n\021inherit_wallet_id\030\006 \001(\tBO\372BLrJ2H^$" +
      "|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$R\017inheritW" +
      "alletIdB\n\n\010_network\"\207\001\n\032InitializeXRPWal" +
      "letRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001" +
      "\n\027InitializeWalletRequest\022i\n\twallet_id\030\001" +
      " \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[" +
      "0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12" +
      "}$R\010walletId\"\370\001\n\026SignTransactionRequest\022" +
      "i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\010walletId\022s\n\016transactio" +
      "n_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\rtransactionId\"\310\002\n\022SignMessageR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\nadd" +
      "ress_id\030\002 \001(\tBO\372BLrJ2H^$|^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$H\000R\taddressId\210\001\001\022\035\n\007addres" +
      "s\030\004 \001(\tH\001R\007address\210\001\001\022\030\n\007message\030\003 \001(\tR\007" +
      "messageB\r\n\013_address_idB\n\n\010_address\"3\n\023Si" +
      "gnMessageResponse\022\034\n\tsignature\030\001 \001(\tR\tsi" +
      "gnature\"\370\001\n\026SendTransactionRequest\022i\n\twa" +
      "llet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a" +
      "-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0" +
      "-9a-f]{12}$R\010walletId\022s\n\016transaction_id\030" +
      "\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\rtransactionId\"\372\001\n\030ResendTransaction" +
      "Request\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9" +
      "a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][" +
      "0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016tr" +
      "ansaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\rtransactionId\"\220\006\n\034Prog" +
      "matCoinInitializeRequest\022i\n\twallet_id\030\001 " +
      "\001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0" +
      "-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}" +
      "$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H" +
      "\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[" +
      "0-9a-fA-F]{40}$R\017contractAddress\022(\n\ntoke" +
      "n_name\030\004 \001(\tB\t\372B\006r\004\020\001\030(R\ttokenName\022,\n\014to" +
      "ken_symbol\030\005 \001(\tB\t\372B\006r\004\020\001\030\nR\013tokenSymbol" +
      "\0220\n\016token_currency\030\006 \001(\tB\t\372B\006r\004\020\001\030\003R\rtok" +
      "enCurrency\022.\n\016token_decimals\030\007 \001(\rB\007\372B\004*" +
      "\002\020dR\rtokenDecimals\022I\n\021new_master_minter\030" +
      "\010 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017ne" +
      "wMasterMinter\022<\n\nnew_pauser\030\t \001(\tB\035\372B\032r\030" +
      "2\026^(0x)?[0-9a-fA-F]{40}$R\tnewPauser\022Y\n\032n" +
      "ew_white_and_black_lister\030\n \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\026newWhiteAndBlack" +
      "Lister\022F\n\017new_confiscator\030\013 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\016newConfiscator\022:" +
      "\n\tnew_owner\030\014 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA" +
      "-F]{40}$R\010newOwner\"\340\002\n!ProgmatCoinConfig" +
      "ureMinterRequest\022i\n\twallet_id\030\001 \001(\tBL\372BI" +
      "rG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3" +
      "}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walle" +
      "tId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contra" +
      "ct_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\017contractAddress\0227\n\007address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007addres" +
      "s\0222\n\025minter_allowed_amount\030\005 \001(\tR\023minter" +
      "AllowedAmount\"\227\003\n!ProgmatCoinMintAndTran" +
      "sferRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^" +
      "[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89" +
      "ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031" +
      "\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_ad" +
      "dress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40" +
      "}$R\017contractAddress\022@\n\014mint_address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\013mintAd" +
      "dress\022H\n\020transfer_address\030\005 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\017transferAddress\022" +
      "\026\n\006amount\030\006 \001(\tR\006amount\"\271\002\n\026ProgmatCoinM" +
      "intRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n" +
      "\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_add" +
      "ress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}" +
      "$R\017contractAddress\0227\n\007address\030\004 \001(\tB\035\372B\032" +
      "r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007address\022\026\n\006a" +
      "mount\030\005 \001(\tR\006amount\"\200\002\n\026ProgmatCoinBurnR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee" +
      "_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_address" +
      "\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017c" +
      "ontractAddress\022\026\n\006amount\030\004 \001(\tR\006amount\"\253" +
      "\002\n ProgmatCoinAddToWhitelistRequest\022i\n\tw" +
      "allet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9" +
      "a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[" +
      "0-9a-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004" +
      "R\007feeRate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032" +
      "r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017contractAddr" +
      "ess\0227\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a" +
      "-fA-F]{40}$R\007address\"\260\002\n%ProgmatCoinRemo" +
      "veFromWhitelistRequest\022i\n\twallet_id\030\001 \001(" +
      "\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9" +
      "a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R" +
      "\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020" +
      "contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-" +
      "9a-fA-F]{40}$R\017contractAddress\0227\n\007addres" +
      "s\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007" +
      "address\"\253\002\n ProgmatCoinAddToBlacklistReq" +
      "uest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_r" +
      "ate\030\002 \001(\004R\007feeRate\022H\n\020contract_address\030\003" +
      " \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017con" +
      "tractAddress\0227\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(" +
      "0x)?[0-9a-fA-F]{40}$R\007address\"\260\002\n%Progma" +
      "tCoinRemoveFromBlacklistRequest\022i\n\twalle" +
      "t_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fe" +
      "eRate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\017contractAddress\022" +
      "7\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\007address\"\225\003\n\034ProgmatCoinConfisca" +
      "teRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0" +
      "-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab" +
      "][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010" +
      "fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_addr" +
      "ess\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$" +
      "R\017contractAddress\022O\n\024black_listed_accoun" +
      "t\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\022" +
      "blackListedAccount\022<\n\nto_account\030\005 \001(\tB\035" +
      "\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\ttoAccount" +
      "\022\026\n\006amount\030\006 \001(\tR\006amount\"\351\001\n\027ProgmatCoin" +
      "PauseRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E" +
      "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[8" +
      "9ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022" +
      "\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_a" +
      "ddress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{4" +
      "0}$R\017contractAddress\"\353\001\n\031ProgmatCoinUnpa" +
      "useRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n" +
      "\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_add" +
      "ress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}" +
      "$R\017contractAddress\"$\n\"ListColdFeeDeposit" +
      "AddressesRequest\"r\n#ListColdFeeDepositAd" +
      "dressesResponse\022K\n\020caller_addresses\030\001 \003(" +
      "\0132 .adamant.global.v1.CallerAddressR\017cal" +
      "lerAddresses\"#\n!ListHotFeeDepositAddress" +
      "esRequest\"~\n\"ListHotFeeDepositAddressesR" +
      "esponse\022X\n\025fee_deposit_addresses\030\001 \003(\0132$" +
      ".adamant.global.v1.FeeDepositAddressR\023fe" +
      "eDepositAddresses2\3536\n\tTellerAPI\022a\n\014Creat" +
      "eWallet\022&.adamant.teller.v1.CreateWallet" +
      "Request\032\'.adamant.global.v1.CreateWallet" +
      "Response\"\000\022M\n\tGetWallet\022#.adamant.global" +
      ".v1.GetWalletRequest\032\031.adamant.global.v1" +
      ".Wallet\"\000\022^\n\013ListWallets\022%.adamant.globa" +
      "l.v1.ListWalletsRequest\032&.adamant.global" +
      ".v1.ListWalletsResponse\"\000\022n\n\023ListWallets" +
      "ByFilter\022-.adamant.global.v1.ListWallets" +
      "ByFilterRequest\032&.adamant.global.v1.List" +
      "WalletsResponse\"\000\022\203\001\n\032ListStakingWallets" +
      "ByFilter\0224.adamant.global.v1.ListStaking" +
      "WalletsByFilterRequest\032-.adamant.global." +
      "v1.ListStakingWalletsResponse\"\000\022j\n\017ListB" +
      "aseWallets\022).adamant.global.v1.ListBaseW" +
      "alletsRequest\032*.adamant.global.v1.ListBa" +
      "seWalletsResponse\"\000\022v\n\023GetSpendableBalan" +
      "ce\022-.adamant.global.v1.GetSpendableBalan" +
      "ceRequest\032..adamant.global.v1.GetSpendab" +
      "leBalanceResponse\"\000\022^\n\023InitializeXRPWall" +
      "et\022-.adamant.teller.v1.InitializeXRPWall" +
      "etRequest\032\026.google.protobuf.Empty\"\000\022X\n\020I" +
      "nitializeWallet\022*.adamant.teller.v1.Init" +
      "ializeWalletRequest\032\026.google.protobuf.Em" +
      "pty\"\000\022j\n\031UpdateDestinationWalletID\0223.ada" +
      "mant.global.v1.UpdateDestinationWalletID" +
      "Request\032\026.google.protobuf.Empty\"\000\022m\n\020Get" +
      "CosmosBalance\022*.adamant.global.v1.GetCos" +
      "mosBalanceRequest\032+.adamant.global.v1.Ge" +
      "tCosmosBalanceResponse\"\000\022\216\001\n\033ListCosmosD" +
      "elegateHistories\0225.adamant.global.v1.Lis" +
      "tCosmosDelegateHistoriesRequest\0326.adaman" +
      "t.global.v1.ListCosmosDelegateHistoriesR" +
      "esponse\"\000\022d\n\rCreateAddress\022\'.adamant.glo" +
      "bal.v1.CreateAddressRequest\032(.adamant.gl" +
      "obal.v1.CreateAddressResponse\"\000\022p\n\021Creat" +
      "eIOSTAccount\022+.adamant.global.v1.CreateI" +
      "OSTAccountRequest\032,.adamant.global.v1.Cr" +
      "eateIOSTAccountResponse\"\000\022\205\001\n\030ListSymbol" +
      "ChildAddresses\0222.adamant.global.v1.ListS" +
      "ymbolChildAddressesRequest\0323.adamant.glo" +
      "bal.v1.ListSymbolChildAddressesResponse\"" +
      "\000\022P\n\nGetAddress\022$.adamant.global.v1.GetA" +
      "ddressRequest\032\032.adamant.global.v1.Addres" +
      "s\"\000\022b\n\023GetAddressByAddress\022-.adamant.glo" +
      "bal.v1.GetAddressByAddressRequest\032\032.adam" +
      "ant.global.v1.Address\"\000\022j\n\027GetAddressByA" +
      "ddressCoin\0221.adamant.global.v1.GetAddres" +
      "sByAddressCoinRequest\032\032.adamant.global.v" +
      "1.Address\"\000\022^\n\021GetAddressByIndex\022+.adama" +
      "nt.global.v1.GetAddressByIndexRequest\032\032." +
      "adamant.global.v1.Address\"\000\022d\n\rListAddre" +
      "sses\022\'.adamant.global.v1.ListAddressesRe" +
      "quest\032(.adamant.global.v1.ListAddressesR" +
      "esponse\"\000\022R\n\rImportAddress\022\'.adamant.glo" +
      "bal.v1.ImportAddressRequest\032\026.google.pro" +
      "tobuf.Empty\"\000\022q\n\025GetEthereumFeeAddress\022/" +
      ".adamant.global.v1.GetEthereumFeeAddress" +
      "Request\032%.adamant.global.v1.EthereumFeeA" +
      "ddress\"\000\022`\n\024UpdateAddressBalance\022..adama" +
      "nt.global.v1.UpdateAddressBalanceRequest" +
      "\032\026.google.protobuf.Empty\"\000\022\216\001\n\033ListColdF" +
      "eeDepositAddresses\0225.adamant.teller.v1.L" +
      "istColdFeeDepositAddressesRequest\0326.adam" +
      "ant.teller.v1.ListColdFeeDepositAddresse" +
      "sResponse\"\000\022\213\001\n\032ListHotFeeDepositAddress" +
      "es\0224.adamant.teller.v1.ListHotFeeDeposit" +
      "AddressesRequest\0325.adamant.teller.v1.Lis" +
      "tHotFeeDepositAddressesResponse\"\000\022p\n\021Cre" +
      "ateTransaction\022+.adamant.global.v1.Creat" +
      "eTransactionRequest\032,.adamant.global.v1." +
      "CreateTransactionResponse\"\000\022V\n\017SignTrans" +
      "action\022).adamant.teller.v1.SignTransacti" +
      "onRequest\032\026.google.protobuf.Empty\"\000\022j\n\017S" +
      "endTransaction\022).adamant.teller.v1.SendT" +
      "ransactionRequest\032*.adamant.global.v1.Se" +
      "ndTransactionResponse\"\000\022p\n\021ResendTransac" +
      "tion\022+.adamant.teller.v1.ResendTransacti" +
      "onRequest\032,.adamant.global.v1.ResendTran" +
      "sactionResponse\"\000\022Z\n\021CancelTransaction\022+" +
      ".adamant.global.v1.CancelTransactionRequ" +
      "est\032\026.google.protobuf.Empty\"\000\022s\n\022Replace" +
      "Transaction\022,.adamant.global.v1.ReplaceT" +
      "ransactionRequest\032-.adamant.global.v1.Re" +
      "placeTransactionResponse\"\000\022\205\001\n\030IsTransac" +
      "tionReplaceable\0222.adamant.global.v1.IsTr" +
      "ansactionReplaceableRequest\0323.adamant.gl" +
      "obal.v1.IsTransactionReplaceableResponse" +
      "\"\000\022\\\n\016GetTransaction\022(.adamant.global.v1" +
      ".GetTransactionRequest\032\036.adamant.global." +
      "v1.Transaction\"\000\022h\n\024GetTransactionByTxID" +
      "\022..adamant.global.v1.GetTransactionByTxI" +
      "DRequest\032\036.adamant.global.v1.Transaction" +
      "\"\000\022m\n\020ListTransactions\022*.adamant.global." +
      "v1.ListTransactionsRequest\032+.adamant.glo" +
      "bal.v1.ListTransactionsResponse\"\000\022}\n\030Lis" +
      "tTransactionsByFilter\0222.adamant.global.v" +
      "1.ListTransactionsByFilterRequest\032+.adam" +
      "ant.global.v1.ListTransactionsResponse\"\000" +
      "\022\224\001\n\035ExitEthereumStakingValidators\0227.ada" +
      "mant.global.v1.ExitEthereumStakingValida" +
      "torsRequest\0328.adamant.global.v1.ExitEthe" +
      "reumStakingValidatorsResponse\"\000\022d\n\rListT" +
      "ransfers\022\'.adamant.global.v1.ListTransfe" +
      "rsRequest\032(.adamant.global.v1.ListTransf" +
      "ersResponse\"\000\022t\n\025ListTransfersByFilter\022/" +
      ".adamant.global.v1.ListTransfersByFilter" +
      "Request\032(.adamant.global.v1.ListTransfer" +
      "sResponse\"\000\022_\n\017GetRateSnapshot\022).adamant" +
      ".global.v1.GetRateSnapshotRequest\032\037.adam" +
      "ant.global.v1.RateSnapshot\"\000\022k\n\025GetLates" +
      "tRateSnapshot\022/.adamant.global.v1.GetLat" +
      "estRateSnapshotRequest\032\037.adamant.global." +
      "v1.RateSnapshot\"\000\022U\n\010SetRates\022\".adamant." +
      "global.v1.SetRatesRequest\032#.adamant.glob" +
      "al.v1.SetRatesResponse\"\000\022a\n\014CalculateFee" +
      "\022&.adamant.global.v1.CalculateFeeRequest" +
      "\032\'.adamant.global.v1.CalculateFeeRespons" +
      "e\"\000\022|\n\025GetRecommendedFeeRate\022/.adamant.g" +
      "lobal.v1.GetRecommendedFeeRateRequest\0320." +
      "adamant.global.v1.GetRecommendedFeeRateR" +
      "esponse\"\000\022j\n\017ValidateAddress\022).adamant.g" +
      "lobal.v1.ValidateAddressRequest\032*.adaman" +
      "t.global.v1.ValidateAddressResponse\"\000\022a\n" +
      "\014FlushBalance\022&.adamant.global.v1.FlushB" +
      "alanceRequest\032\'.adamant.global.v1.FlushB" +
      "alanceResponse\"\000\022d\n\rListAuditLogs\022\'.adam" +
      "ant.global.v1.ListAuditLogsRequest\032(.ada" +
      "mant.global.v1.ListAuditLogsResponse\"\000\022\211" +
      "\001\n\034ListStakingHistoriesByFilter\0226.adaman" +
      "t.global.v1.ListStakingHistoriesByFilter" +
      "Request\032/.adamant.global.v1.ListStakingH" +
      "istoriesResponse\"\000\022\214\001\n\035ListStakingValida" +
      "torsByFilter\0227.adamant.global.v1.ListSta" +
      "kingValidatorsByFilterRequest\0320.adamant." +
      "global.v1.ListStakingValidatorsResponse\"" +
      "\000\022^\n\013SignMessage\022%.adamant.teller.v1.Sig" +
      "nMessageRequest\032&.adamant.teller.v1.Sign" +
      "MessageResponse\"\000\022x\n\025ProgmatCoinInitiali" +
      "ze\022/.adamant.teller.v1.ProgmatCoinInitia" +
      "lizeRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022\202\001\n\032ProgmatCoinConfi" +
      "gureMinter\0224.adamant.teller.v1.ProgmatCo" +
      "inConfigureMinterRequest\032,.adamant.globa" +
      "l.v1.CreateTransactionResponse\"\000\022\202\001\n\032Pro" +
      "gmatCoinMintAndTransfer\0224.adamant.teller" +
      ".v1.ProgmatCoinMintAndTransferRequest\032,." +
      "adamant.global.v1.CreateTransactionRespo" +
      "nse\"\000\022l\n\017ProgmatCoinMint\022).adamant.telle" +
      "r.v1.ProgmatCoinMintRequest\032,.adamant.gl" +
      "obal.v1.CreateTransactionResponse\"\000\022l\n\017P" +
      "rogmatCoinBurn\022).adamant.teller.v1.Progm" +
      "atCoinBurnRequest\032,.adamant.global.v1.Cr" +
      "eateTransactionResponse\"\000\022\200\001\n\031ProgmatCoi" +
      "nAddToWhitelist\0223.adamant.teller.v1.Prog" +
      "matCoinAddToWhitelistRequest\032,.adamant.g" +
      "lobal.v1.CreateTransactionResponse\"\000\022\212\001\n" +
      "\036ProgmatCoinRemoveFromWhitelist\0228.adaman" +
      "t.teller.v1.ProgmatCoinRemoveFromWhiteli" +
      "stRequest\032,.adamant.global.v1.CreateTran" +
      "sactionResponse\"\000\022\200\001\n\031ProgmatCoinAddToBl" +
      "acklist\0223.adamant.teller.v1.ProgmatCoinA" +
      "ddToBlacklistRequest\032,.adamant.global.v1" +
      ".CreateTransactionResponse\"\000\022\212\001\n\036Progmat" +
      "CoinRemoveFromBlacklist\0228.adamant.teller" +
      ".v1.ProgmatCoinRemoveFromBlacklistReques" +
      "t\032,.adamant.global.v1.CreateTransactionR" +
      "esponse\"\000\022x\n\025ProgmatCoinConfiscate\022/.ada" +
      "mant.teller.v1.ProgmatCoinConfiscateRequ" +
      "est\032,.adamant.global.v1.CreateTransactio" +
      "nResponse\"\000\022n\n\020ProgmatCoinPause\022*.adaman" +
      "t.teller.v1.ProgmatCoinPauseRequest\032,.ad" +
      "amant.global.v1.CreateTransactionRespons" +
      "e\"\000\022r\n\022ProgmatCoinUnpause\022,.adamant.tell" +
      "er.v1.ProgmatCoinUnpauseRequest\032,.adaman" +
      "t.global.v1.CreateTransactionResponse\"\000B" +
      "^B\016TellerAPIProtoP\001ZJgithub.com/GincoInc" +
      "/gew-kmp/gen/gincoinc/adamant/teller/v1/" +
      "adamanttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "Network", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", "Network", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageRequest_descriptor,
        new java.lang.String[] { "WalletId", "AddressId", "Address", "Message", "AddressId", "Address", });
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageResponse_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "TokenName", "TokenSymbol", "TokenCurrency", "TokenDecimals", "NewMasterMinter", "NewPauser", "NewWhiteAndBlackLister", "NewConfiscator", "NewOwner", });
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "MinterAllowedAmount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "MintAddress", "TransferAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "BlackListedAccount", "ToAccount", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor,
        new java.lang.String[] { });
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor,
        new java.lang.String[] { "CallerAddresses", });
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor,
        new java.lang.String[] { });
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor,
        new java.lang.String[] { "FeeDepositAddresses", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
