// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\234\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022L\n\013wallet_type\030\003 \001(\0162\035.adamant.global.v" +
      "1.WalletTypeB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N" +
      "\n\014address_type\030\004 \001(\0162\037.gincoinc.global.v" +
      "1.AddressTypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203" +
      "\001\n\025destination_wallet_id\030\005 \001(\tBO\372BLrJ2H^" +
      "$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-" +
      "[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\023destina" +
      "tionWalletId\022{\n\021inherit_wallet_id\030\006 \001(\tB" +
      "O\372BLrJ2H^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\017inheritWalletId\"\207\001\n\032InitializeXRPWalle" +
      "tRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001\n\027" +
      "InitializeWalletRequest\022i\n\twallet_id\030\001 \001" +
      "(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\010walletId\"\370\001\n\026SignTransactionRequest\022i\n" +
      "\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$R\010walletId\022s\n\016transaction_" +
      "id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\rtransactionId\"\370\001\n\026SendTransactio" +
      "nRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016t" +
      "ransaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}" +
      "-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]" +
      "{3}-[0-9a-f]{12}$R\rtransactionId\"\254\004\n\034Pro" +
      "gmatCoinInitializeRequest\022i\n\twallet_id\030\001" +
      " \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[" +
      "0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12" +
      "}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022" +
      ")\n\020contract_address\030\003 \001(\tR\017contractAddre" +
      "ss\022\035\n\ntoken_name\030\004 \001(\tR\ttokenName\022!\n\014tok" +
      "en_symbol\030\005 \001(\tR\013tokenSymbol\022%\n\016token_cu" +
      "rrency\030\006 \001(\tR\rtokenCurrency\022%\n\016token_dec" +
      "imals\030\007 \001(\rR\rtokenDecimals\022*\n\021new_master" +
      "_minter\030\010 \001(\tR\017newMasterMinter\022\035\n\nnew_pa" +
      "user\030\t \001(\tR\tnewPauser\022:\n\032new_white_and_b" +
      "lack_lister\030\n \001(\tR\026newWhiteAndBlackListe" +
      "r\022\'\n\017new_confiscator\030\013 \001(\tR\016newConfiscat" +
      "or\022\033\n\tnew_owner\030\014 \001(\tR\010newOwner\"\242\002\n!Prog" +
      "matCoinConfigureMinterRequest\022i\n\twallet_" +
      "id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeR" +
      "ate\022)\n\020contract_address\030\003 \001(\tR\017contractA" +
      "ddress\022\030\n\007address\030\004 \001(\tR\007address\0222\n\025mint" +
      "er_allowed_amount\030\005 \001(\tR\023minterAllowedAm" +
      "ount\"\272\002\n!ProgmatCoinMintAndTransferReque" +
      "st\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{" +
      "8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-" +
      "f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_rat" +
      "e\030\002 \001(\004R\007feeRate\022)\n\020contract_address\030\003 \001" +
      "(\tR\017contractAddress\022!\n\014mint_address\030\004 \001(" +
      "\tR\013mintAddress\022)\n\020transfer_address\030\005 \001(\t" +
      "R\017transferAddress\022\026\n\006amount\030\006 \001(\tR\006amoun" +
      "t\"\373\001\n\026ProgmatCoinMintRequest\022i\n\twallet_i" +
      "d\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}" +
      "-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]" +
      "{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRa" +
      "te\022)\n\020contract_address\030\003 \001(\tR\017contractAd" +
      "dress\022\030\n\007address\030\004 \001(\tR\007address\022\026\n\006amoun" +
      "t\030\005 \001(\tR\006amount\"\337\001\n\032ProgmatCoinTransferR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee" +
      "_rate\030\002 \001(\004R\007feeRate\022\030\n\007address\030\003 \001(\tR\007a" +
      "ddress\022!\n\014string_value\030\004 \001(\tR\013stringValu" +
      "e\"\341\001\n\026ProgmatCoinBurnRequest\022i\n\twallet_i" +
      "d\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}" +
      "-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]" +
      "{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRa" +
      "te\022)\n\020contract_address\030\003 \001(\tR\017contractAd" +
      "dress\022\026\n\006amount\030\004 \001(\tR\006amount\"\355\001\n Progma" +
      "tCoinAddToWhitelistRequest\022i\n\twallet_id\030" +
      "\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate" +
      "\022)\n\020contract_address\030\003 \001(\tR\017contractAddr" +
      "ess\022\030\n\007address\030\004 \001(\tR\007address\"\362\001\n%Progma" +
      "tCoinRemoveFromWhitelistRequest\022i\n\twalle" +
      "t_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fe" +
      "eRate\022)\n\020contract_address\030\003 \001(\tR\017contrac" +
      "tAddress\022\030\n\007address\030\004 \001(\tR\007address\"\355\001\n P" +
      "rogmatCoinAddToBlacklistRequest\022i\n\twalle" +
      "t_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fe" +
      "eRate\022)\n\020contract_address\030\003 \001(\tR\017contrac" +
      "tAddress\022\030\n\007address\030\004 \001(\tR\007address\"\362\001\n%P" +
      "rogmatCoinRemoveFromBlacklistRequest\022i\n\t" +
      "wallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-" +
      "9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-" +
      "[0-9a-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(" +
      "\004R\007feeRate\022)\n\020contract_address\030\003 \001(\tR\017co" +
      "ntractAddress\022\030\n\007address\030\004 \001(\tR\007address\"" +
      "\270\002\n\034ProgmatCoinConfiscateRequest\022i\n\twall" +
      "et_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f" +
      "]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9" +
      "a-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007f" +
      "eeRate\022)\n\020contract_address\030\003 \001(\tR\017contra" +
      "ctAddress\0220\n\024black_listed_account\030\004 \001(\tR" +
      "\022blackListedAccount\022\035\n\nto_account\030\005 \001(\tR" +
      "\ttoAccount\022\026\n\006amount\030\006 \001(\tR\006amount\"\312\001\n\027P" +
      "rogmatCoinPauseRequest\022i\n\twallet_id\030\001 \001(" +
      "\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9" +
      "a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R" +
      "\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022)\n\020" +
      "contract_address\030\003 \001(\tR\017contractAddress\"" +
      "\314\001\n\031ProgmatCoinUnpauseRequest\022i\n\twallet_" +
      "id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeR" +
      "ate\022)\n\020contract_address\030\003 \001(\tR\017contractA" +
      "ddress2\3502\n\tTellerAPI\022a\n\014CreateWallet\022&.a" +
      "damant.teller.v1.CreateWalletRequest\032\'.a" +
      "damant.global.v1.CreateWalletResponse\"\000\022" +
      "M\n\tGetWallet\022#.adamant.global.v1.GetWall" +
      "etRequest\032\031.adamant.global.v1.Wallet\"\000\022^" +
      "\n\013ListWallets\022%.adamant.global.v1.ListWa" +
      "lletsRequest\032&.adamant.global.v1.ListWal" +
      "letsResponse\"\000\022n\n\023ListWalletsByFilter\022-." +
      "adamant.global.v1.ListWalletsByFilterReq" +
      "uest\032&.adamant.global.v1.ListWalletsResp" +
      "onse\"\000\022\203\001\n\032ListStakingWalletsByFilter\0224." +
      "adamant.global.v1.ListStakingWalletsByFi" +
      "lterRequest\032-.adamant.global.v1.ListStak" +
      "ingWalletsResponse\"\000\022j\n\017ListBaseWallets\022" +
      ").adamant.global.v1.ListBaseWalletsReque" +
      "st\032*.adamant.global.v1.ListBaseWalletsRe" +
      "sponse\"\000\022v\n\023GetSpendableBalance\022-.adaman" +
      "t.global.v1.GetSpendableBalanceRequest\032." +
      ".adamant.global.v1.GetSpendableBalanceRe" +
      "sponse\"\000\022^\n\023InitializeXRPWallet\022-.adaman" +
      "t.teller.v1.InitializeXRPWalletRequest\032\026" +
      ".google.protobuf.Empty\"\000\022X\n\020InitializeWa" +
      "llet\022*.adamant.teller.v1.InitializeWalle" +
      "tRequest\032\026.google.protobuf.Empty\"\000\022j\n\031Up" +
      "dateDestinationWalletID\0223.adamant.global" +
      ".v1.UpdateDestinationWalletIDRequest\032\026.g" +
      "oogle.protobuf.Empty\"\000\022m\n\020GetCosmosBalan" +
      "ce\022*.adamant.global.v1.GetCosmosBalanceR" +
      "equest\032+.adamant.global.v1.GetCosmosBala" +
      "nceResponse\"\000\022\216\001\n\033ListCosmosDelegateHist" +
      "ories\0225.adamant.global.v1.ListCosmosDele" +
      "gateHistoriesRequest\0326.adamant.global.v1" +
      ".ListCosmosDelegateHistoriesResponse\"\000\022d" +
      "\n\rCreateAddress\022\'.adamant.global.v1.Crea" +
      "teAddressRequest\032(.adamant.global.v1.Cre" +
      "ateAddressResponse\"\000\022p\n\021CreateIOSTAccoun" +
      "t\022+.adamant.global.v1.CreateIOSTAccountR" +
      "equest\032,.adamant.global.v1.CreateIOSTAcc" +
      "ountResponse\"\000\022\205\001\n\030ListSymbolChildAddres" +
      "ses\0222.adamant.global.v1.ListSymbolChildA" +
      "ddressesRequest\0323.adamant.global.v1.List" +
      "SymbolChildAddressesResponse\"\000\022P\n\nGetAdd" +
      "ress\022$.adamant.global.v1.GetAddressReque" +
      "st\032\032.adamant.global.v1.Address\"\000\022b\n\023GetA" +
      "ddressByAddress\022-.adamant.global.v1.GetA" +
      "ddressByAddressRequest\032\032.adamant.global." +
      "v1.Address\"\000\022j\n\027GetAddressByAddressCoin\022" +
      "1.adamant.global.v1.GetAddressByAddressC" +
      "oinRequest\032\032.adamant.global.v1.Address\"\000" +
      "\022^\n\021GetAddressByIndex\022+.adamant.global.v" +
      "1.GetAddressByIndexRequest\032\032.adamant.glo" +
      "bal.v1.Address\"\000\022d\n\rListAddresses\022\'.adam" +
      "ant.global.v1.ListAddressesRequest\032(.ada" +
      "mant.global.v1.ListAddressesResponse\"\000\022R" +
      "\n\rImportAddress\022\'.adamant.global.v1.Impo" +
      "rtAddressRequest\032\026.google.protobuf.Empty" +
      "\"\000\022q\n\025GetEthereumFeeAddress\022/.adamant.gl" +
      "obal.v1.GetEthereumFeeAddressRequest\032%.a" +
      "damant.global.v1.EthereumFeeAddress\"\000\022`\n" +
      "\024UpdateAddressBalance\022..adamant.global.v" +
      "1.UpdateAddressBalanceRequest\032\026.google.p" +
      "rotobuf.Empty\"\000\022p\n\021CreateTransaction\022+.a" +
      "damant.global.v1.CreateTransactionReques" +
      "t\032,.adamant.global.v1.CreateTransactionR" +
      "esponse\"\000\022V\n\017SignTransaction\022).adamant.t" +
      "eller.v1.SignTransactionRequest\032\026.google" +
      ".protobuf.Empty\"\000\022j\n\017SendTransaction\022).a" +
      "damant.teller.v1.SendTransactionRequest\032" +
      "*.adamant.global.v1.SendTransactionRespo" +
      "nse\"\000\022Z\n\021CancelTransaction\022+.adamant.glo" +
      "bal.v1.CancelTransactionRequest\032\026.google" +
      ".protobuf.Empty\"\000\022s\n\022ReplaceTransaction\022" +
      ",.adamant.global.v1.ReplaceTransactionRe" +
      "quest\032-.adamant.global.v1.ReplaceTransac" +
      "tionResponse\"\000\022\\\n\016GetTransaction\022(.adama" +
      "nt.global.v1.GetTransactionRequest\032\036.ada" +
      "mant.global.v1.Transaction\"\000\022h\n\024GetTrans" +
      "actionByTxID\022..adamant.global.v1.GetTran" +
      "sactionByTxIDRequest\032\036.adamant.global.v1" +
      ".Transaction\"\000\022m\n\020ListTransactions\022*.ada" +
      "mant.global.v1.ListTransactionsRequest\032+" +
      ".adamant.global.v1.ListTransactionsRespo" +
      "nse\"\000\022}\n\030ListTransactionsByFilter\0222.adam" +
      "ant.global.v1.ListTransactionsByFilterRe" +
      "quest\032+.adamant.global.v1.ListTransactio" +
      "nsResponse\"\000\022\224\001\n\035ExitEthereumStakingVali" +
      "dators\0227.adamant.global.v1.ExitEthereumS" +
      "takingValidatorsRequest\0328.adamant.global" +
      ".v1.ExitEthereumStakingValidatorsRespons" +
      "e\"\000\022d\n\rListTransfers\022\'.adamant.global.v1" +
      ".ListTransfersRequest\032(.adamant.global.v" +
      "1.ListTransfersResponse\"\000\022t\n\025ListTransfe" +
      "rsByFilter\022/.adamant.global.v1.ListTrans" +
      "fersByFilterRequest\032(.adamant.global.v1." +
      "ListTransfersResponse\"\000\022_\n\017GetRateSnapsh" +
      "ot\022).adamant.global.v1.GetRateSnapshotRe" +
      "quest\032\037.adamant.global.v1.RateSnapshot\"\000" +
      "\022k\n\025GetLatestRateSnapshot\022/.adamant.glob" +
      "al.v1.GetLatestRateSnapshotRequest\032\037.ada" +
      "mant.global.v1.RateSnapshot\"\000\022U\n\010SetRate" +
      "s\022\".adamant.global.v1.SetRatesRequest\032#." +
      "adamant.global.v1.SetRatesResponse\"\000\022a\n\014" +
      "CalculateFee\022&.adamant.global.v1.Calcula" +
      "teFeeRequest\032\'.adamant.global.v1.Calcula" +
      "teFeeResponse\"\000\022|\n\025GetRecommendedFeeRate" +
      "\022/.adamant.global.v1.GetRecommendedFeeRa" +
      "teRequest\0320.adamant.global.v1.GetRecomme" +
      "ndedFeeRateResponse\"\000\022j\n\017ValidateAddress" +
      "\022).adamant.global.v1.ValidateAddressRequ" +
      "est\032*.adamant.global.v1.ValidateAddressR" +
      "esponse\"\000\022a\n\014FlushBalance\022&.adamant.glob" +
      "al.v1.FlushBalanceRequest\032\'.adamant.glob" +
      "al.v1.FlushBalanceResponse\"\000\022d\n\rListAudi" +
      "tLogs\022\'.adamant.global.v1.ListAuditLogsR" +
      "equest\032(.adamant.global.v1.ListAuditLogs" +
      "Response\"\000\022\211\001\n\034ListStakingHistoriesByFil" +
      "ter\0226.adamant.global.v1.ListStakingHisto" +
      "riesByFilterRequest\032/.adamant.global.v1." +
      "ListStakingHistoriesResponse\"\000\022\214\001\n\035ListS" +
      "takingValidatorsByFilter\0227.adamant.globa" +
      "l.v1.ListStakingValidatorsByFilterReques" +
      "t\0320.adamant.global.v1.ListStakingValidat" +
      "orsResponse\"\000\022x\n\025ProgmatCoinInitialize\022/" +
      ".adamant.teller.v1.ProgmatCoinInitialize" +
      "Request\032,.adamant.global.v1.CreateTransa" +
      "ctionResponse\"\000\022\202\001\n\032ProgmatCoinConfigure" +
      "Minter\0224.adamant.teller.v1.ProgmatCoinCo" +
      "nfigureMinterRequest\032,.adamant.global.v1" +
      ".CreateTransactionResponse\"\000\022\202\001\n\032Progmat" +
      "CoinMintAndTransfer\0224.adamant.teller.v1." +
      "ProgmatCoinMintAndTransferRequest\032,.adam" +
      "ant.global.v1.CreateTransactionResponse\"" +
      "\000\022l\n\017ProgmatCoinMint\022).adamant.teller.v1" +
      ".ProgmatCoinMintRequest\032,.adamant.global" +
      ".v1.CreateTransactionResponse\"\000\022t\n\023Progm" +
      "atCoinTransfer\022-.adamant.teller.v1.Progm" +
      "atCoinTransferRequest\032,.adamant.global.v" +
      "1.CreateTransactionResponse\"\000\022l\n\017Progmat" +
      "CoinBurn\022).adamant.teller.v1.ProgmatCoin" +
      "BurnRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022\200\001\n\031ProgmatCoinAddTo" +
      "Whitelist\0223.adamant.teller.v1.ProgmatCoi" +
      "nAddToWhitelistRequest\032,.adamant.global." +
      "v1.CreateTransactionResponse\"\000\022\212\001\n\036Progm" +
      "atCoinRemoveFromWhitelist\0228.adamant.tell" +
      "er.v1.ProgmatCoinRemoveFromWhitelistRequ" +
      "est\032,.adamant.global.v1.CreateTransactio" +
      "nResponse\"\000\022\200\001\n\031ProgmatCoinAddToBlacklis" +
      "t\0223.adamant.teller.v1.ProgmatCoinAddToBl" +
      "acklistRequest\032,.adamant.global.v1.Creat" +
      "eTransactionResponse\"\000\022\212\001\n\036ProgmatCoinRe" +
      "moveFromBlacklist\0228.adamant.teller.v1.Pr" +
      "ogmatCoinRemoveFromBlacklistRequest\032,.ad" +
      "amant.global.v1.CreateTransactionRespons" +
      "e\"\000\022x\n\025ProgmatCoinConfiscate\022/.adamant.t" +
      "eller.v1.ProgmatCoinConfiscateRequest\032,." +
      "adamant.global.v1.CreateTransactionRespo" +
      "nse\"\000\022n\n\020ProgmatCoinPause\022*.adamant.tell" +
      "er.v1.ProgmatCoinPauseRequest\032,.adamant." +
      "global.v1.CreateTransactionResponse\"\000\022r\n" +
      "\022ProgmatCoinUnpause\022,.adamant.teller.v1." +
      "ProgmatCoinUnpauseRequest\032,.adamant.glob" +
      "al.v1.CreateTransactionResponse\"\000B^B\016Tel" +
      "lerAPIProtoP\001ZJgithub.com/GincoInc/gew-k" +
      "mp/gen/gincoinc/adamant/teller/v1/adaman" +
      "ttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "TokenName", "TokenSymbol", "TokenCurrency", "TokenDecimals", "NewMasterMinter", "NewPauser", "NewWhiteAndBlackLister", "NewConfiscator", "NewOwner", });
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "MinterAllowedAmount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "MintAddress", "TransferAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "Address", "StringValue", });
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinAddToBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinRemoveFromBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", });
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "BlackListedAccount", "ToAccount", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
