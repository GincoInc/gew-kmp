// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\234\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022L\n\013wallet_type\030\003 \001(\0162\035.adamant.global.v" +
      "1.WalletTypeB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N" +
      "\n\014address_type\030\004 \001(\0162\037.gincoinc.global.v" +
      "1.AddressTypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203" +
      "\001\n\025destination_wallet_id\030\005 \001(\tBO\372BLrJ2H^" +
      "$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-" +
      "[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\023destina" +
      "tionWalletId\022{\n\021inherit_wallet_id\030\006 \001(\tB" +
      "O\372BLrJ2H^$|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\017inheritWalletId\"\207\001\n\032InitializeXRPWalle" +
      "tRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-" +
      "9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab]" +
      "[0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001\n\027" +
      "InitializeWalletRequest\022i\n\twallet_id\030\001 \001" +
      "(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-" +
      "9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$" +
      "R\010walletId\"\370\001\n\026SignTransactionRequest\022i\n" +
      "\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$R\010walletId\022s\n\016transaction_" +
      "id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4" +
      "}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f" +
      "]{12}$R\rtransactionId2\301\032\n\tTellerAPI\022a\n\014C" +
      "reateWallet\022&.adamant.teller.v1.CreateWa" +
      "lletRequest\032\'.adamant.global.v1.CreateWa" +
      "lletResponse\"\000\022M\n\tGetWallet\022#.adamant.gl" +
      "obal.v1.GetWalletRequest\032\031.adamant.globa" +
      "l.v1.Wallet\"\000\022^\n\013ListWallets\022%.adamant.g" +
      "lobal.v1.ListWalletsRequest\032&.adamant.gl" +
      "obal.v1.ListWalletsResponse\"\000\022n\n\023ListWal" +
      "letsByFilter\022-.adamant.global.v1.ListWal" +
      "letsByFilterRequest\032&.adamant.global.v1." +
      "ListWalletsResponse\"\000\022j\n\017ListBaseWallets" +
      "\022).adamant.global.v1.ListBaseWalletsRequ" +
      "est\032*.adamant.global.v1.ListBaseWalletsR" +
      "esponse\"\000\022v\n\023GetSpendableBalance\022-.adama" +
      "nt.global.v1.GetSpendableBalanceRequest\032" +
      "..adamant.global.v1.GetSpendableBalanceR" +
      "esponse\"\000\022^\n\023InitializeXRPWallet\022-.adama" +
      "nt.teller.v1.InitializeXRPWalletRequest\032" +
      "\026.google.protobuf.Empty\"\000\022X\n\020InitializeW" +
      "allet\022*.adamant.teller.v1.InitializeWall" +
      "etRequest\032\026.google.protobuf.Empty\"\000\022d\n\rC" +
      "reateAddress\022\'.adamant.global.v1.CreateA" +
      "ddressRequest\032(.adamant.global.v1.Create" +
      "AddressResponse\"\000\022P\n\nGetAddress\022$.adaman" +
      "t.global.v1.GetAddressRequest\032\032.adamant." +
      "global.v1.Address\"\000\022b\n\023GetAddressByAddre" +
      "ss\022-.adamant.global.v1.GetAddressByAddre" +
      "ssRequest\032\032.adamant.global.v1.Address\"\000\022" +
      "^\n\021GetAddressByIndex\022+.adamant.global.v1" +
      ".GetAddressByIndexRequest\032\032.adamant.glob" +
      "al.v1.Address\"\000\022d\n\rListAddresses\022\'.adama" +
      "nt.global.v1.ListAddressesRequest\032(.adam" +
      "ant.global.v1.ListAddressesResponse\"\000\022d\n" +
      "\rImportAddress\022\'.adamant.global.v1.Impor" +
      "tAddressRequest\032(.adamant.global.v1.Impo" +
      "rtAddressResponse\"\000\022q\n\025GetEthereumFeeAdd" +
      "ress\022/.adamant.global.v1.GetEthereumFeeA" +
      "ddressRequest\032%.adamant.global.v1.Ethere" +
      "umFeeAddress\"\000\022`\n\024UpdateAddressBalance\022." +
      ".adamant.global.v1.UpdateAddressBalanceR" +
      "equest\032\026.google.protobuf.Empty\"\000\022p\n\021Crea" +
      "teTransaction\022+.adamant.global.v1.Create" +
      "TransactionRequest\032,.adamant.global.v1.C" +
      "reateTransactionResponse\"\000\022V\n\017SignTransa" +
      "ction\022).adamant.teller.v1.SignTransactio" +
      "nRequest\032\026.google.protobuf.Empty\"\000\022j\n\017Se" +
      "ndTransaction\022).adamant.global.v1.SendTr" +
      "ansactionRequest\032*.adamant.global.v1.Sen" +
      "dTransactionResponse\"\000\022Z\n\021CancelTransact" +
      "ion\022+.adamant.global.v1.CancelTransactio" +
      "nRequest\032\026.google.protobuf.Empty\"\000\022\\\n\016Ge" +
      "tTransaction\022(.adamant.global.v1.GetTran" +
      "sactionRequest\032\036.adamant.global.v1.Trans" +
      "action\"\000\022h\n\024GetTransactionByTxID\022..adama" +
      "nt.global.v1.GetTransactionByTxIDRequest" +
      "\032\036.adamant.global.v1.Transaction\"\000\022m\n\020Li" +
      "stTransactions\022*.adamant.global.v1.ListT" +
      "ransactionsRequest\032+.adamant.global.v1.L" +
      "istTransactionsResponse\"\000\022}\n\030ListTransac" +
      "tionsByFilter\0222.adamant.global.v1.ListTr" +
      "ansactionsByFilterRequest\032+.adamant.glob" +
      "al.v1.ListTransactionsResponse\"\000\022d\n\rList" +
      "Transfers\022\'.adamant.global.v1.ListTransf" +
      "ersRequest\032(.adamant.global.v1.ListTrans" +
      "fersResponse\"\000\022t\n\025ListTransfersByFilter\022" +
      "/.adamant.global.v1.ListTransfersByFilte" +
      "rRequest\032(.adamant.global.v1.ListTransfe" +
      "rsResponse\"\000\022_\n\017GetRateSnapshot\022).adaman" +
      "t.global.v1.GetRateSnapshotRequest\032\037.ada" +
      "mant.global.v1.RateSnapshot\"\000\022k\n\025GetLate" +
      "stRateSnapshot\022/.adamant.global.v1.GetLa" +
      "testRateSnapshotRequest\032\037.adamant.global" +
      ".v1.RateSnapshot\"\000\022U\n\010SetRates\022\".adamant" +
      ".global.v1.SetRatesRequest\032#.adamant.glo" +
      "bal.v1.SetRatesResponse\"\000\022a\n\014CalculateFe" +
      "e\022&.adamant.global.v1.CalculateFeeReques" +
      "t\032\'.adamant.global.v1.CalculateFeeRespon" +
      "se\"\000\022|\n\025GetRecommendedFeeRate\022/.adamant." +
      "global.v1.GetRecommendedFeeRateRequest\0320" +
      ".adamant.global.v1.GetRecommendedFeeRate" +
      "Response\"\000\022j\n\017ValidateAddress\022).adamant." +
      "global.v1.ValidateAddressRequest\032*.adama" +
      "nt.global.v1.ValidateAddressResponse\"\000\022a" +
      "\n\014FlushBalance\022&.adamant.global.v1.Flush" +
      "BalanceRequest\032\'.adamant.global.v1.Flush" +
      "BalanceResponse\"\000BbB\016TellerAPIProtoP\001ZNg" +
      "ithub.com/GincoInc/protobuf/gen/go/ginco" +
      "inc/adamant/teller/v1/adamanttellerv1b\006p" +
      "roto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
