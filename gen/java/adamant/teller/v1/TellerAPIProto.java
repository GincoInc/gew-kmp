// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBulkAddToWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromWhitelistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromWhitelistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBulkAddToBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromBlacklistRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromBlacklistRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\0325gincoinc/adamant/global/v1/adamantglob" +
      "alv1/enum.proto\032;gincoinc/adamant/global" +
      "/v1/adamantglobalv1/global_api.proto\0326gi" +
      "ncoinc/adamant/global/v1/adamantglobalv1" +
      "/model.proto\032.gincoinc/global/v1/gincoin" +
      "cglobalv1/enum.proto\032\033google/protobuf/em" +
      "pty.proto\032\027validate/validate.proto\"\356\004\n\023C" +
      "reateWalletRequest\022*\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030(R\nwalletName\0228\n\004coin\030\002 \001(\0162\030.g" +
      "incoinc.global.v1.CoinB\n\372B\007\202\001\004\020\001 \000R\004coin" +
      "\022D\n\007network\030\007 \001(\0162\033.gincoinc.global.v1.N" +
      "etworkB\010\372B\005\202\001\002\020\001H\000R\007network\210\001\001\022L\n\013wallet" +
      "_type\030\003 \001(\0162\035.adamant.global.v1.WalletTy" +
      "peB\014\372B\t\202\001\006\020\001 \000 \002R\nwalletType\022N\n\014address_" +
      "type\030\004 \001(\0162\037.gincoinc.global.v1.AddressT" +
      "ypeB\n\372B\007\202\001\004\020\001 \000R\013addressType\022\203\001\n\025destina" +
      "tion_wallet_id\030\005 \001(\tBO\372BLrJ2H^$|^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\023destinationWallet" +
      "Id\022{\n\021inherit_wallet_id\030\006 \001(\tBO\372BLrJ2H^$" +
      "|^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$R\017inheritW" +
      "alletIdB\n\n\010_network\"\207\001\n\032InitializeXRPWal" +
      "letRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\"\204\001" +
      "\n\027InitializeWalletRequest\022i\n\twallet_id\030\001" +
      " \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[" +
      "0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12" +
      "}$R\010walletId\"\370\001\n\026SignTransactionRequest\022" +
      "i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\010walletId\022s\n\016transactio" +
      "n_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]" +
      "{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a" +
      "-f]{12}$R\rtransactionId\"\310\002\n\022SignMessageR" +
      "equest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a" +
      "-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0" +
      "-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\nadd" +
      "ress_id\030\002 \001(\tBO\372BLrJ2H^$|^[0-9a-f]{8}-[0" +
      "-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}" +
      "-[0-9a-f]{12}$H\000R\taddressId\210\001\001\022\035\n\007addres" +
      "s\030\004 \001(\tH\001R\007address\210\001\001\022\030\n\007message\030\003 \001(\tR\007" +
      "messageB\r\n\013_address_idB\n\n\010_address\"3\n\023Si" +
      "gnMessageResponse\022\034\n\tsignature\030\001 \001(\tR\tsi" +
      "gnature\"\370\001\n\026SendTransactionRequest\022i\n\twa" +
      "llet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a" +
      "-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0" +
      "-9a-f]{12}$R\010walletId\022s\n\016transaction_id\030" +
      "\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\rtransactionId\"\372\001\n\030ResendTransaction" +
      "Request\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9" +
      "a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][" +
      "0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022s\n\016tr" +
      "ansaction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-" +
      "[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{" +
      "3}-[0-9a-f]{12}$R\rtransactionId\"\220\006\n\034Prog" +
      "matCoinInitializeRequest\022i\n\twallet_id\030\001 " +
      "\001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0" +
      "-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}" +
      "$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H" +
      "\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[" +
      "0-9a-fA-F]{40}$R\017contractAddress\022(\n\ntoke" +
      "n_name\030\004 \001(\tB\t\372B\006r\004\020\001\030(R\ttokenName\022,\n\014to" +
      "ken_symbol\030\005 \001(\tB\t\372B\006r\004\020\001\030\nR\013tokenSymbol" +
      "\0220\n\016token_currency\030\006 \001(\tB\t\372B\006r\004\020\001\030\003R\rtok" +
      "enCurrency\022.\n\016token_decimals\030\007 \001(\rB\007\372B\004*" +
      "\002\020dR\rtokenDecimals\022I\n\021new_master_minter\030" +
      "\010 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017ne" +
      "wMasterMinter\022<\n\nnew_pauser\030\t \001(\tB\035\372B\032r\030" +
      "2\026^(0x)?[0-9a-fA-F]{40}$R\tnewPauser\022Y\n\032n" +
      "ew_white_and_black_lister\030\n \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\026newWhiteAndBlack" +
      "Lister\022F\n\017new_confiscator\030\013 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\016newConfiscator\022:" +
      "\n\tnew_owner\030\014 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA" +
      "-F]{40}$R\010newOwner\"\340\002\n!ProgmatCoinConfig" +
      "ureMinterRequest\022i\n\twallet_id\030\001 \001(\tBL\372BI" +
      "rG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3" +
      "}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walle" +
      "tId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contra" +
      "ct_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\017contractAddress\0227\n\007address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\007addres" +
      "s\0222\n\025minter_allowed_amount\030\005 \001(\tR\023minter" +
      "AllowedAmount\"\373\003\n!ProgmatCoinMintAndTran" +
      "sferRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^" +
      "[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89" +
      "ab][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031" +
      "\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_ad" +
      "dress\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40" +
      "}$R\017contractAddress\022@\n\014mint_address\030\004 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\013mintAd" +
      "dress\022H\n\020transfer_address\030\005 \001(\tB\035\372B\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\017transferAddress\022" +
      "\026\n\006amount\030\006 \001(\tR\006amount\022N\n\017through_addre" +
      "ss\030\007 \001(\tB \372B\035r\0332\031^$|^(0x)?[0-9a-fA-F]{40" +
      "}$H\000R\016throughAddress\210\001\001B\022\n\020_through_addr" +
      "ess\"\271\002\n\026ProgmatCoinMintRequest\022i\n\twallet" +
      "_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{" +
      "4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-" +
      "f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007fee" +
      "Rate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^" +
      "(0x)?[0-9a-fA-F]{40}$R\017contractAddress\0227" +
      "\n\007address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F" +
      "]{40}$R\007address\022\026\n\006amount\030\005 \001(\tR\006amount\"" +
      "\200\002\n\026ProgmatCoinBurnRequest\022i\n\twallet_id\030" +
      "\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4" +
      "[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{1" +
      "2}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate" +
      "\022H\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)" +
      "?[0-9a-fA-F]{40}$R\017contractAddress\022\026\n\006am" +
      "ount\030\004 \001(\tR\006amount\"\376\002\n$ProgmatCoinBulkAd" +
      "dToWhitelistRequest\022i\n\twallet_id\030\001 \001(\tBL" +
      "\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f" +
      "]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$R\010wa" +
      "lletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H\n\020con" +
      "tract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-" +
      "fA-F]{40}$R\017contractAddress\022B\n\rutils_add" +
      "ress\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}" +
      "$R\014utilsAddress\022B\n\taddresses\030\005 \003(\tB$\372B!\222" +
      "\001\036\020d\"\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\taddres" +
      "ses\"\203\003\n)ProgmatCoinBulkRemoveFromWhiteli" +
      "stRequest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0" +
      "-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab" +
      "][0-9a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010" +
      "fee_rate\030\002 \001(\004R\007feeRate\022H\n\020contract_addr" +
      "ess\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$" +
      "R\017contractAddress\022B\n\rutils_address\030\004 \001(\t" +
      "B\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\014utilsAd" +
      "dress\022B\n\taddresses\030\005 \003(\tB$\372B!\222\001\036\020d\"\032r\0302\026" +
      "^(0x)?[0-9a-fA-F]{40}$R\taddresses\"\376\002\n$Pr" +
      "ogmatCoinBulkAddToBlacklistRequest\022i\n\twa" +
      "llet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a" +
      "-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0" +
      "-9a-f]{12}$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R" +
      "\007feeRate\022H\n\020contract_address\030\003 \001(\tB\035\372B\032r" +
      "\0302\026^(0x)?[0-9a-fA-F]{40}$R\017contractAddre" +
      "ss\022B\n\rutils_address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?" +
      "[0-9a-fA-F]{40}$R\014utilsAddress\022B\n\taddres" +
      "ses\030\005 \003(\tB$\372B!\222\001\036\020d\"\032r\0302\026^(0x)?[0-9a-fA-" +
      "F]{40}$R\taddresses\"\203\003\n)ProgmatCoinBulkRe" +
      "moveFromBlacklistRequest\022i\n\twallet_id\030\001 " +
      "\001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9a-f]{4}-4[0" +
      "-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}" +
      "$R\010walletId\022\031\n\010fee_rate\030\002 \001(\004R\007feeRate\022H" +
      "\n\020contract_address\030\003 \001(\tB\035\372B\032r\0302\026^(0x)?[" +
      "0-9a-fA-F]{40}$R\017contractAddress\022B\n\rutil" +
      "s_address\030\004 \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F" +
      "]{40}$R\014utilsAddress\022B\n\taddresses\030\005 \003(\tB" +
      "$\372B!\222\001\036\020d\"\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\ta" +
      "ddresses\"\225\003\n\034ProgmatCoinConfiscateReques" +
      "t\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{8" +
      "}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f" +
      "]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_rate" +
      "\030\002 \001(\004R\007feeRate\022H\n\020contract_address\030\003 \001(" +
      "\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017contra" +
      "ctAddress\022O\n\024black_listed_account\030\004 \001(\tB" +
      "\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\022blackLis" +
      "tedAccount\022<\n\nto_account\030\005 \001(\tB\035\372B\032r\0302\026^" +
      "(0x)?[0-9a-fA-F]{40}$R\ttoAccount\022\026\n\006amou" +
      "nt\030\006 \001(\tR\006amount\"\351\001\n\027ProgmatCoinPauseReq" +
      "uest\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f" +
      "]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9" +
      "a-f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_r" +
      "ate\030\002 \001(\004R\007feeRate\022H\n\020contract_address\030\003" +
      " \001(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017con" +
      "tractAddress\"\353\001\n\031ProgmatCoinUnpauseReque" +
      "st\022i\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-f]{" +
      "8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-" +
      "f]{3}-[0-9a-f]{12}$R\010walletId\022\031\n\010fee_rat" +
      "e\030\002 \001(\004R\007feeRate\022H\n\020contract_address\030\003 \001" +
      "(\tB\035\372B\032r\0302\026^(0x)?[0-9a-fA-F]{40}$R\017contr" +
      "actAddress\"$\n\"ListColdFeeDepositAddresse" +
      "sRequest\"r\n#ListColdFeeDepositAddressesR" +
      "esponse\022K\n\020caller_addresses\030\001 \003(\0132 .adam" +
      "ant.global.v1.CallerAddressR\017callerAddre" +
      "sses\"#\n!ListHotFeeDepositAddressesReques" +
      "t\"~\n\"ListHotFeeDepositAddressesResponse\022" +
      "X\n\025fee_deposit_addresses\030\001 \003(\0132$.adamant" +
      ".global.v1.FeeDepositAddressR\023feeDeposit" +
      "Addresses2\3638\n\tTellerAPI\022a\n\014CreateWallet\022" +
      "&.adamant.teller.v1.CreateWalletRequest\032" +
      "\'.adamant.global.v1.CreateWalletResponse" +
      "\"\000\022M\n\tGetWallet\022#.adamant.global.v1.GetW" +
      "alletRequest\032\031.adamant.global.v1.Wallet\"" +
      "\000\022^\n\013ListWallets\022%.adamant.global.v1.Lis" +
      "tWalletsRequest\032&.adamant.global.v1.List" +
      "WalletsResponse\"\000\022n\n\023ListWalletsByFilter" +
      "\022-.adamant.global.v1.ListWalletsByFilter" +
      "Request\032&.adamant.global.v1.ListWalletsR" +
      "esponse\"\000\022\203\001\n\032ListStakingWalletsByFilter" +
      "\0224.adamant.global.v1.ListStakingWalletsB" +
      "yFilterRequest\032-.adamant.global.v1.ListS" +
      "takingWalletsResponse\"\000\022j\n\017ListBaseWalle" +
      "ts\022).adamant.global.v1.ListBaseWalletsRe" +
      "quest\032*.adamant.global.v1.ListBaseWallet" +
      "sResponse\"\000\022v\n\023GetSpendableBalance\022-.ada" +
      "mant.global.v1.GetSpendableBalanceReques" +
      "t\032..adamant.global.v1.GetSpendableBalanc" +
      "eResponse\"\000\022^\n\023InitializeXRPWallet\022-.ada" +
      "mant.teller.v1.InitializeXRPWalletReques" +
      "t\032\026.google.protobuf.Empty\"\000\022X\n\020Initializ" +
      "eWallet\022*.adamant.teller.v1.InitializeWa" +
      "lletRequest\032\026.google.protobuf.Empty\"\000\022j\n" +
      "\031UpdateDestinationWalletID\0223.adamant.glo" +
      "bal.v1.UpdateDestinationWalletIDRequest\032" +
      "\026.google.protobuf.Empty\"\000\022m\n\020GetCosmosBa" +
      "lance\022*.adamant.global.v1.GetCosmosBalan" +
      "ceRequest\032+.adamant.global.v1.GetCosmosB" +
      "alanceResponse\"\000\022\216\001\n\033ListCosmosDelegateH" +
      "istories\0225.adamant.global.v1.ListCosmosD" +
      "elegateHistoriesRequest\0326.adamant.global" +
      ".v1.ListCosmosDelegateHistoriesResponse\"" +
      "\000\022|\n\025GetCardanoTokenWallet\022/.adamant.glo" +
      "bal.v1.GetCardanoTokenWalletRequest\0320.ad" +
      "amant.global.v1.GetCardanoTokenWalletRes" +
      "ponse\"\000\022h\n\030UpdateCardanoTokenWallet\0222.ad" +
      "amant.global.v1.UpdateCardanoTokenWallet" +
      "Request\032\026.google.protobuf.Empty\"\000\022d\n\rCre" +
      "ateAddress\022\'.adamant.global.v1.CreateAdd" +
      "ressRequest\032(.adamant.global.v1.CreateAd" +
      "dressResponse\"\000\022p\n\021CreateIOSTAccount\022+.a" +
      "damant.global.v1.CreateIOSTAccountReques" +
      "t\032,.adamant.global.v1.CreateIOSTAccountR" +
      "esponse\"\000\022\205\001\n\030ListSymbolChildAddresses\0222" +
      ".adamant.global.v1.ListSymbolChildAddres" +
      "sesRequest\0323.adamant.global.v1.ListSymbo" +
      "lChildAddressesResponse\"\000\022P\n\nGetAddress\022" +
      "$.adamant.global.v1.GetAddressRequest\032\032." +
      "adamant.global.v1.Address\"\000\022b\n\023GetAddres" +
      "sByAddress\022-.adamant.global.v1.GetAddres" +
      "sByAddressRequest\032\032.adamant.global.v1.Ad" +
      "dress\"\000\022j\n\027GetAddressByAddressCoin\0221.ada" +
      "mant.global.v1.GetAddressByAddressCoinRe" +
      "quest\032\032.adamant.global.v1.Address\"\000\022^\n\021G" +
      "etAddressByIndex\022+.adamant.global.v1.Get" +
      "AddressByIndexRequest\032\032.adamant.global.v" +
      "1.Address\"\000\022d\n\rListAddresses\022\'.adamant.g" +
      "lobal.v1.ListAddressesRequest\032(.adamant." +
      "global.v1.ListAddressesResponse\"\000\022R\n\rImp" +
      "ortAddress\022\'.adamant.global.v1.ImportAdd" +
      "ressRequest\032\026.google.protobuf.Empty\"\000\022q\n" +
      "\025GetEthereumFeeAddress\022/.adamant.global." +
      "v1.GetEthereumFeeAddressRequest\032%.adaman" +
      "t.global.v1.EthereumFeeAddress\"\000\022`\n\024Upda" +
      "teAddressBalance\022..adamant.global.v1.Upd" +
      "ateAddressBalanceRequest\032\026.google.protob" +
      "uf.Empty\"\000\022\216\001\n\033ListColdFeeDepositAddress" +
      "es\0225.adamant.teller.v1.ListColdFeeDeposi" +
      "tAddressesRequest\0326.adamant.teller.v1.Li" +
      "stColdFeeDepositAddressesResponse\"\000\022\213\001\n\032" +
      "ListHotFeeDepositAddresses\0224.adamant.tel" +
      "ler.v1.ListHotFeeDepositAddressesRequest" +
      "\0325.adamant.teller.v1.ListHotFeeDepositAd" +
      "dressesResponse\"\000\022p\n\021CreateTransaction\022+" +
      ".adamant.global.v1.CreateTransactionRequ" +
      "est\032,.adamant.global.v1.CreateTransactio" +
      "nResponse\"\000\022V\n\017SignTransaction\022).adamant" +
      ".teller.v1.SignTransactionRequest\032\026.goog" +
      "le.protobuf.Empty\"\000\022j\n\017SendTransaction\022)" +
      ".adamant.teller.v1.SendTransactionReques" +
      "t\032*.adamant.global.v1.SendTransactionRes" +
      "ponse\"\000\022p\n\021ResendTransaction\022+.adamant.t" +
      "eller.v1.ResendTransactionRequest\032,.adam" +
      "ant.global.v1.ResendTransactionResponse\"" +
      "\000\022Z\n\021CancelTransaction\022+.adamant.global." +
      "v1.CancelTransactionRequest\032\026.google.pro" +
      "tobuf.Empty\"\000\022s\n\022ReplaceTransaction\022,.ad" +
      "amant.global.v1.ReplaceTransactionReques" +
      "t\032-.adamant.global.v1.ReplaceTransaction" +
      "Response\"\000\022\205\001\n\030IsTransactionReplaceable\022" +
      "2.adamant.global.v1.IsTransactionReplace" +
      "ableRequest\0323.adamant.global.v1.IsTransa" +
      "ctionReplaceableResponse\"\000\022\\\n\016GetTransac" +
      "tion\022(.adamant.global.v1.GetTransactionR" +
      "equest\032\036.adamant.global.v1.Transaction\"\000" +
      "\022h\n\024GetTransactionByTxID\022..adamant.globa" +
      "l.v1.GetTransactionByTxIDRequest\032\036.adama" +
      "nt.global.v1.Transaction\"\000\022m\n\020ListTransa" +
      "ctions\022*.adamant.global.v1.ListTransacti" +
      "onsRequest\032+.adamant.global.v1.ListTrans" +
      "actionsResponse\"\000\022}\n\030ListTransactionsByF" +
      "ilter\0222.adamant.global.v1.ListTransactio" +
      "nsByFilterRequest\032+.adamant.global.v1.Li" +
      "stTransactionsResponse\"\000\022\224\001\n\035ExitEthereu" +
      "mStakingValidators\0227.adamant.global.v1.E" +
      "xitEthereumStakingValidatorsRequest\0328.ad" +
      "amant.global.v1.ExitEthereumStakingValid" +
      "atorsResponse\"\000\022d\n\rListTransfers\022\'.adama" +
      "nt.global.v1.ListTransfersRequest\032(.adam" +
      "ant.global.v1.ListTransfersResponse\"\000\022t\n" +
      "\025ListTransfersByFilter\022/.adamant.global." +
      "v1.ListTransfersByFilterRequest\032(.adaman" +
      "t.global.v1.ListTransfersResponse\"\000\022_\n\017G" +
      "etRateSnapshot\022).adamant.global.v1.GetRa" +
      "teSnapshotRequest\032\037.adamant.global.v1.Ra" +
      "teSnapshot\"\000\022k\n\025GetLatestRateSnapshot\022/." +
      "adamant.global.v1.GetLatestRateSnapshotR" +
      "equest\032\037.adamant.global.v1.RateSnapshot\"" +
      "\000\022U\n\010SetRates\022\".adamant.global.v1.SetRat" +
      "esRequest\032#.adamant.global.v1.SetRatesRe" +
      "sponse\"\000\022a\n\014CalculateFee\022&.adamant.globa" +
      "l.v1.CalculateFeeRequest\032\'.adamant.globa" +
      "l.v1.CalculateFeeResponse\"\000\022|\n\025GetRecomm" +
      "endedFeeRate\022/.adamant.global.v1.GetReco" +
      "mmendedFeeRateRequest\0320.adamant.global.v" +
      "1.GetRecommendedFeeRateResponse\"\000\022j\n\017Val" +
      "idateAddress\022).adamant.global.v1.Validat" +
      "eAddressRequest\032*.adamant.global.v1.Vali" +
      "dateAddressResponse\"\000\022a\n\014FlushBalance\022&." +
      "adamant.global.v1.FlushBalanceRequest\032\'." +
      "adamant.global.v1.FlushBalanceResponse\"\000" +
      "\022d\n\rListAuditLogs\022\'.adamant.global.v1.Li" +
      "stAuditLogsRequest\032(.adamant.global.v1.L" +
      "istAuditLogsResponse\"\000\022\211\001\n\034ListStakingHi" +
      "storiesByFilter\0226.adamant.global.v1.List" +
      "StakingHistoriesByFilterRequest\032/.adaman" +
      "t.global.v1.ListStakingHistoriesResponse" +
      "\"\000\022\214\001\n\035ListStakingValidatorsByFilter\0227.a" +
      "damant.global.v1.ListStakingValidatorsBy" +
      "FilterRequest\0320.adamant.global.v1.ListSt" +
      "akingValidatorsResponse\"\000\022^\n\013SignMessage" +
      "\022%.adamant.teller.v1.SignMessageRequest\032" +
      "&.adamant.teller.v1.SignMessageResponse\"" +
      "\000\022x\n\025ProgmatCoinInitialize\022/.adamant.tel" +
      "ler.v1.ProgmatCoinInitializeRequest\032,.ad" +
      "amant.global.v1.CreateTransactionRespons" +
      "e\"\000\022\202\001\n\032ProgmatCoinConfigureMinter\0224.ada" +
      "mant.teller.v1.ProgmatCoinConfigureMinte" +
      "rRequest\032,.adamant.global.v1.CreateTrans" +
      "actionResponse\"\000\022\202\001\n\032ProgmatCoinMintAndT" +
      "ransfer\0224.adamant.teller.v1.ProgmatCoinM" +
      "intAndTransferRequest\032,.adamant.global.v" +
      "1.CreateTransactionResponse\"\000\022l\n\017Progmat" +
      "CoinMint\022).adamant.teller.v1.ProgmatCoin" +
      "MintRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022l\n\017ProgmatCoinBurn\022)" +
      ".adamant.teller.v1.ProgmatCoinBurnReques" +
      "t\032,.adamant.global.v1.CreateTransactionR" +
      "esponse\"\000\022\210\001\n\035ProgmatCoinBulkAddToWhitel" +
      "ist\0227.adamant.teller.v1.ProgmatCoinBulkA" +
      "ddToWhitelistRequest\032,.adamant.global.v1" +
      ".CreateTransactionResponse\"\000\022\222\001\n\"Progmat" +
      "CoinBulkRemoveFromWhitelist\022<.adamant.te" +
      "ller.v1.ProgmatCoinBulkRemoveFromWhiteli" +
      "stRequest\032,.adamant.global.v1.CreateTran" +
      "sactionResponse\"\000\022\210\001\n\035ProgmatCoinBulkAdd" +
      "ToBlacklist\0227.adamant.teller.v1.ProgmatC" +
      "oinBulkAddToBlacklistRequest\032,.adamant.g" +
      "lobal.v1.CreateTransactionResponse\"\000\022\222\001\n" +
      "\"ProgmatCoinBulkRemoveFromBlacklist\022<.ad" +
      "amant.teller.v1.ProgmatCoinBulkRemoveFro" +
      "mBlacklistRequest\032,.adamant.global.v1.Cr" +
      "eateTransactionResponse\"\000\022x\n\025ProgmatCoin" +
      "Confiscate\022/.adamant.teller.v1.ProgmatCo" +
      "inConfiscateRequest\032,.adamant.global.v1." +
      "CreateTransactionResponse\"\000\022n\n\020ProgmatCo" +
      "inPause\022*.adamant.teller.v1.ProgmatCoinP" +
      "auseRequest\032,.adamant.global.v1.CreateTr" +
      "ansactionResponse\"\000\022r\n\022ProgmatCoinUnpaus" +
      "e\022,.adamant.teller.v1.ProgmatCoinUnpause" +
      "Request\032,.adamant.global.v1.CreateTransa" +
      "ctionResponse\"\000B^B\016TellerAPIProtoP\001ZJgit" +
      "hub.com/GincoInc/gew-kmp/gen/gincoinc/ad" +
      "amant/teller/v1/adamanttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "Network", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", "Network", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_SignMessageRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_adamant_teller_v1_SignMessageRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageRequest_descriptor,
        new java.lang.String[] { "WalletId", "AddressId", "Address", "Message", "AddressId", "Address", });
    internal_static_adamant_teller_v1_SignMessageResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_adamant_teller_v1_SignMessageResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignMessageResponse_descriptor,
        new java.lang.String[] { "Signature", });
    internal_static_adamant_teller_v1_SendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_adamant_teller_v1_SendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_adamant_teller_v1_ResendTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ResendTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinInitializeRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "TokenName", "TokenSymbol", "TokenCurrency", "TokenDecimals", "NewMasterMinter", "NewPauser", "NewWhiteAndBlackLister", "NewConfiscator", "NewOwner", });
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfigureMinterRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "MinterAllowedAmount", });
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintAndTransferRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "MintAddress", "TransferAddress", "Amount", "ThroughAddress", "ThroughAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_adamant_teller_v1_ProgmatCoinMintRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinMintRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Address", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBurnRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBulkAddToWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "UtilsAddress", "Addresses", });
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromWhitelistRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromWhitelistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromWhitelistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "UtilsAddress", "Addresses", });
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_adamant_teller_v1_ProgmatCoinBulkAddToBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBulkAddToBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "UtilsAddress", "Addresses", });
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromBlacklistRequest_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromBlacklistRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinBulkRemoveFromBlacklistRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "UtilsAddress", "Addresses", });
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinConfiscateRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", "BlackListedAccount", "ToAccount", "Amount", });
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinPauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ProgmatCoinUnpauseRequest_descriptor,
        new java.lang.String[] { "WalletId", "FeeRate", "ContractAddress", });
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListColdFeeDepositAddressesRequest_descriptor,
        new java.lang.String[] { });
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListColdFeeDepositAddressesResponse_descriptor,
        new java.lang.String[] { "CallerAddresses", });
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListHotFeeDepositAddressesRequest_descriptor,
        new java.lang.String[] { });
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_ListHotFeeDepositAddressesResponse_descriptor,
        new java.lang.String[] { "FeeDepositAddresses", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
