// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public final class TellerAPIProto {
  private TellerAPIProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;gincoinc/adamant/teller/v1/adamanttell" +
      "erv1/teller_api.proto\022\021adamant.teller.v1" +
      "\032\033google/protobuf/empty.proto\032\027validate/" +
      "validate.proto\032.gincoinc/global/v1/ginco" +
      "incglobalv1/enum.proto\0325gincoinc/adamant" +
      "/global/v1/adamantglobalv1/enum.proto\032;g" +
      "incoinc/adamant/global/v1/adamantglobalv" +
      "1/global_api.proto\0326gincoinc/adamant/glo" +
      "bal/v1/adamantglobalv1/model.proto\"\312\003\n\023C" +
      "reateWalletRequest\022\036\n\013wallet_name\030\001 \001(\tB" +
      "\t\372B\006r\004\020\001\030\024\0222\n\004coin\030\002 \001(\0162\030.gincoinc.glob" +
      "al.v1.CoinB\n\372B\007\202\001\004\020\001 \000\022@\n\013wallet_type\030\003 " +
      "\001(\0162\035.adamant.global.v1.WalletTypeB\014\372B\t\202" +
      "\001\006\020\001 \000 \002\022A\n\014address_type\030\004 \001(\0162\037.gincoin" +
      "c.global.v1.AddressTypeB\n\372B\007\202\001\004\020\001 \000\022n\n\025d" +
      "estination_wallet_id\030\005 \001(\tBO\372BLrJ2H^$|^[" +
      "0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89a" +
      "b][0-9a-f]{3}-[0-9a-f]{12}$\022j\n\021inherit_w" +
      "allet_id\030\006 \001(\tBO\372BLrJ2H^$|^[0-9a-f]{8}-[" +
      "0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3" +
      "}-[0-9a-f]{12}$\"}\n\032InitializeXRPWalletRe" +
      "quest\022_\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0-9a-" +
      "f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-" +
      "9a-f]{3}-[0-9a-f]{12}$\"z\n\027InitializeWall" +
      "etRequest\022_\n\twallet_id\030\001 \001(\tBL\372BIrG2E^[0" +
      "-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab" +
      "][0-9a-f]{3}-[0-9a-f]{12}$\"\337\001\n\026SignTrans" +
      "actionRequest\022_\n\twallet_id\030\001 \001(\tBL\372BIrG2" +
      "E^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[" +
      "89ab][0-9a-f]{3}-[0-9a-f]{12}$\022d\n\016transa" +
      "ction_id\030\002 \001(\tBL\372BIrG2E^[0-9a-f]{8}-[0-9" +
      "a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[" +
      "0-9a-f]{12}$2\333\031\n\tTellerAPI\022a\n\014CreateWall" +
      "et\022&.adamant.teller.v1.CreateWalletReque" +
      "st\032\'.adamant.global.v1.CreateWalletRespo" +
      "nse\"\000\022M\n\tGetWallet\022#.adamant.global.v1.G" +
      "etWalletRequest\032\031.adamant.global.v1.Wall" +
      "et\"\000\022^\n\013ListWallets\022%.adamant.global.v1." +
      "ListWalletsRequest\032&.adamant.global.v1.L" +
      "istWalletsResponse\"\000\022n\n\023ListWalletsByFil" +
      "ter\022-.adamant.global.v1.ListWalletsByFil" +
      "terRequest\032&.adamant.global.v1.ListWalle" +
      "tsResponse\"\000\022j\n\017ListBaseWallets\022).adaman" +
      "t.global.v1.ListBaseWalletsRequest\032*.ada" +
      "mant.global.v1.ListBaseWalletsResponse\"\000" +
      "\022v\n\023GetSpendableBalance\022-.adamant.global" +
      ".v1.GetSpendableBalanceRequest\032..adamant" +
      ".global.v1.GetSpendableBalanceResponse\"\000" +
      "\022^\n\023InitializeXRPWallet\022-.adamant.teller" +
      ".v1.InitializeXRPWalletRequest\032\026.google." +
      "protobuf.Empty\"\000\022X\n\020InitializeWallet\022*.a" +
      "damant.teller.v1.InitializeWalletRequest" +
      "\032\026.google.protobuf.Empty\"\000\022d\n\rCreateAddr" +
      "ess\022\'.adamant.global.v1.CreateAddressReq" +
      "uest\032(.adamant.global.v1.CreateAddressRe" +
      "sponse\"\000\022P\n\nGetAddress\022$.adamant.global." +
      "v1.GetAddressRequest\032\032.adamant.global.v1" +
      ".Address\"\000\022b\n\023GetAddressByAddress\022-.adam" +
      "ant.global.v1.GetAddressByAddressRequest" +
      "\032\032.adamant.global.v1.Address\"\000\022^\n\021GetAdd" +
      "ressByIndex\022+.adamant.global.v1.GetAddre" +
      "ssByIndexRequest\032\032.adamant.global.v1.Add" +
      "ress\"\000\022d\n\rListAddresses\022\'.adamant.global" +
      ".v1.ListAddressesRequest\032(.adamant.globa" +
      "l.v1.ListAddressesResponse\"\000\022q\n\025GetEther" +
      "eumFeeAddress\022/.adamant.global.v1.GetEth" +
      "ereumFeeAddressRequest\032%.adamant.global." +
      "v1.EthereumFeeAddress\"\000\022`\n\024UpdateAddress" +
      "Balance\022..adamant.global.v1.UpdateAddres" +
      "sBalanceRequest\032\026.google.protobuf.Empty\"" +
      "\000\022p\n\021CreateTransaction\022+.adamant.global." +
      "v1.CreateTransactionRequest\032,.adamant.gl" +
      "obal.v1.CreateTransactionResponse\"\000\022V\n\017S" +
      "ignTransaction\022).adamant.teller.v1.SignT" +
      "ransactionRequest\032\026.google.protobuf.Empt" +
      "y\"\000\022j\n\017SendTransaction\022).adamant.global." +
      "v1.SendTransactionRequest\032*.adamant.glob" +
      "al.v1.SendTransactionResponse\"\000\022Z\n\021Cance" +
      "lTransaction\022+.adamant.global.v1.CancelT" +
      "ransactionRequest\032\026.google.protobuf.Empt" +
      "y\"\000\022\\\n\016GetTransaction\022(.adamant.global.v" +
      "1.GetTransactionRequest\032\036.adamant.global" +
      ".v1.Transaction\"\000\022h\n\024GetTransactionByTxI" +
      "D\022..adamant.global.v1.GetTransactionByTx" +
      "IDRequest\032\036.adamant.global.v1.Transactio" +
      "n\"\000\022m\n\020ListTransactions\022*.adamant.global" +
      ".v1.ListTransactionsRequest\032+.adamant.gl" +
      "obal.v1.ListTransactionsResponse\"\000\022}\n\030Li" +
      "stTransactionsByFilter\0222.adamant.global." +
      "v1.ListTransactionsByFilterRequest\032+.ada" +
      "mant.global.v1.ListTransactionsResponse\"" +
      "\000\022d\n\rListTransfers\022\'.adamant.global.v1.L" +
      "istTransfersRequest\032(.adamant.global.v1." +
      "ListTransfersResponse\"\000\022t\n\025ListTransfers" +
      "ByFilter\022/.adamant.global.v1.ListTransfe" +
      "rsByFilterRequest\032(.adamant.global.v1.Li" +
      "stTransfersResponse\"\000\022_\n\017GetRateSnapshot" +
      "\022).adamant.global.v1.GetRateSnapshotRequ" +
      "est\032\037.adamant.global.v1.RateSnapshot\"\000\022k" +
      "\n\025GetLatestRateSnapshot\022/.adamant.global" +
      ".v1.GetLatestRateSnapshotRequest\032\037.adama" +
      "nt.global.v1.RateSnapshot\"\000\022U\n\010SetRates\022" +
      "\".adamant.global.v1.SetRatesRequest\032#.ad" +
      "amant.global.v1.SetRatesResponse\"\000\022a\n\014Ca" +
      "lculateFee\022&.adamant.global.v1.Calculate" +
      "FeeRequest\032\'.adamant.global.v1.Calculate" +
      "FeeResponse\"\000\022|\n\025GetRecommendedFeeRate\022/" +
      ".adamant.global.v1.GetRecommendedFeeRate" +
      "Request\0320.adamant.global.v1.GetRecommend" +
      "edFeeRateResponse\"\000\022j\n\017ValidateAddress\022)" +
      ".adamant.global.v1.ValidateAddressReques" +
      "t\032*.adamant.global.v1.ValidateAddressRes" +
      "ponse\"\000\022a\n\014FlushBalance\022&.adamant.global" +
      ".v1.FlushBalanceRequest\032\'.adamant.global" +
      ".v1.FlushBalanceResponse\"\000B#B\016TellerAPIP" +
      "rotoP\001Z\017adamanttellerv1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.EmptyProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
          gincoinc.global.v1.Enum.getDescriptor(),
          adamant.global.v1.Enum.getDescriptor(),
          adamant.global.v1.GlobalAPIProto.getDescriptor(),
          adamant.global.v1.Model.getDescriptor(),
        });
    internal_static_adamant_teller_v1_CreateWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_adamant_teller_v1_CreateWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_CreateWalletRequest_descriptor,
        new java.lang.String[] { "WalletName", "Coin", "WalletType", "AddressType", "DestinationWalletId", "InheritWalletId", });
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_adamant_teller_v1_InitializeXRPWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeXRPWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_adamant_teller_v1_InitializeWalletRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_InitializeWalletRequest_descriptor,
        new java.lang.String[] { "WalletId", });
    internal_static_adamant_teller_v1_SignTransactionRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_adamant_teller_v1_SignTransactionRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_adamant_teller_v1_SignTransactionRequest_descriptor,
        new java.lang.String[] { "WalletId", "TransactionId", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(io.envoyproxy.pgv.validate.Validate.rules);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf.EmptyProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
    gincoinc.global.v1.Enum.getDescriptor();
    adamant.global.v1.Enum.getDescriptor();
    adamant.global.v1.GlobalAPIProto.getDescriptor();
    adamant.global.v1.Model.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
