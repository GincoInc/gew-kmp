// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;

public interface SignMessageRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.teller.v1.SignMessageRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = { ... }</code>
   * @return The walletId.
   */
  java.lang.String getWalletId();
  /**
   * <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = { ... }</code>
   * @return The bytes for walletId.
   */
  com.google.protobuf.ByteString
      getWalletIdBytes();

  /**
   * <code>optional string address_id = 2 [json_name = "addressId", (.validate.rules) = { ... }</code>
   * @return Whether the addressId field is set.
   */
  boolean hasAddressId();
  /**
   * <code>optional string address_id = 2 [json_name = "addressId", (.validate.rules) = { ... }</code>
   * @return The addressId.
   */
  java.lang.String getAddressId();
  /**
   * <code>optional string address_id = 2 [json_name = "addressId", (.validate.rules) = { ... }</code>
   * @return The bytes for addressId.
   */
  com.google.protobuf.ByteString
      getAddressIdBytes();

  /**
   * <code>optional string address = 4 [json_name = "address"];</code>
   * @return Whether the address field is set.
   */
  boolean hasAddress();
  /**
   * <code>optional string address = 4 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <code>optional string address = 4 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <code>string message = 3 [json_name = "message"];</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <code>string message = 3 [json_name = "message"];</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();
}
