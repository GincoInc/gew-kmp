// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;


/**
* Validates {@code ProgmatCoinConfiscateRequest} protobuf objects.
*/
@SuppressWarnings("all")
public class ProgmatCoinConfiscateRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<adamant.teller.v1.ProgmatCoinConfiscateRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(adamant.teller.v1.ProgmatCoinConfiscateRequest.class)) return new ProgmatCoinConfiscateRequestValidator();
		
		return null;
	}
		
		com.google.re2j.Pattern WALLET_ID__PATTERN = com.google.re2j.Pattern.compile("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$");
	
		
	
		
		com.google.re2j.Pattern CONTRACT_ADDRESS__PATTERN = com.google.re2j.Pattern.compile("^(0x)?[0-9a-fA-F]{40}$");
	
		
		com.google.re2j.Pattern BLACK_LISTED_ACCOUNT__PATTERN = com.google.re2j.Pattern.compile("^(0x)?[0-9a-fA-F]{40}$");
	
		
		com.google.re2j.Pattern TO_ACCOUNT__PATTERN = com.google.re2j.Pattern.compile("^(0x)?[0-9a-fA-F]{40}$");
	
		
	
	

	public void assertValid(adamant.teller.v1.ProgmatCoinConfiscateRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.teller.v1.ProgmatCoinConfiscateRequest.wallet_id", proto.getWalletId(), WALLET_ID__PATTERN);
	// no validation rules for FeeRate

	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.teller.v1.ProgmatCoinConfiscateRequest.contract_address", proto.getContractAddress(), CONTRACT_ADDRESS__PATTERN);
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.teller.v1.ProgmatCoinConfiscateRequest.black_listed_account", proto.getBlackListedAccount(), BLACK_LISTED_ACCOUNT__PATTERN);
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.teller.v1.ProgmatCoinConfiscateRequest.to_account", proto.getToAccount(), TO_ACCOUNT__PATTERN);
	// no validation rules for Amount

	
	}

}

