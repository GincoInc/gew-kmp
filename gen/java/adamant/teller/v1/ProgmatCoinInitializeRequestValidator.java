// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/teller/v1/adamanttellerv1/teller_api.proto

package adamant.teller.v1;


/**
* Validates {@code ProgmatCoinInitializeRequest} protobuf objects.
*/
@SuppressWarnings("all")
public class ProgmatCoinInitializeRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<adamant.teller.v1.ProgmatCoinInitializeRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(adamant.teller.v1.ProgmatCoinInitializeRequest.class)) return new ProgmatCoinInitializeRequestValidator();
		
		return null;
	}
		
		com.google.re2j.Pattern WALLET_ID__PATTERN = com.google.re2j.Pattern.compile("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$");
	
		
	
		
	
		
	
		
	
		
	
		
		private final Integer TOKEN_DECIMALS__LT = 100;
	
		
	
		
	
		
	
		
	
		
	
	

	public void assertValid(adamant.teller.v1.ProgmatCoinInitializeRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.teller.v1.ProgmatCoinInitializeRequest.wallet_id", proto.getWalletId(), WALLET_ID__PATTERN);
	// no validation rules for FeeRate

	// no validation rules for ContractAddress

	
			io.envoyproxy.pgv.StringValidation.minLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_name", proto.getTokenName(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_name", proto.getTokenName(), 40);
	
			io.envoyproxy.pgv.StringValidation.minLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_symbol", proto.getTokenSymbol(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_symbol", proto.getTokenSymbol(), 10);
	
			io.envoyproxy.pgv.StringValidation.minLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_currency", proto.getTokenCurrency(), 1);
			io.envoyproxy.pgv.StringValidation.maxLength(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_currency", proto.getTokenCurrency(), 3);
	
			io.envoyproxy.pgv.ComparativeValidation.lessThan(".adamant.teller.v1.ProgmatCoinInitializeRequest.token_decimals", proto.getTokenDecimals(), TOKEN_DECIMALS__LT, java.util.Comparator.naturalOrder());
	// no validation rules for NewMasterMinter

	// no validation rules for NewPauser

	// no validation rules for NewWhiteAndBlackLister

	// no validation rules for NewConfiscator

	// no validation rules for NewOwner

	
	}

}

