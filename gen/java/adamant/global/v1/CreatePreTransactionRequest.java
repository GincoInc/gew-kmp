// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;

/**
 * Protobuf type {@code adamant.global.v1.CreatePreTransactionRequest}
 */
public final class CreatePreTransactionRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:adamant.global.v1.CreatePreTransactionRequest)
    CreatePreTransactionRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CreatePreTransactionRequest.newBuilder() to construct.
  private CreatePreTransactionRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CreatePreTransactionRequest() {
    coin_ = 0;
    network_ = 0;
    externalId_ = "";
    details_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CreatePreTransactionRequest();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return adamant.global.v1.GlobalAPIProto.internal_static_adamant_global_v1_CreatePreTransactionRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return adamant.global.v1.GlobalAPIProto.internal_static_adamant_global_v1_CreatePreTransactionRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            adamant.global.v1.CreatePreTransactionRequest.class, adamant.global.v1.CreatePreTransactionRequest.Builder.class);
  }

  public static final int COIN_FIELD_NUMBER = 1;
  private int coin_ = 0;
  /**
   * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for coin.
   */
  @java.lang.Override public int getCoinValue() {
    return coin_;
  }
  /**
   * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The coin.
   */
  @java.lang.Override public gincoinc.global.v1.Enum.Coin getCoin() {
    gincoinc.global.v1.Enum.Coin result = gincoinc.global.v1.Enum.Coin.forNumber(coin_);
    return result == null ? gincoinc.global.v1.Enum.Coin.UNRECOGNIZED : result;
  }

  public static final int NETWORK_FIELD_NUMBER = 2;
  private int network_ = 0;
  /**
   * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for network.
   */
  @java.lang.Override public int getNetworkValue() {
    return network_;
  }
  /**
   * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The network.
   */
  @java.lang.Override public gincoinc.global.v1.Enum.Network getNetwork() {
    gincoinc.global.v1.Enum.Network result = gincoinc.global.v1.Enum.Network.forNumber(network_);
    return result == null ? gincoinc.global.v1.Enum.Network.UNRECOGNIZED : result;
  }

  public static final int EXTERNAL_ID_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private volatile java.lang.Object externalId_ = "";
  /**
   * <code>string external_id = 3 [json_name = "externalId"];</code>
   * @return The externalId.
   */
  @java.lang.Override
  public java.lang.String getExternalId() {
    java.lang.Object ref = externalId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      externalId_ = s;
      return s;
    }
  }
  /**
   * <code>string external_id = 3 [json_name = "externalId"];</code>
   * @return The bytes for externalId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getExternalIdBytes() {
    java.lang.Object ref = externalId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      externalId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DETAILS_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private java.util.List<adamant.global.v1.Model.PreTransactionDetail> details_;
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  @java.lang.Override
  public java.util.List<adamant.global.v1.Model.PreTransactionDetail> getDetailsList() {
    return details_;
  }
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends adamant.global.v1.Model.PreTransactionDetailOrBuilder> 
      getDetailsOrBuilderList() {
    return details_;
  }
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  @java.lang.Override
  public int getDetailsCount() {
    return details_.size();
  }
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  @java.lang.Override
  public adamant.global.v1.Model.PreTransactionDetail getDetails(int index) {
    return details_.get(index);
  }
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  @java.lang.Override
  public adamant.global.v1.Model.PreTransactionDetailOrBuilder getDetailsOrBuilder(
      int index) {
    return details_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (coin_ != gincoinc.global.v1.Enum.Coin.COIN_INVALID.getNumber()) {
      output.writeEnum(1, coin_);
    }
    if (network_ != gincoinc.global.v1.Enum.Network.NETWORK_INVALID.getNumber()) {
      output.writeEnum(2, network_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(externalId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, externalId_);
    }
    for (int i = 0; i < details_.size(); i++) {
      output.writeMessage(4, details_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (coin_ != gincoinc.global.v1.Enum.Coin.COIN_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, coin_);
    }
    if (network_ != gincoinc.global.v1.Enum.Network.NETWORK_INVALID.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, network_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(externalId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, externalId_);
    }
    for (int i = 0; i < details_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, details_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof adamant.global.v1.CreatePreTransactionRequest)) {
      return super.equals(obj);
    }
    adamant.global.v1.CreatePreTransactionRequest other = (adamant.global.v1.CreatePreTransactionRequest) obj;

    if (coin_ != other.coin_) return false;
    if (network_ != other.network_) return false;
    if (!getExternalId()
        .equals(other.getExternalId())) return false;
    if (!getDetailsList()
        .equals(other.getDetailsList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + COIN_FIELD_NUMBER;
    hash = (53 * hash) + coin_;
    hash = (37 * hash) + NETWORK_FIELD_NUMBER;
    hash = (53 * hash) + network_;
    hash = (37 * hash) + EXTERNAL_ID_FIELD_NUMBER;
    hash = (53 * hash) + getExternalId().hashCode();
    if (getDetailsCount() > 0) {
      hash = (37 * hash) + DETAILS_FIELD_NUMBER;
      hash = (53 * hash) + getDetailsList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static adamant.global.v1.CreatePreTransactionRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static adamant.global.v1.CreatePreTransactionRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static adamant.global.v1.CreatePreTransactionRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(adamant.global.v1.CreatePreTransactionRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code adamant.global.v1.CreatePreTransactionRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:adamant.global.v1.CreatePreTransactionRequest)
      adamant.global.v1.CreatePreTransactionRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return adamant.global.v1.GlobalAPIProto.internal_static_adamant_global_v1_CreatePreTransactionRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return adamant.global.v1.GlobalAPIProto.internal_static_adamant_global_v1_CreatePreTransactionRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              adamant.global.v1.CreatePreTransactionRequest.class, adamant.global.v1.CreatePreTransactionRequest.Builder.class);
    }

    // Construct using adamant.global.v1.CreatePreTransactionRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      coin_ = 0;
      network_ = 0;
      externalId_ = "";
      if (detailsBuilder_ == null) {
        details_ = java.util.Collections.emptyList();
      } else {
        details_ = null;
        detailsBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000008);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return adamant.global.v1.GlobalAPIProto.internal_static_adamant_global_v1_CreatePreTransactionRequest_descriptor;
    }

    @java.lang.Override
    public adamant.global.v1.CreatePreTransactionRequest getDefaultInstanceForType() {
      return adamant.global.v1.CreatePreTransactionRequest.getDefaultInstance();
    }

    @java.lang.Override
    public adamant.global.v1.CreatePreTransactionRequest build() {
      adamant.global.v1.CreatePreTransactionRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public adamant.global.v1.CreatePreTransactionRequest buildPartial() {
      adamant.global.v1.CreatePreTransactionRequest result = new adamant.global.v1.CreatePreTransactionRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(adamant.global.v1.CreatePreTransactionRequest result) {
      if (detailsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0)) {
          details_ = java.util.Collections.unmodifiableList(details_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.details_ = details_;
      } else {
        result.details_ = detailsBuilder_.build();
      }
    }

    private void buildPartial0(adamant.global.v1.CreatePreTransactionRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.coin_ = coin_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.network_ = network_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.externalId_ = externalId_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof adamant.global.v1.CreatePreTransactionRequest) {
        return mergeFrom((adamant.global.v1.CreatePreTransactionRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(adamant.global.v1.CreatePreTransactionRequest other) {
      if (other == adamant.global.v1.CreatePreTransactionRequest.getDefaultInstance()) return this;
      if (other.coin_ != 0) {
        setCoinValue(other.getCoinValue());
      }
      if (other.network_ != 0) {
        setNetworkValue(other.getNetworkValue());
      }
      if (!other.getExternalId().isEmpty()) {
        externalId_ = other.externalId_;
        bitField0_ |= 0x00000004;
        onChanged();
      }
      if (detailsBuilder_ == null) {
        if (!other.details_.isEmpty()) {
          if (details_.isEmpty()) {
            details_ = other.details_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDetailsIsMutable();
            details_.addAll(other.details_);
          }
          onChanged();
        }
      } else {
        if (!other.details_.isEmpty()) {
          if (detailsBuilder_.isEmpty()) {
            detailsBuilder_.dispose();
            detailsBuilder_ = null;
            details_ = other.details_;
            bitField0_ = (bitField0_ & ~0x00000008);
            detailsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDetailsFieldBuilder() : null;
          } else {
            detailsBuilder_.addAllMessages(other.details_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              coin_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              network_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              externalId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              adamant.global.v1.Model.PreTransactionDetail m =
                  input.readMessage(
                      adamant.global.v1.Model.PreTransactionDetail.parser(),
                      extensionRegistry);
              if (detailsBuilder_ == null) {
                ensureDetailsIsMutable();
                details_.add(m);
              } else {
                detailsBuilder_.addMessage(m);
              }
              break;
            } // case 34
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int coin_ = 0;
    /**
     * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for coin.
     */
    @java.lang.Override public int getCoinValue() {
      return coin_;
    }
    /**
     * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for coin to set.
     * @return This builder for chaining.
     */
    public Builder setCoinValue(int value) {
      coin_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
     * @return The coin.
     */
    @java.lang.Override
    public gincoinc.global.v1.Enum.Coin getCoin() {
      gincoinc.global.v1.Enum.Coin result = gincoinc.global.v1.Enum.Coin.forNumber(coin_);
      return result == null ? gincoinc.global.v1.Enum.Coin.UNRECOGNIZED : result;
    }
    /**
     * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
     * @param value The coin to set.
     * @return This builder for chaining.
     */
    public Builder setCoin(gincoinc.global.v1.Enum.Coin value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      coin_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearCoin() {
      bitField0_ = (bitField0_ & ~0x00000001);
      coin_ = 0;
      onChanged();
      return this;
    }

    private int network_ = 0;
    /**
     * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
     * @return The enum numeric value on the wire for network.
     */
    @java.lang.Override public int getNetworkValue() {
      return network_;
    }
    /**
     * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
     * @param value The enum numeric value on the wire for network to set.
     * @return This builder for chaining.
     */
    public Builder setNetworkValue(int value) {
      network_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
     * @return The network.
     */
    @java.lang.Override
    public gincoinc.global.v1.Enum.Network getNetwork() {
      gincoinc.global.v1.Enum.Network result = gincoinc.global.v1.Enum.Network.forNumber(network_);
      return result == null ? gincoinc.global.v1.Enum.Network.UNRECOGNIZED : result;
    }
    /**
     * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
     * @param value The network to set.
     * @return This builder for chaining.
     */
    public Builder setNetwork(gincoinc.global.v1.Enum.Network value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      network_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearNetwork() {
      bitField0_ = (bitField0_ & ~0x00000002);
      network_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object externalId_ = "";
    /**
     * <code>string external_id = 3 [json_name = "externalId"];</code>
     * @return The externalId.
     */
    public java.lang.String getExternalId() {
      java.lang.Object ref = externalId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        externalId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string external_id = 3 [json_name = "externalId"];</code>
     * @return The bytes for externalId.
     */
    public com.google.protobuf.ByteString
        getExternalIdBytes() {
      java.lang.Object ref = externalId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        externalId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string external_id = 3 [json_name = "externalId"];</code>
     * @param value The externalId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      externalId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>string external_id = 3 [json_name = "externalId"];</code>
     * @return This builder for chaining.
     */
    public Builder clearExternalId() {
      externalId_ = getDefaultInstance().getExternalId();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <code>string external_id = 3 [json_name = "externalId"];</code>
     * @param value The bytes for externalId to set.
     * @return This builder for chaining.
     */
    public Builder setExternalIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      externalId_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }

    private java.util.List<adamant.global.v1.Model.PreTransactionDetail> details_ =
      java.util.Collections.emptyList();
    private void ensureDetailsIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        details_ = new java.util.ArrayList<adamant.global.v1.Model.PreTransactionDetail>(details_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        adamant.global.v1.Model.PreTransactionDetail, adamant.global.v1.Model.PreTransactionDetail.Builder, adamant.global.v1.Model.PreTransactionDetailOrBuilder> detailsBuilder_;

    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public java.util.List<adamant.global.v1.Model.PreTransactionDetail> getDetailsList() {
      if (detailsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(details_);
      } else {
        return detailsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public int getDetailsCount() {
      if (detailsBuilder_ == null) {
        return details_.size();
      } else {
        return detailsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public adamant.global.v1.Model.PreTransactionDetail getDetails(int index) {
      if (detailsBuilder_ == null) {
        return details_.get(index);
      } else {
        return detailsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder setDetails(
        int index, adamant.global.v1.Model.PreTransactionDetail value) {
      if (detailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetailsIsMutable();
        details_.set(index, value);
        onChanged();
      } else {
        detailsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder setDetails(
        int index, adamant.global.v1.Model.PreTransactionDetail.Builder builderForValue) {
      if (detailsBuilder_ == null) {
        ensureDetailsIsMutable();
        details_.set(index, builderForValue.build());
        onChanged();
      } else {
        detailsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder addDetails(adamant.global.v1.Model.PreTransactionDetail value) {
      if (detailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetailsIsMutable();
        details_.add(value);
        onChanged();
      } else {
        detailsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder addDetails(
        int index, adamant.global.v1.Model.PreTransactionDetail value) {
      if (detailsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDetailsIsMutable();
        details_.add(index, value);
        onChanged();
      } else {
        detailsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder addDetails(
        adamant.global.v1.Model.PreTransactionDetail.Builder builderForValue) {
      if (detailsBuilder_ == null) {
        ensureDetailsIsMutable();
        details_.add(builderForValue.build());
        onChanged();
      } else {
        detailsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder addDetails(
        int index, adamant.global.v1.Model.PreTransactionDetail.Builder builderForValue) {
      if (detailsBuilder_ == null) {
        ensureDetailsIsMutable();
        details_.add(index, builderForValue.build());
        onChanged();
      } else {
        detailsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder addAllDetails(
        java.lang.Iterable<? extends adamant.global.v1.Model.PreTransactionDetail> values) {
      if (detailsBuilder_ == null) {
        ensureDetailsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, details_);
        onChanged();
      } else {
        detailsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder clearDetails() {
      if (detailsBuilder_ == null) {
        details_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        detailsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public Builder removeDetails(int index) {
      if (detailsBuilder_ == null) {
        ensureDetailsIsMutable();
        details_.remove(index);
        onChanged();
      } else {
        detailsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public adamant.global.v1.Model.PreTransactionDetail.Builder getDetailsBuilder(
        int index) {
      return getDetailsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public adamant.global.v1.Model.PreTransactionDetailOrBuilder getDetailsOrBuilder(
        int index) {
      if (detailsBuilder_ == null) {
        return details_.get(index);  } else {
        return detailsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public java.util.List<? extends adamant.global.v1.Model.PreTransactionDetailOrBuilder> 
         getDetailsOrBuilderList() {
      if (detailsBuilder_ != null) {
        return detailsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(details_);
      }
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public adamant.global.v1.Model.PreTransactionDetail.Builder addDetailsBuilder() {
      return getDetailsFieldBuilder().addBuilder(
          adamant.global.v1.Model.PreTransactionDetail.getDefaultInstance());
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public adamant.global.v1.Model.PreTransactionDetail.Builder addDetailsBuilder(
        int index) {
      return getDetailsFieldBuilder().addBuilder(
          index, adamant.global.v1.Model.PreTransactionDetail.getDefaultInstance());
    }
    /**
     * <pre>
     * Use single format for single recipient transaction and multi-recipient transaction
     * </pre>
     *
     * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
     */
    public java.util.List<adamant.global.v1.Model.PreTransactionDetail.Builder> 
         getDetailsBuilderList() {
      return getDetailsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        adamant.global.v1.Model.PreTransactionDetail, adamant.global.v1.Model.PreTransactionDetail.Builder, adamant.global.v1.Model.PreTransactionDetailOrBuilder> 
        getDetailsFieldBuilder() {
      if (detailsBuilder_ == null) {
        detailsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            adamant.global.v1.Model.PreTransactionDetail, adamant.global.v1.Model.PreTransactionDetail.Builder, adamant.global.v1.Model.PreTransactionDetailOrBuilder>(
                details_,
                ((bitField0_ & 0x00000008) != 0),
                getParentForChildren(),
                isClean());
        details_ = null;
      }
      return detailsBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:adamant.global.v1.CreatePreTransactionRequest)
  }

  // @@protoc_insertion_point(class_scope:adamant.global.v1.CreatePreTransactionRequest)
  private static final adamant.global.v1.CreatePreTransactionRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new adamant.global.v1.CreatePreTransactionRequest();
  }

  public static adamant.global.v1.CreatePreTransactionRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CreatePreTransactionRequest>
      PARSER = new com.google.protobuf.AbstractParser<CreatePreTransactionRequest>() {
    @java.lang.Override
    public CreatePreTransactionRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CreatePreTransactionRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CreatePreTransactionRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public adamant.global.v1.CreatePreTransactionRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

