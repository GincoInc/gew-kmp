// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package java.adamant.global.v1;

public interface WalletMemberOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.WalletMember)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string account_id = 1 [json_name = "accountId"];</code>
   * @return The accountId.
   */
  java.lang.String getAccountId();
  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string account_id = 1 [json_name = "accountId"];</code>
   * @return The bytes for accountId.
   */
  com.google.protobuf.ByteString
      getAccountIdBytes();

  /**
   * <pre>
   * The account type
   * </pre>
   *
   * <code>.adamant.global.v1.AccountType account_type = 2 [json_name = "accountType"];</code>
   * @return The enum numeric value on the wire for accountType.
   */
  int getAccountTypeValue();
  /**
   * <pre>
   * The account type
   * </pre>
   *
   * <code>.adamant.global.v1.AccountType account_type = 2 [json_name = "accountType"];</code>
   * @return The accountType.
   */
  java.adamant.global.v1.AccountType getAccountType();

  /**
   * <pre>
   * name
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name
   * </pre>
   *
   * <code>string name = 3 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * email
   * </pre>
   *
   * <code>string email = 4 [json_name = "email"];</code>
   * @return The email.
   */
  java.lang.String getEmail();
  /**
   * <pre>
   * email
   * </pre>
   *
   * <code>string email = 4 [json_name = "email"];</code>
   * @return The bytes for email.
   */
  com.google.protobuf.ByteString
      getEmailBytes();

  /**
   * <pre>
   * The role type of account in organization
   * </pre>
   *
   * <code>.adamant.global.v1.RoleType role = 5 [json_name = "role"];</code>
   * @return The enum numeric value on the wire for role.
   */
  int getRoleValue();
  /**
   * <pre>
   * The role type of account in organization
   * </pre>
   *
   * <code>.adamant.global.v1.RoleType role = 5 [json_name = "role"];</code>
   * @return The role.
   */
  java.adamant.global.v1.RoleType getRole();

  /**
   * <pre>
   * The flag which indicates the member registered a key to wallet
   * </pre>
   *
   * <code>bool is_key_registered = 6 [json_name = "isKeyRegistered"];</code>
   * @return The isKeyRegistered.
   */
  boolean getIsKeyRegistered();

  /**
   * <pre>
   * The flag which indicates the member is master user
   * </pre>
   *
   * <code>bool is_master = 7 [json_name = "isMaster"];</code>
   * @return The isMaster.
   */
  boolean getIsMaster();

  /**
   * <pre>
   * (only XRP wallet)
   * </pre>
   *
   * <code>bool is_validated_to_create_wallet = 8 [json_name = "isValidatedToCreateWallet"];</code>
   * @return The isValidatedToCreateWallet.
   */
  boolean getIsValidatedToCreateWallet();
}
