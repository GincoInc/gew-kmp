// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;

public interface CreateTransferLimitRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.CreateTransferLimitRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 1 [json_name = "name", (.validate.rules) = { ... }</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.gincoinc.global.v1.Coin coin = 2 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for coin.
   */
  int getCoinValue();
  /**
   * <code>.gincoinc.global.v1.Coin coin = 2 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The coin.
   */
  gincoinc.global.v1.Enum.Coin getCoin();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>optional .gincoinc.global.v1.Network network = 4 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return Whether the network field is set.
   */
  boolean hasNetwork();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>optional .gincoinc.global.v1.Network network = 4 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for network.
   */
  int getNetworkValue();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>optional .gincoinc.global.v1.Network network = 4 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The network.
   */
  gincoinc.global.v1.Enum.Network getNetwork();

  /**
   * <code>repeated .adamant.global.v1.RequestTransferLimitEntry transfer_limits = 3 [json_name = "transferLimits", (.validate.rules) = { ... }</code>
   */
  java.util.List<adamant.global.v1.Model.RequestTransferLimitEntry> 
      getTransferLimitsList();
  /**
   * <code>repeated .adamant.global.v1.RequestTransferLimitEntry transfer_limits = 3 [json_name = "transferLimits", (.validate.rules) = { ... }</code>
   */
  adamant.global.v1.Model.RequestTransferLimitEntry getTransferLimits(int index);
  /**
   * <code>repeated .adamant.global.v1.RequestTransferLimitEntry transfer_limits = 3 [json_name = "transferLimits", (.validate.rules) = { ... }</code>
   */
  int getTransferLimitsCount();
  /**
   * <code>repeated .adamant.global.v1.RequestTransferLimitEntry transfer_limits = 3 [json_name = "transferLimits", (.validate.rules) = { ... }</code>
   */
  java.util.List<? extends adamant.global.v1.Model.RequestTransferLimitEntryOrBuilder> 
      getTransferLimitsOrBuilderList();
  /**
   * <code>repeated .adamant.global.v1.RequestTransferLimitEntry transfer_limits = 3 [json_name = "transferLimits", (.validate.rules) = { ... }</code>
   */
  adamant.global.v1.Model.RequestTransferLimitEntryOrBuilder getTransferLimitsOrBuilder(
      int index);
}
