// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package java.adamant.global.v1;

public interface KeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.Key)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The id of wallet
   * </pre>
   *
   * <code>string wallet_id = 1 [json_name = "walletId"];</code>
   * @return The walletId.
   */
  java.lang.String getWalletId();
  /**
   * <pre>
   * The id of wallet
   * </pre>
   *
   * <code>string wallet_id = 1 [json_name = "walletId"];</code>
   * @return The bytes for walletId.
   */
  com.google.protobuf.ByteString
      getWalletIdBytes();

  /**
   * <pre>
   * The id of account which owns the key
   * </pre>
   *
   * <code>string account_id = 2 [json_name = "accountId"];</code>
   * @return The accountId.
   */
  java.lang.String getAccountId();
  /**
   * <pre>
   * The id of account which owns the key
   * </pre>
   *
   * <code>string account_id = 2 [json_name = "accountId"];</code>
   * @return The bytes for accountId.
   */
  com.google.protobuf.ByteString
      getAccountIdBytes();

  /**
   * <pre>
   * The account type of key owner
   * </pre>
   *
   * <code>.adamant.global.v1.AccountType account_type = 3 [json_name = "accountType"];</code>
   * @return The enum numeric value on the wire for accountType.
   */
  int getAccountTypeValue();
  /**
   * <pre>
   * The account type of key owner
   * </pre>
   *
   * <code>.adamant.global.v1.AccountType account_type = 3 [json_name = "accountType"];</code>
   * @return The accountType.
   */
  java.adamant.global.v1.AccountType getAccountType();

  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string key_id = 4 [json_name = "keyId"];</code>
   * @return The keyId.
   */
  java.lang.String getKeyId();
  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string key_id = 4 [json_name = "keyId"];</code>
   * @return The bytes for keyId.
   */
  com.google.protobuf.ByteString
      getKeyIdBytes();

  /**
   * <pre>
   * The index of key
   * </pre>
   *
   * <code>uint32 key_index = 5 [json_name = "keyIndex"];</code>
   * @return The keyIndex.
   */
  int getKeyIndex();
}
