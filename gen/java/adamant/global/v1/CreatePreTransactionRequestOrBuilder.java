// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;

public interface CreatePreTransactionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.CreatePreTransactionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for coin.
   */
  int getCoinValue();
  /**
   * <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The coin.
   */
  gincoinc.global.v1.Enum.Coin getCoin();

  /**
   * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for network.
   */
  int getNetworkValue();
  /**
   * <code>.gincoinc.global.v1.Network network = 2 [json_name = "network", (.validate.rules) = { ... }</code>
   * @return The network.
   */
  gincoinc.global.v1.Enum.Network getNetwork();

  /**
   * <code>string external_id = 3 [json_name = "externalId", (.validate.rules) = { ... }</code>
   * @return The externalId.
   */
  java.lang.String getExternalId();
  /**
   * <code>string external_id = 3 [json_name = "externalId", (.validate.rules) = { ... }</code>
   * @return The bytes for externalId.
   */
  com.google.protobuf.ByteString
      getExternalIdBytes();

  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  java.util.List<adamant.global.v1.Model.PreTransactionDetail> 
      getDetailsList();
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  adamant.global.v1.Model.PreTransactionDetail getDetails(int index);
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  int getDetailsCount();
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  java.util.List<? extends adamant.global.v1.Model.PreTransactionDetailOrBuilder> 
      getDetailsOrBuilderList();
  /**
   * <pre>
   * Use single format for single recipient transaction and multi-recipient transaction
   * </pre>
   *
   * <code>repeated .adamant.global.v1.PreTransactionDetail details = 4 [json_name = "details"];</code>
   */
  adamant.global.v1.Model.PreTransactionDetailOrBuilder getDetailsOrBuilder(
      int index);
}
