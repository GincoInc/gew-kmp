// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;

public interface ListTransferLimitsByFilterRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.ListTransferLimitsByFilterRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>.adamant.global.v1.ListFilterType filter_type = 1 [json_name = "filterType", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for filterType.
   */
  int getFilterTypeValue();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>.adamant.global.v1.ListFilterType filter_type = 1 [json_name = "filterType", (.validate.rules) = { ... }</code>
   * @return The filterType.
   */
  adamant.global.v1.Enum.ListFilterType getFilterType();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string transfer_limit_id = 2 [json_name = "transferLimitId", (.validate.rules) = { ... }</code>
   * @return The transferLimitId.
   */
  java.lang.String getTransferLimitId();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string transfer_limit_id = 2 [json_name = "transferLimitId", (.validate.rules) = { ... }</code>
   * @return The bytes for transferLimitId.
   */
  com.google.protobuf.ByteString
      getTransferLimitIdBytes();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string transfer_limit_name = 3 [json_name = "transferLimitName", (.validate.rules) = { ... }</code>
   * @return The transferLimitName.
   */
  java.lang.String getTransferLimitName();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string transfer_limit_name = 3 [json_name = "transferLimitName", (.validate.rules) = { ... }</code>
   * @return The bytes for transferLimitName.
   */
  com.google.protobuf.ByteString
      getTransferLimitNameBytes();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>.gincoinc.global.v1.Coin coin = 4 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for coin.
   */
  int getCoinValue();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>.gincoinc.global.v1.Coin coin = 4 [json_name = "coin", (.validate.rules) = { ... }</code>
   * @return The coin.
   */
  gincoinc.global.v1.Enum.Coin getCoin();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>uint32 page_size = 5 [json_name = "pageSize", (.validate.rules) = { ... }</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string page_token = 6 [json_name = "pageToken", (.validate.rules) = { ... }</code>
   * @return The pageToken.
   */
  java.lang.String getPageToken();
  /**
   * <pre>
   * optional
   * </pre>
   *
   * <code>string page_token = 6 [json_name = "pageToken", (.validate.rules) = { ... }</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();
}
