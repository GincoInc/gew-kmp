// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package java.adamant.global.v1;

public interface TransferVolumeSnapshotOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.TransferVolumeSnapshot)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.google.protobuf.Timestamp target_time = 1 [json_name = "targetTime"];</code>
   * @return Whether the targetTime field is set.
   */
  boolean hasTargetTime();
  /**
   * <code>.google.protobuf.Timestamp target_time = 1 [json_name = "targetTime"];</code>
   * @return The targetTime.
   */
  com.google.protobuf.Timestamp getTargetTime();
  /**
   * <code>.google.protobuf.Timestamp target_time = 1 [json_name = "targetTime"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getTargetTimeOrBuilder();

  /**
   * <pre>
   * map&lt;k, v&gt; ... k: coin / v: TransferVolumeByCoin
   * </pre>
   *
   * <code>map&lt;int32, .adamant.global.v1.TransferVolume&gt; transfer_volume_by_coin = 2 [json_name = "transferVolumeByCoin"];</code>
   */
  int getTransferVolumeByCoinCount();
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: coin / v: TransferVolumeByCoin
   * </pre>
   *
   * <code>map&lt;int32, .adamant.global.v1.TransferVolume&gt; transfer_volume_by_coin = 2 [json_name = "transferVolumeByCoin"];</code>
   */
  boolean containsTransferVolumeByCoin(
      int key);
  /**
   * Use {@link #getTransferVolumeByCoinMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.Integer, java.adamant.global.v1.TransferVolume>
  getTransferVolumeByCoin();
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: coin / v: TransferVolumeByCoin
   * </pre>
   *
   * <code>map&lt;int32, .adamant.global.v1.TransferVolume&gt; transfer_volume_by_coin = 2 [json_name = "transferVolumeByCoin"];</code>
   */
  java.util.Map<java.lang.Integer, java.adamant.global.v1.TransferVolume>
  getTransferVolumeByCoinMap();
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: coin / v: TransferVolumeByCoin
   * </pre>
   *
   * <code>map&lt;int32, .adamant.global.v1.TransferVolume&gt; transfer_volume_by_coin = 2 [json_name = "transferVolumeByCoin"];</code>
   */

  java.adamant.global.v1.TransferVolume getTransferVolumeByCoinOrDefault(
      int key,
      java.adamant.global.v1.TransferVolume defaultValue);
  /**
   * <pre>
   * map&lt;k, v&gt; ... k: coin / v: TransferVolumeByCoin
   * </pre>
   *
   * <code>map&lt;int32, .adamant.global.v1.TransferVolume&gt; transfer_volume_by_coin = 2 [json_name = "transferVolumeByCoin"];</code>
   */

  java.adamant.global.v1.TransferVolume getTransferVolumeByCoinOrThrow(
      int key);
}
