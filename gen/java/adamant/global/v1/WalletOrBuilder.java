// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package java.adamant.global.v1;

public interface WalletOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.Wallet)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * organization id
   * </pre>
   *
   * <code>string owner_id = 23 [json_name = "ownerId"];</code>
   * @return The ownerId.
   */
  java.lang.String getOwnerId();
  /**
   * <pre>
   * organization id
   * </pre>
   *
   * <code>string owner_id = 23 [json_name = "ownerId"];</code>
   * @return The bytes for ownerId.
   */
  com.google.protobuf.ByteString
      getOwnerIdBytes();

  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string wallet_id = 1 [json_name = "walletId"];</code>
   * @return The walletId.
   */
  java.lang.String getWalletId();
  /**
   * <pre>
   * id
   * </pre>
   *
   * <code>string wallet_id = 1 [json_name = "walletId"];</code>
   * @return The bytes for walletId.
   */
  com.google.protobuf.ByteString
      getWalletIdBytes();

  /**
   * <pre>
   * name
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * name
   * </pre>
   *
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * The type of asset
   * </pre>
   *
   * <code>.gincoinc.global.v1.Coin coin = 3 [json_name = "coin"];</code>
   * @return The enum numeric value on the wire for coin.
   */
  int getCoinValue();
  /**
   * <pre>
   * The type of asset
   * </pre>
   *
   * <code>.gincoinc.global.v1.Coin coin = 3 [json_name = "coin"];</code>
   * @return The coin.
   */
  java.gincoinc.global.v1.Coin getCoin();

  /**
   * <pre>
   * The number indicating what order the wallet is created
   * </pre>
   *
   * <code>uint32 hd_account = 17 [json_name = "hdAccount"];</code>
   * @return The hdAccount.
   */
  int getHdAccount();

  /**
   * <pre>
   * type
   * </pre>
   *
   * <code>.adamant.global.v1.WalletType wallet_type = 4 [json_name = "walletType"];</code>
   * @return The enum numeric value on the wire for walletType.
   */
  int getWalletTypeValue();
  /**
   * <pre>
   * type
   * </pre>
   *
   * <code>.adamant.global.v1.WalletType wallet_type = 4 [json_name = "walletType"];</code>
   * @return The walletType.
   */
  java.adamant.global.v1.WalletType getWalletType();

  /**
   * <pre>
   * type of address
   * </pre>
   *
   * <code>.gincoinc.global.v1.AddressType address_type = 5 [json_name = "addressType"];</code>
   * @return The enum numeric value on the wire for addressType.
   */
  int getAddressTypeValue();
  /**
   * <pre>
   * type of address
   * </pre>
   *
   * <code>.gincoinc.global.v1.AddressType address_type = 5 [json_name = "addressType"];</code>
   * @return The addressType.
   */
  java.gincoinc.global.v1.AddressType getAddressType();

  /**
   * <pre>
   * The number of signitures which is required to transfer asset
   * </pre>
   *
   * <code>uint32 m = 6 [json_name = "m"];</code>
   * @return The m.
   */
  int getM();

  /**
   * <pre>
   * The number of keys
   * </pre>
   *
   * <code>uint32 n = 7 [json_name = "n"];</code>
   * @return The n.
   */
  int getN();

  /**
   * <pre>
   * state
   * </pre>
   *
   * <code>.adamant.global.v1.WalletState state = 8 [json_name = "state"];</code>
   * @return The enum numeric value on the wire for state.
   */
  int getStateValue();
  /**
   * <pre>
   * state
   * </pre>
   *
   * <code>.adamant.global.v1.WalletState state = 8 [json_name = "state"];</code>
   * @return The state.
   */
  java.adamant.global.v1.WalletState getState();

  /**
   * <pre>
   * keys
   * </pre>
   *
   * <code>repeated .adamant.global.v1.Key keys = 9 [json_name = "keys"];</code>
   */
  java.util.List<java.adamant.global.v1.Key> 
      getKeysList();
  /**
   * <pre>
   * keys
   * </pre>
   *
   * <code>repeated .adamant.global.v1.Key keys = 9 [json_name = "keys"];</code>
   */
  java.adamant.global.v1.Key getKeys(int index);
  /**
   * <pre>
   * keys
   * </pre>
   *
   * <code>repeated .adamant.global.v1.Key keys = 9 [json_name = "keys"];</code>
   */
  int getKeysCount();
  /**
   * <pre>
   * keys
   * </pre>
   *
   * <code>repeated .adamant.global.v1.Key keys = 9 [json_name = "keys"];</code>
   */
  java.util.List<? extends java.adamant.global.v1.KeyOrBuilder> 
      getKeysOrBuilderList();
  /**
   * <pre>
   * keys
   * </pre>
   *
   * <code>repeated .adamant.global.v1.Key keys = 9 [json_name = "keys"];</code>
   */
  java.adamant.global.v1.KeyOrBuilder getKeysOrBuilder(
      int index);

  /**
   * <pre>
   * members
   * </pre>
   *
   * <code>repeated .adamant.global.v1.WalletMember members = 10 [json_name = "members"];</code>
   */
  java.util.List<java.adamant.global.v1.WalletMember> 
      getMembersList();
  /**
   * <pre>
   * members
   * </pre>
   *
   * <code>repeated .adamant.global.v1.WalletMember members = 10 [json_name = "members"];</code>
   */
  java.adamant.global.v1.WalletMember getMembers(int index);
  /**
   * <pre>
   * members
   * </pre>
   *
   * <code>repeated .adamant.global.v1.WalletMember members = 10 [json_name = "members"];</code>
   */
  int getMembersCount();
  /**
   * <pre>
   * members
   * </pre>
   *
   * <code>repeated .adamant.global.v1.WalletMember members = 10 [json_name = "members"];</code>
   */
  java.util.List<? extends java.adamant.global.v1.WalletMemberOrBuilder> 
      getMembersOrBuilderList();
  /**
   * <pre>
   * members
   * </pre>
   *
   * <code>repeated .adamant.global.v1.WalletMember members = 10 [json_name = "members"];</code>
   */
  java.adamant.global.v1.WalletMemberOrBuilder getMembersOrBuilder(
      int index);

  /**
   * <pre>
   * The number of approvals by validator which is required to transfer
   * </pre>
   *
   * <code>uint32 required_approval_count = 20 [json_name = "requiredApprovalCount"];</code>
   * @return The requiredApprovalCount.
   */
  int getRequiredApprovalCount();

  /**
   * <pre>
   * asset, update wallet info etc.
   * </pre>
   *
   * <code>double balance = 11 [json_name = "balance"];</code>
   * @return The balance.
   */
  double getBalance();

  /**
   * <pre>
   * string-typed balance
   * </pre>
   *
   * <code>string string_balance = 12 [json_name = "stringBalance"];</code>
   * @return The stringBalance.
   */
  java.lang.String getStringBalance();
  /**
   * <pre>
   * string-typed balance
   * </pre>
   *
   * <code>string string_balance = 12 [json_name = "stringBalance"];</code>
   * @return The bytes for stringBalance.
   */
  com.google.protobuf.ByteString
      getStringBalanceBytes();

  /**
   * <pre>
   * address
   * </pre>
   *
   * <code>string address = 13 [json_name = "address"];</code>
   * @return The address.
   */
  java.lang.String getAddress();
  /**
   * <pre>
   * address
   * </pre>
   *
   * <code>string address = 13 [json_name = "address"];</code>
   * @return The bytes for address.
   */
  com.google.protobuf.ByteString
      getAddressBytes();

  /**
   * <pre>
   * The id of the policy which is adopted the wallet
   * </pre>
   *
   * <code>string policy_id = 14 [json_name = "policyId"];</code>
   * @return The policyId.
   */
  java.lang.String getPolicyId();
  /**
   * <pre>
   * The id of the policy which is adopted the wallet
   * </pre>
   *
   * <code>string policy_id = 14 [json_name = "policyId"];</code>
   * @return The bytes for policyId.
   */
  com.google.protobuf.ByteString
      getPolicyIdBytes();

  /**
   * <pre>
   * The proposal about updating the policy
   * </pre>
   *
   * <code>.adamant.global.v1.WalletProposal proposal = 18 [json_name = "proposal"];</code>
   * @return Whether the proposal field is set.
   */
  boolean hasProposal();
  /**
   * <pre>
   * The proposal about updating the policy
   * </pre>
   *
   * <code>.adamant.global.v1.WalletProposal proposal = 18 [json_name = "proposal"];</code>
   * @return The proposal.
   */
  java.adamant.global.v1.WalletProposal getProposal();
  /**
   * <pre>
   * The proposal about updating the policy
   * </pre>
   *
   * <code>.adamant.global.v1.WalletProposal proposal = 18 [json_name = "proposal"];</code>
   */
  java.adamant.global.v1.WalletProposalOrBuilder getProposalOrBuilder();

  /**
   * <pre>
   * The id of wallet to which the tx is send (only wallet type is
   * </pre>
   *
   * <code>string destination_wallet_id = 19 [json_name = "destinationWalletId"];</code>
   * @return The destinationWalletId.
   */
  java.lang.String getDestinationWalletId();
  /**
   * <pre>
   * The id of wallet to which the tx is send (only wallet type is
   * </pre>
   *
   * <code>string destination_wallet_id = 19 [json_name = "destinationWalletId"];</code>
   * @return The bytes for destinationWalletId.
   */
  com.google.protobuf.ByteString
      getDestinationWalletIdBytes();

  /**
   * <pre>
   * WALLET_TYPE_SELF_CUSTODY_HOT_ETHEREUM_EOA_RECEIVE_ONLY)
   * </pre>
   *
   * <code>bool watch_only = 21 [json_name = "watchOnly"];</code>
   * @return The watchOnly.
   */
  boolean getWatchOnly();

  /**
   * <pre>
   * number of address (only watch_only is true)
   * </pre>
   *
   * <code>uint32 address_number = 22 [json_name = "addressNumber"];</code>
   * @return The addressNumber.
   */
  int getAddressNumber();

  /**
   * <pre>
   * should check remittance
   * </pre>
   *
   * <code>bool should_check_remittance = 24 [json_name = "shouldCheckRemittance"];</code>
   * @return The shouldCheckRemittance.
   */
  boolean getShouldCheckRemittance();

  /**
   * <pre>
   * The wallet id of the inherited ethereum (only for ERC20 token)
   * </pre>
   *
   * <code>string inherit_wallet_id = 25 [json_name = "inheritWalletId"];</code>
   * @return The inheritWalletId.
   */
  java.lang.String getInheritWalletId();
  /**
   * <pre>
   * The wallet id of the inherited ethereum (only for ERC20 token)
   * </pre>
   *
   * <code>string inherit_wallet_id = 25 [json_name = "inheritWalletId"];</code>
   * @return The bytes for inheritWalletId.
   */
  com.google.protobuf.ByteString
      getInheritWalletIdBytes();

  /**
   * <pre>
   * the time at which the wallet was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 15 [json_name = "createTime"];</code>
   * @return Whether the createTime field is set.
   */
  boolean hasCreateTime();
  /**
   * <pre>
   * the time at which the wallet was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 15 [json_name = "createTime"];</code>
   * @return The createTime.
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   * <pre>
   * the time at which the wallet was created
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 15 [json_name = "createTime"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   * <pre>
   * the time at which the wallet was updated
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 16 [json_name = "updateTime"];</code>
   * @return Whether the updateTime field is set.
   */
  boolean hasUpdateTime();
  /**
   * <pre>
   * the time at which the wallet was updated
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 16 [json_name = "updateTime"];</code>
   * @return The updateTime.
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   * <pre>
   * the time at which the wallet was updated
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 16 [json_name = "updateTime"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();
}
