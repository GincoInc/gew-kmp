// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;


/**
* Validates {@code CreatePreTransactionRequest} protobuf objects.
*/
@SuppressWarnings("all")
public class CreatePreTransactionRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<adamant.global.v1.CreatePreTransactionRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(adamant.global.v1.CreatePreTransactionRequest.class)) return new CreatePreTransactionRequestValidator();
		
		return null;
	}
		
		private final gincoinc.global.v1.Enum.Coin[] COIN__NOT_IN = new gincoinc.global.v1.Enum.Coin[]{
			gincoinc.global.v1.Enum.Coin.forNumber(0),
		};
	
		
	
		
		com.google.re2j.Pattern EXTERNAL_ID__PATTERN = com.google.re2j.Pattern.compile("^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$");
	
		
	
	

	public void assertValid(adamant.global.v1.CreatePreTransactionRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.EnumValidation.definedOnly(".adamant.global.v1.CreatePreTransactionRequest.coin", proto.getCoin());
			io.envoyproxy.pgv.CollectiveValidation.notIn(".adamant.global.v1.CreatePreTransactionRequest.coin", proto.getCoin(), COIN__NOT_IN);
	
			io.envoyproxy.pgv.EnumValidation.definedOnly(".adamant.global.v1.CreatePreTransactionRequest.network", proto.getNetwork());
	
			io.envoyproxy.pgv.StringValidation.pattern(".adamant.global.v1.CreatePreTransactionRequest.external_id", proto.getExternalId(), EXTERNAL_ID__PATTERN);
	
			io.envoyproxy.pgv.RepeatedValidation.forEach(proto.getDetailsList(), item -> {
				
			// Validate details
			if (true) index.validatorFor(item).assertValid(item);
			});
	
	}

}

