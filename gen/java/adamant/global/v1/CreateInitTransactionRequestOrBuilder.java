// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;

public interface CreateInitTransactionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:adamant.global.v1.CreateInitTransactionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = { ... }</code>
   * @return The walletId.
   */
  java.lang.String getWalletId();
  /**
   * <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = { ... }</code>
   * @return The bytes for walletId.
   */
  com.google.protobuf.ByteString
      getWalletIdBytes();

  /**
   * <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
   * @return Whether the iostSpecific field is set.
   */
  boolean hasIostSpecific();
  /**
   * <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
   * @return The iostSpecific.
   */
  adamant.global.v1.Model.CreateTransactionIOSTSpecific getIostSpecific();
  /**
   * <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
   */
  adamant.global.v1.Model.CreateTransactionIOSTSpecificOrBuilder getIostSpecificOrBuilder();

  /**
   * <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
   * @return Whether the symbolSpecific field is set.
   */
  boolean hasSymbolSpecific();
  /**
   * <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
   * @return The symbolSpecific.
   */
  adamant.global.v1.Model.CreateTransactionSymbolSpecific getSymbolSpecific();
  /**
   * <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
   */
  adamant.global.v1.Model.CreateTransactionSymbolSpecificOrBuilder getSymbolSpecificOrBuilder();
}
