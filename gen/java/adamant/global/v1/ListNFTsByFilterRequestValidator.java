// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamant.global.v1;


/**
* Validates {@code ListNFTsByFilterRequest} protobuf objects.
*/
@SuppressWarnings("all")
public class ListNFTsByFilterRequestValidator implements io.envoyproxy.pgv.ValidatorImpl<adamant.global.v1.ListNFTsByFilterRequest>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(adamant.global.v1.ListNFTsByFilterRequest.class)) return new ListNFTsByFilterRequestValidator();
		
		return null;
	}
		
		private final adamant.global.v1.Enum.ListFilterType[] FILTER_TYPE__NOT_IN = new adamant.global.v1.Enum.ListFilterType[]{
			adamant.global.v1.Enum.ListFilterType.forNumber(0),
		};
	
		
	
	

	public void assertValid(adamant.global.v1.ListNFTsByFilterRequest proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			io.envoyproxy.pgv.EnumValidation.definedOnly(".adamant.global.v1.ListNFTsByFilterRequest.filter_type", proto.getFilterType());
			io.envoyproxy.pgv.CollectiveValidation.notIn(".adamant.global.v1.ListNFTsByFilterRequest.filter_type", proto.getFilterType(), FILTER_TYPE__NOT_IN);
	// no validation rules for WalletId

	
	}

}

