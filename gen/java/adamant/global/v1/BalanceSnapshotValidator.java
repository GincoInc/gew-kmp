// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package java.adamant.global.v1;

/**
* Validates {@code BalanceSnapshot} protobuf objects.
*/
public class BalanceSnapshotValidator implements io.envoyproxy.pgv.ValidatorImpl<java.adamant.global.v1.BalanceSnapshot>{
	public static io.envoyproxy.pgv.ValidatorImpl validatorFor(Class clazz) {
		if (clazz.equals(java.adamant.global.v1.BalanceSnapshot.class)) return new BalanceSnapshotValidator();
		
		return null;
	}
		
	
		
		
		
	
		
		
		
	
	

	public void assertValid(java.adamant.global.v1.BalanceSnapshot proto, io.envoyproxy.pgv.ValidatorIndex index) throws io.envoyproxy.pgv.ValidationException {
	
			// Validate create_time
			if (proto.hasCreateTime()) index.validatorFor(proto.getCreateTime()).assertValid(proto.getCreateTime());
	
			io.envoyproxy.pgv.MapValidation.noSparse(".adamant.global.v1.BalanceSnapshot.total_balances", proto.getTotalBalancesMap());
			io.envoyproxy.pgv.MapValidation.validateParts(proto.getTotalBalancesMap().keySet(), key -> {
				// no validation rules for TotalBalances

			});
			io.envoyproxy.pgv.MapValidation.validateParts(proto.getTotalBalancesMap().values(), value -> {
				
			// Validate total_balances
			if (true) index.validatorFor(value).assertValid(value);
			});
	
			io.envoyproxy.pgv.MapValidation.noSparse(".adamant.global.v1.BalanceSnapshot.rates", proto.getRatesMap());
			io.envoyproxy.pgv.MapValidation.validateParts(proto.getRatesMap().keySet(), key -> {
				// no validation rules for Rates

			});
			io.envoyproxy.pgv.MapValidation.validateParts(proto.getRatesMap().values(), value -> {
				
			// Validate rates
			if (true) index.validatorFor(value).assertValid(value);
			});
	
	}

}

