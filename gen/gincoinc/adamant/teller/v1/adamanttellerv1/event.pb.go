// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gincoinc/adamant/teller/v1/adamanttellerv1/event.proto

package adamanttellerv1

import (
	fmt "fmt"
	gincoincglobalv1 "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransferUpdateEvent struct {
	EventId              string                             `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	WalletId             string                             `protobuf:"bytes,14,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Coin                 gincoincglobalv1.Coin              `protobuf:"varint,2,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                             `protobuf:"bytes,3,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxIndex              uint32                             `protobuf:"varint,4,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	Value                float64                            `protobuf:"fixed64,5,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string                             `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	JpyRate              float64                            `protobuf:"fixed64,13,opt,name=jpy_rate,json=jpyRate,proto3" json:"jpy_rate,omitempty"`
	Address              string                             `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	DestinationTag       uint32                             `protobuf:"varint,8,opt,name=destination_tag,json=destinationTag,proto3" json:"destination_tag,omitempty"`
	State                gincoincglobalv1.TransactionState  `protobuf:"varint,9,opt,name=state,proto3,enum=gincoinc.global.v1.TransactionState" json:"state,omitempty"`
	Result               gincoincglobalv1.TransactionResult `protobuf:"varint,10,opt,name=result,proto3,enum=gincoinc.global.v1.TransactionResult" json:"result,omitempty"`
	TransferType         gincoincglobalv1.TransferType      `protobuf:"varint,11,opt,name=transfer_type,json=transferType,proto3,enum=gincoinc.global.v1.TransferType" json:"transfer_type,omitempty"`
	Time                 *timestamp.Timestamp               `protobuf:"bytes,12,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *TransferUpdateEvent) Reset()         { *m = TransferUpdateEvent{} }
func (m *TransferUpdateEvent) String() string { return proto.CompactTextString(m) }
func (*TransferUpdateEvent) ProtoMessage()    {}
func (*TransferUpdateEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_f74116c0389a047d, []int{0}
}

func (m *TransferUpdateEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferUpdateEvent.Unmarshal(m, b)
}
func (m *TransferUpdateEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferUpdateEvent.Marshal(b, m, deterministic)
}
func (m *TransferUpdateEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferUpdateEvent.Merge(m, src)
}
func (m *TransferUpdateEvent) XXX_Size() int {
	return xxx_messageInfo_TransferUpdateEvent.Size(m)
}
func (m *TransferUpdateEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferUpdateEvent.DiscardUnknown(m)
}

var xxx_messageInfo_TransferUpdateEvent proto.InternalMessageInfo

func (m *TransferUpdateEvent) GetEventId() string {
	if m != nil {
		return m.EventId
	}
	return ""
}

func (m *TransferUpdateEvent) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *TransferUpdateEvent) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *TransferUpdateEvent) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TransferUpdateEvent) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *TransferUpdateEvent) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TransferUpdateEvent) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *TransferUpdateEvent) GetJpyRate() float64 {
	if m != nil {
		return m.JpyRate
	}
	return 0
}

func (m *TransferUpdateEvent) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TransferUpdateEvent) GetDestinationTag() uint32 {
	if m != nil {
		return m.DestinationTag
	}
	return 0
}

func (m *TransferUpdateEvent) GetState() gincoincglobalv1.TransactionState {
	if m != nil {
		return m.State
	}
	return gincoincglobalv1.TransactionState_TRANSACTION_STATE_INVALID
}

func (m *TransferUpdateEvent) GetResult() gincoincglobalv1.TransactionResult {
	if m != nil {
		return m.Result
	}
	return gincoincglobalv1.TransactionResult_TRANSACTION_RESULT_INVALID
}

func (m *TransferUpdateEvent) GetTransferType() gincoincglobalv1.TransferType {
	if m != nil {
		return m.TransferType
	}
	return gincoincglobalv1.TransferType_TRANSFER_TYPE_INVALID
}

func (m *TransferUpdateEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterType((*TransferUpdateEvent)(nil), "adamant.teller.v1.TransferUpdateEvent")
}

func init() {
	proto.RegisterFile("gincoinc/adamant/teller/v1/adamanttellerv1/event.proto", fileDescriptor_f74116c0389a047d)
}

var fileDescriptor_f74116c0389a047d = []byte{
	// 441 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0x20, 0xdd, 0xb4, 0xee, 0xc7, 0x6a, 0xbd, 0x1c, 0xbc, 0xe5, 0x40, 0x40, 0x20, 0x72,
	0x40, 0x8e, 0xba, 0x48, 0x1c, 0x90, 0xb8, 0x80, 0xf6, 0xd0, 0xab, 0x29, 0x1c, 0xb8, 0x44, 0x6e,
	0x3d, 0x8d, 0xb2, 0x4a, 0x9d, 0xc8, 0x99, 0x86, 0xf6, 0x7f, 0xf1, 0x03, 0x91, 0xc7, 0xed, 0x6a,
	0x85, 0x40, 0x1c, 0xe7, 0xcd, 0xfb, 0x18, 0x27, 0x8f, 0x7d, 0x28, 0x2b, 0xbb, 0x69, 0x2a, 0xbb,
	0xc9, 0xb5, 0xd1, 0x3b, 0x6d, 0x31, 0x47, 0xa8, 0x6b, 0x70, 0x79, 0xbf, 0x38, 0x23, 0x01, 0xe8,
	0x17, 0x39, 0xf4, 0x60, 0x51, 0xb6, 0xae, 0xc1, 0x86, 0x5f, 0x9d, 0x96, 0x32, 0x6c, 0x65, 0xbf,
	0x98, 0xbf, 0x28, 0x9b, 0xa6, 0xac, 0x21, 0x27, 0xc2, 0x7a, 0xbf, 0xcd, 0xb1, 0xda, 0x41, 0x87,
	0x7a, 0xd7, 0x06, 0xcd, 0x5c, 0x3e, 0x64, 0x95, 0x75, 0xb3, 0xd6, 0xb5, 0xcf, 0x38, 0x43, 0x01,
	0xf1, 0x21, 0x76, 0xbf, 0x0b, 0xfc, 0x57, 0xbf, 0x62, 0x76, 0xbd, 0x72, 0xda, 0x76, 0x5b, 0x70,
	0xdf, 0x5a, 0xa3, 0x11, 0xee, 0xfc, 0x05, 0xfc, 0x86, 0x0d, 0xe9, 0x94, 0xa2, 0x32, 0x22, 0x4a,
	0xa3, 0x6c, 0xa4, 0x12, 0x9a, 0x97, 0x86, 0x3f, 0x67, 0xa3, 0x9f, 0xba, 0xae, 0x81, 0x76, 0x33,
	0xda, 0x0d, 0x03, 0xb0, 0x34, 0xfc, 0x1d, 0x8b, 0x7d, 0x96, 0x78, 0x92, 0x46, 0xd9, 0xec, 0x56,
	0x3c, 0x9c, 0x23, 0x43, 0xb8, 0xec, 0x17, 0xf2, 0x4b, 0x53, 0x59, 0x45, 0x2c, 0x7e, 0xcd, 0x06,
	0x78, 0xf0, 0x36, 0x4f, 0xc9, 0x26, 0xc6, 0xc3, 0xd2, 0xf8, 0x68, 0x0f, 0x5a, 0x03, 0x07, 0x11,
	0xa7, 0x51, 0x36, 0x55, 0x09, 0x1e, 0x96, 0x7e, 0xe4, 0xcf, 0xd8, 0xa0, 0xd7, 0xf5, 0x1e, 0xc4,
	0x20, 0x8d, 0xb2, 0x48, 0x85, 0x81, 0xbf, 0x64, 0x93, 0x0e, 0x5d, 0x65, 0xcb, 0x22, 0x2c, 0x2f,
	0xc8, 0x6c, 0x1c, 0xb0, 0xef, 0x44, 0xb9, 0x61, 0xc3, 0xfb, 0xf6, 0x58, 0x38, 0x8d, 0x20, 0xa6,
	0xa4, 0x4d, 0xee, 0xdb, 0xa3, 0xd2, 0x08, 0x5c, 0xb0, 0x44, 0x1b, 0xe3, 0xa0, 0xeb, 0x44, 0x12,
	0x1e, 0x7a, 0x1a, 0xf9, 0x5b, 0x76, 0x69, 0xa0, 0xc3, 0xca, 0x6a, 0xac, 0x1a, 0x5b, 0xa0, 0x2e,
	0xc5, 0x90, 0xee, 0x99, 0x3d, 0x82, 0x57, 0xba, 0xe4, 0x1f, 0xd9, 0xa0, 0x43, 0x6f, 0x3d, 0xa2,
	0x57, 0xbf, 0xfe, 0xdb, 0xab, 0xe9, 0x23, 0xeb, 0x8d, 0x97, 0x7c, 0xf5, 0x5c, 0x15, 0x24, 0xfc,
	0x13, 0xbb, 0x70, 0xd0, 0xed, 0x6b, 0x14, 0x8c, 0xc4, 0x6f, 0xfe, 0x23, 0x56, 0x44, 0x56, 0x27,
	0x11, 0xbf, 0x63, 0x53, 0x3c, 0xfd, 0xbe, 0x02, 0x8f, 0x2d, 0x88, 0x31, 0xb9, 0xa4, 0xff, 0x74,
	0xd9, 0x82, 0x5b, 0x1d, 0x5b, 0x50, 0x13, 0x7c, 0x34, 0x71, 0xc9, 0x62, 0xdf, 0x24, 0x31, 0x49,
	0xa3, 0x6c, 0x7c, 0x3b, 0x97, 0xa1, 0x66, 0xf2, 0x5c, 0x33, 0xb9, 0x3a, 0xd7, 0x4c, 0x11, 0xef,
	0xf3, 0xd5, 0x8f, 0xcb, 0x3f, 0x9a, 0xbb, 0xbe, 0x20, 0xf2, 0xfb, 0xdf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xda, 0x92, 0xae, 0xea, 0xee, 0x02, 0x00, 0x00,
}
