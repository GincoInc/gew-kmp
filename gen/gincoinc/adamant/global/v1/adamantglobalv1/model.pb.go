// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package adamantglobalv1

import (
	fmt "fmt"
	gincoincglobalv1 "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The wallet model
type Wallet struct {
	WalletId              string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Name                  string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                  gincoincglobalv1.Coin        `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	HdAccount             uint32                       `protobuf:"varint,17,opt,name=hd_account,json=hdAccount,proto3" json:"hd_account,omitempty"`
	WalletType            WalletType                   `protobuf:"varint,4,opt,name=wallet_type,json=walletType,proto3,enum=adamant.global.v1.WalletType" json:"wallet_type,omitempty"`
	AddressType           gincoincglobalv1.AddressType `protobuf:"varint,5,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	M                     uint32                       `protobuf:"varint,6,opt,name=m,proto3" json:"m,omitempty"`
	N                     uint32                       `protobuf:"varint,7,opt,name=n,proto3" json:"n,omitempty"`
	State                 WalletState                  `protobuf:"varint,8,opt,name=state,proto3,enum=adamant.global.v1.WalletState" json:"state,omitempty"`
	Keys                  []*Key                       `protobuf:"bytes,9,rep,name=keys,proto3" json:"keys,omitempty"`
	Members               []*WalletMember              `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	RequiredApprovalCount uint32                       `protobuf:"varint,20,opt,name=required_approval_count,json=requiredApprovalCount,proto3" json:"required_approval_count,omitempty"`
	Balance               float64                      `protobuf:"fixed64,11,opt,name=balance,proto3" json:"balance,omitempty"`
	StringBalance         string                       `protobuf:"bytes,12,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	Address               string                       `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	PolicyId              string                       `protobuf:"bytes,14,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Proposal              *WalletProposal              `protobuf:"bytes,18,opt,name=proposal,proto3" json:"proposal,omitempty"`
	DestinationWalletId   string                       `protobuf:"bytes,19,opt,name=destination_wallet_id,json=destinationWalletId,proto3" json:"destination_wallet_id,omitempty"`
	WatchOnly             bool                         `protobuf:"varint,21,opt,name=watch_only,json=watchOnly,proto3" json:"watch_only,omitempty"`
	AddressNumber         uint32                       `protobuf:"varint,22,opt,name=address_number,json=addressNumber,proto3" json:"address_number,omitempty"`
	CreateTime            *timestamp.Timestamp         `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime            *timestamp.Timestamp         `protobuf:"bytes,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                     `json:"-"`
	XXX_unrecognized      []byte                       `json:"-"`
	XXX_sizecache         int32                        `json:"-"`
}

func (m *Wallet) Reset()         { *m = Wallet{} }
func (m *Wallet) String() string { return proto.CompactTextString(m) }
func (*Wallet) ProtoMessage()    {}
func (*Wallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{0}
}

func (m *Wallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wallet.Unmarshal(m, b)
}
func (m *Wallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wallet.Marshal(b, m, deterministic)
}
func (m *Wallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wallet.Merge(m, src)
}
func (m *Wallet) XXX_Size() int {
	return xxx_messageInfo_Wallet.Size(m)
}
func (m *Wallet) XXX_DiscardUnknown() {
	xxx_messageInfo_Wallet.DiscardUnknown(m)
}

var xxx_messageInfo_Wallet proto.InternalMessageInfo

func (m *Wallet) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Wallet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Wallet) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Wallet) GetHdAccount() uint32 {
	if m != nil {
		return m.HdAccount
	}
	return 0
}

func (m *Wallet) GetWalletType() WalletType {
	if m != nil {
		return m.WalletType
	}
	return WalletType_WALLET_TYPE_INVALID
}

func (m *Wallet) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *Wallet) GetM() uint32 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *Wallet) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Wallet) GetState() WalletState {
	if m != nil {
		return m.State
	}
	return WalletState_WALLET_STATE_INVALID
}

func (m *Wallet) GetKeys() []*Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Wallet) GetMembers() []*WalletMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Wallet) GetRequiredApprovalCount() uint32 {
	if m != nil {
		return m.RequiredApprovalCount
	}
	return 0
}

func (m *Wallet) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Wallet) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

func (m *Wallet) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Wallet) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Wallet) GetProposal() *WalletProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *Wallet) GetDestinationWalletId() string {
	if m != nil {
		return m.DestinationWalletId
	}
	return ""
}

func (m *Wallet) GetWatchOnly() bool {
	if m != nil {
		return m.WatchOnly
	}
	return false
}

func (m *Wallet) GetAddressNumber() uint32 {
	if m != nil {
		return m.AddressNumber
	}
	return 0
}

func (m *Wallet) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Wallet) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type WalletWithoutBalance struct {
	WalletId              string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Name                  string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                  gincoincglobalv1.Coin        `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	HdAccount             uint32                       `protobuf:"varint,4,opt,name=hd_account,json=hdAccount,proto3" json:"hd_account,omitempty"`
	WalletType            WalletType                   `protobuf:"varint,5,opt,name=wallet_type,json=walletType,proto3,enum=adamant.global.v1.WalletType" json:"wallet_type,omitempty"`
	AddressType           gincoincglobalv1.AddressType `protobuf:"varint,6,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	M                     uint32                       `protobuf:"varint,7,opt,name=m,proto3" json:"m,omitempty"`
	N                     uint32                       `protobuf:"varint,8,opt,name=n,proto3" json:"n,omitempty"`
	State                 WalletState                  `protobuf:"varint,9,opt,name=state,proto3,enum=adamant.global.v1.WalletState" json:"state,omitempty"`
	Keys                  []*Key                       `protobuf:"bytes,10,rep,name=keys,proto3" json:"keys,omitempty"`
	Members               []*WalletMember              `protobuf:"bytes,11,rep,name=members,proto3" json:"members,omitempty"`
	RequiredApprovalCount uint32                       `protobuf:"varint,12,opt,name=required_approval_count,json=requiredApprovalCount,proto3" json:"required_approval_count,omitempty"`
	Address               string                       `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	PolicyId              string                       `protobuf:"bytes,14,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Proposal              *WalletProposal              `protobuf:"bytes,15,opt,name=proposal,proto3" json:"proposal,omitempty"`
	DestinationWalletId   string                       `protobuf:"bytes,16,opt,name=destination_wallet_id,json=destinationWalletId,proto3" json:"destination_wallet_id,omitempty"`
	WatchOnly             bool                         `protobuf:"varint,19,opt,name=watch_only,json=watchOnly,proto3" json:"watch_only,omitempty"`
	CreateTime            *timestamp.Timestamp         `protobuf:"bytes,17,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime            *timestamp.Timestamp         `protobuf:"bytes,18,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                     `json:"-"`
	XXX_unrecognized      []byte                       `json:"-"`
	XXX_sizecache         int32                        `json:"-"`
}

func (m *WalletWithoutBalance) Reset()         { *m = WalletWithoutBalance{} }
func (m *WalletWithoutBalance) String() string { return proto.CompactTextString(m) }
func (*WalletWithoutBalance) ProtoMessage()    {}
func (*WalletWithoutBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{1}
}

func (m *WalletWithoutBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletWithoutBalance.Unmarshal(m, b)
}
func (m *WalletWithoutBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletWithoutBalance.Marshal(b, m, deterministic)
}
func (m *WalletWithoutBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletWithoutBalance.Merge(m, src)
}
func (m *WalletWithoutBalance) XXX_Size() int {
	return xxx_messageInfo_WalletWithoutBalance.Size(m)
}
func (m *WalletWithoutBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletWithoutBalance.DiscardUnknown(m)
}

var xxx_messageInfo_WalletWithoutBalance proto.InternalMessageInfo

func (m *WalletWithoutBalance) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *WalletWithoutBalance) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WalletWithoutBalance) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *WalletWithoutBalance) GetHdAccount() uint32 {
	if m != nil {
		return m.HdAccount
	}
	return 0
}

func (m *WalletWithoutBalance) GetWalletType() WalletType {
	if m != nil {
		return m.WalletType
	}
	return WalletType_WALLET_TYPE_INVALID
}

func (m *WalletWithoutBalance) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *WalletWithoutBalance) GetM() uint32 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *WalletWithoutBalance) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *WalletWithoutBalance) GetState() WalletState {
	if m != nil {
		return m.State
	}
	return WalletState_WALLET_STATE_INVALID
}

func (m *WalletWithoutBalance) GetKeys() []*Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *WalletWithoutBalance) GetMembers() []*WalletMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *WalletWithoutBalance) GetRequiredApprovalCount() uint32 {
	if m != nil {
		return m.RequiredApprovalCount
	}
	return 0
}

func (m *WalletWithoutBalance) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *WalletWithoutBalance) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *WalletWithoutBalance) GetProposal() *WalletProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *WalletWithoutBalance) GetDestinationWalletId() string {
	if m != nil {
		return m.DestinationWalletId
	}
	return ""
}

func (m *WalletWithoutBalance) GetWatchOnly() bool {
	if m != nil {
		return m.WatchOnly
	}
	return false
}

func (m *WalletWithoutBalance) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *WalletWithoutBalance) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of proposal to update wallet information
type WalletProposal struct {
	ProposalType                  WalletProposalType `protobuf:"varint,7,opt,name=proposal_type,json=proposalType,proto3,enum=adamant.global.v1.WalletProposalType" json:"proposal_type,omitempty"`
	RequesterAccountId            string             `protobuf:"bytes,1,opt,name=requester_account_id,json=requesterAccountId,proto3" json:"requester_account_id,omitempty"`
	RequesterName                 string             `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	ApproverAccountId             string             `protobuf:"bytes,3,opt,name=approver_account_id,json=approverAccountId,proto3" json:"approver_account_id,omitempty"`
	ApproverName                  string             `protobuf:"bytes,4,opt,name=approver_name,json=approverName,proto3" json:"approver_name,omitempty"`
	ProposedPolicy                string             `protobuf:"bytes,5,opt,name=proposed_policy,json=proposedPolicy,proto3" json:"proposed_policy,omitempty"`
	ProposedValidators            []string           `protobuf:"bytes,8,rep,name=proposed_validators,json=proposedValidators,proto3" json:"proposed_validators,omitempty"`
	ProposedRequiredApprovalCount uint32             `protobuf:"varint,9,opt,name=proposed_required_approval_count,json=proposedRequiredApprovalCount,proto3" json:"proposed_required_approval_count,omitempty"`
	IsReviewed                    bool               `protobuf:"varint,6,opt,name=is_reviewed,json=isReviewed,proto3" json:"is_reviewed,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}           `json:"-"`
	XXX_unrecognized              []byte             `json:"-"`
	XXX_sizecache                 int32              `json:"-"`
}

func (m *WalletProposal) Reset()         { *m = WalletProposal{} }
func (m *WalletProposal) String() string { return proto.CompactTextString(m) }
func (*WalletProposal) ProtoMessage()    {}
func (*WalletProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{2}
}

func (m *WalletProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletProposal.Unmarshal(m, b)
}
func (m *WalletProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletProposal.Marshal(b, m, deterministic)
}
func (m *WalletProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletProposal.Merge(m, src)
}
func (m *WalletProposal) XXX_Size() int {
	return xxx_messageInfo_WalletProposal.Size(m)
}
func (m *WalletProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletProposal.DiscardUnknown(m)
}

var xxx_messageInfo_WalletProposal proto.InternalMessageInfo

func (m *WalletProposal) GetProposalType() WalletProposalType {
	if m != nil {
		return m.ProposalType
	}
	return WalletProposalType_WALLET_PROPOSAL_TYPE_INVALID
}

func (m *WalletProposal) GetRequesterAccountId() string {
	if m != nil {
		return m.RequesterAccountId
	}
	return ""
}

func (m *WalletProposal) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *WalletProposal) GetApproverAccountId() string {
	if m != nil {
		return m.ApproverAccountId
	}
	return ""
}

func (m *WalletProposal) GetApproverName() string {
	if m != nil {
		return m.ApproverName
	}
	return ""
}

func (m *WalletProposal) GetProposedPolicy() string {
	if m != nil {
		return m.ProposedPolicy
	}
	return ""
}

func (m *WalletProposal) GetProposedValidators() []string {
	if m != nil {
		return m.ProposedValidators
	}
	return nil
}

func (m *WalletProposal) GetProposedRequiredApprovalCount() uint32 {
	if m != nil {
		return m.ProposedRequiredApprovalCount
	}
	return 0
}

func (m *WalletProposal) GetIsReviewed() bool {
	if m != nil {
		return m.IsReviewed
	}
	return false
}

// The model of wallet member
type WalletMember struct {
	AccountId                 string      `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType               AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	Name                      string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                     string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role                      RoleType    `protobuf:"varint,5,opt,name=role,proto3,enum=adamant.global.v1.RoleType" json:"role,omitempty"`
	IsKeyRegistered           bool        `protobuf:"varint,6,opt,name=is_key_registered,json=isKeyRegistered,proto3" json:"is_key_registered,omitempty"`
	IsMaster                  bool        `protobuf:"varint,7,opt,name=is_master,json=isMaster,proto3" json:"is_master,omitempty"`
	IsValidatedToCreateWallet bool        `protobuf:"varint,8,opt,name=is_validated_to_create_wallet,json=isValidatedToCreateWallet,proto3" json:"is_validated_to_create_wallet,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}    `json:"-"`
	XXX_unrecognized          []byte      `json:"-"`
	XXX_sizecache             int32       `json:"-"`
}

func (m *WalletMember) Reset()         { *m = WalletMember{} }
func (m *WalletMember) String() string { return proto.CompactTextString(m) }
func (*WalletMember) ProtoMessage()    {}
func (*WalletMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{3}
}

func (m *WalletMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletMember.Unmarshal(m, b)
}
func (m *WalletMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletMember.Marshal(b, m, deterministic)
}
func (m *WalletMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletMember.Merge(m, src)
}
func (m *WalletMember) XXX_Size() int {
	return xxx_messageInfo_WalletMember.Size(m)
}
func (m *WalletMember) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletMember.DiscardUnknown(m)
}

var xxx_messageInfo_WalletMember proto.InternalMessageInfo

func (m *WalletMember) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *WalletMember) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *WalletMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WalletMember) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *WalletMember) GetRole() RoleType {
	if m != nil {
		return m.Role
	}
	return RoleType_ROLE_TYPE_INVALID
}

func (m *WalletMember) GetIsKeyRegistered() bool {
	if m != nil {
		return m.IsKeyRegistered
	}
	return false
}

func (m *WalletMember) GetIsMaster() bool {
	if m != nil {
		return m.IsMaster
	}
	return false
}

func (m *WalletMember) GetIsValidatedToCreateWallet() bool {
	if m != nil {
		return m.IsValidatedToCreateWallet
	}
	return false
}

// The model of key pair
type Key struct {
	WalletId             string      `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	AccountId            string      `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType `protobuf:"varint,3,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	KeyId                string      `protobuf:"bytes,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	KeyIndex             uint32      `protobuf:"varint,5,opt,name=key_index,json=keyIndex,proto3" json:"key_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{4}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Key) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Key) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *Key) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *Key) GetKeyIndex() uint32 {
	if m != nil {
		return m.KeyIndex
	}
	return 0
}

// The model of address
type Address struct {
	WalletId             string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	AddressId            string                       `protobuf:"bytes,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Coin                 gincoincglobalv1.Coin        `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                       `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Index                uint32                       `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	Balance              float64                      `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`
	StringBalance        string                       `protobuf:"bytes,7,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	State                AddressState                 `protobuf:"varint,8,opt,name=state,proto3,enum=adamant.global.v1.AddressState" json:"state,omitempty"`
	AddressType          gincoincglobalv1.AddressType `protobuf:"varint,9,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	CreateTime           *timestamp.Timestamp         `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp         `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{5}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Address) GetAddressId() string {
	if m != nil {
		return m.AddressId
	}
	return ""
}

func (m *Address) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Address) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Address) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

func (m *Address) GetState() AddressState {
	if m != nil {
		return m.State
	}
	return AddressState_ADDRESS_STATE_INVALID
}

func (m *Address) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *Address) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Address) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of address which hold ETH for ethereum wallet/address creation etc
type EthereumFeeAddress struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Balance              float64  `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	StringBalance        string   `protobuf:"bytes,3,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumFeeAddress) Reset()         { *m = EthereumFeeAddress{} }
func (m *EthereumFeeAddress) String() string { return proto.CompactTextString(m) }
func (*EthereumFeeAddress) ProtoMessage()    {}
func (*EthereumFeeAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{6}
}

func (m *EthereumFeeAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumFeeAddress.Unmarshal(m, b)
}
func (m *EthereumFeeAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumFeeAddress.Marshal(b, m, deterministic)
}
func (m *EthereumFeeAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumFeeAddress.Merge(m, src)
}
func (m *EthereumFeeAddress) XXX_Size() int {
	return xxx_messageInfo_EthereumFeeAddress.Size(m)
}
func (m *EthereumFeeAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumFeeAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumFeeAddress proto.InternalMessageInfo

func (m *EthereumFeeAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EthereumFeeAddress) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *EthereumFeeAddress) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

// The model of transaction
type Transaction struct {
	WalletId             string                `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string                `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Address              string                `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Value                float64               `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string                `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	JpyRate              float64               `protobuf:"fixed64,9,opt,name=jpy_rate,json=jpyRate,proto3" json:"jpy_rate,omitempty"`
	Fee                  float64               `protobuf:"fixed64,10,opt,name=fee,proto3" json:"fee,omitempty"`
	StringFee            string                `protobuf:"bytes,11,opt,name=string_fee,json=stringFee,proto3" json:"string_fee,omitempty"`
	FeeRate              uint64                `protobuf:"varint,12,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	State                TransactionState      `protobuf:"varint,13,opt,name=state,proto3,enum=adamant.global.v1.TransactionState" json:"state,omitempty"`
	SignedKeys           []*Key                `protobuf:"bytes,14,rep,name=signed_keys,json=signedKeys,proto3" json:"signed_keys,omitempty"`
	Members              []*TransactionMember  `protobuf:"bytes,17,rep,name=members,proto3" json:"members,omitempty"`
	BitcoinSpecific      *BitcoinSpecific      `protobuf:"bytes,22,opt,name=bitcoin_specific,json=bitcoinSpecific,proto3" json:"bitcoin_specific,omitempty"`
	EthereumSpecific     *EthereumSpecific     `protobuf:"bytes,20,opt,name=ethereum_specific,json=ethereumSpecific,proto3" json:"ethereum_specific,omitempty"`
	LitecoinSpecific     *LitecoinSpecific     `protobuf:"bytes,23,opt,name=litecoin_specific,json=litecoinSpecific,proto3" json:"litecoin_specific,omitempty"`
	BitcoincashSpecific  *BitcoincashSpecific  `protobuf:"bytes,24,opt,name=bitcoincash_specific,json=bitcoincashSpecific,proto3" json:"bitcoincash_specific,omitempty"`
	XrpSpecific          *XrpSpecific          `protobuf:"bytes,21,opt,name=xrp_specific,json=xrpSpecific,proto3" json:"xrp_specific,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,18,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,19,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{7}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Transaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Transaction) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Transaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Transaction) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Transaction) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Transaction) GetJpyRate() float64 {
	if m != nil {
		return m.JpyRate
	}
	return 0
}

func (m *Transaction) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Transaction) GetStringFee() string {
	if m != nil {
		return m.StringFee
	}
	return ""
}

func (m *Transaction) GetFeeRate() uint64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *Transaction) GetState() TransactionState {
	if m != nil {
		return m.State
	}
	return TransactionState_TRANSACTION_STATE_INVALID
}

func (m *Transaction) GetSignedKeys() []*Key {
	if m != nil {
		return m.SignedKeys
	}
	return nil
}

func (m *Transaction) GetMembers() []*TransactionMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Transaction) GetBitcoinSpecific() *BitcoinSpecific {
	if m != nil {
		return m.BitcoinSpecific
	}
	return nil
}

func (m *Transaction) GetEthereumSpecific() *EthereumSpecific {
	if m != nil {
		return m.EthereumSpecific
	}
	return nil
}

func (m *Transaction) GetLitecoinSpecific() *LitecoinSpecific {
	if m != nil {
		return m.LitecoinSpecific
	}
	return nil
}

func (m *Transaction) GetBitcoincashSpecific() *BitcoincashSpecific {
	if m != nil {
		return m.BitcoincashSpecific
	}
	return nil
}

func (m *Transaction) GetXrpSpecific() *XrpSpecific {
	if m != nil {
		return m.XrpSpecific
	}
	return nil
}

func (m *Transaction) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Transaction) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of transaction member
type TransactionMember struct {
	AccountId            string      `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role                 RoleType    `protobuf:"varint,5,opt,name=role,proto3,enum=adamant.global.v1.RoleType" json:"role,omitempty"`
	Signed               bool        `protobuf:"varint,6,opt,name=signed,proto3" json:"signed,omitempty"`
	Validated            bool        `protobuf:"varint,7,opt,name=validated,proto3" json:"validated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionMember) Reset()         { *m = TransactionMember{} }
func (m *TransactionMember) String() string { return proto.CompactTextString(m) }
func (*TransactionMember) ProtoMessage()    {}
func (*TransactionMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{8}
}

func (m *TransactionMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionMember.Unmarshal(m, b)
}
func (m *TransactionMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionMember.Marshal(b, m, deterministic)
}
func (m *TransactionMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionMember.Merge(m, src)
}
func (m *TransactionMember) XXX_Size() int {
	return xxx_messageInfo_TransactionMember.Size(m)
}
func (m *TransactionMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionMember.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionMember proto.InternalMessageInfo

func (m *TransactionMember) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *TransactionMember) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *TransactionMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransactionMember) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TransactionMember) GetRole() RoleType {
	if m != nil {
		return m.Role
	}
	return RoleType_ROLE_TYPE_INVALID
}

func (m *TransactionMember) GetSigned() bool {
	if m != nil {
		return m.Signed
	}
	return false
}

func (m *TransactionMember) GetValidated() bool {
	if m != nil {
		return m.Validated
	}
	return false
}

// The model of transaction input
type TxInput struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxIndex              uint32   `protobuf:"varint,2,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string   `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInput) Reset()         { *m = TxInput{} }
func (m *TxInput) String() string { return proto.CompactTextString(m) }
func (*TxInput) ProtoMessage()    {}
func (*TxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{9}
}

func (m *TxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInput.Unmarshal(m, b)
}
func (m *TxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInput.Marshal(b, m, deterministic)
}
func (m *TxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInput.Merge(m, src)
}
func (m *TxInput) XXX_Size() int {
	return xxx_messageInfo_TxInput.Size(m)
}
func (m *TxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInput.DiscardUnknown(m)
}

var xxx_messageInfo_TxInput proto.InternalMessageInfo

func (m *TxInput) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxInput) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *TxInput) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxInput) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

// The model of transaction output
type TxOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string   `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	IsChange             bool     `protobuf:"varint,4,opt,name=is_change,json=isChange,proto3" json:"is_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxOutput) Reset()         { *m = TxOutput{} }
func (m *TxOutput) String() string { return proto.CompactTextString(m) }
func (*TxOutput) ProtoMessage()    {}
func (*TxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{10}
}

func (m *TxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutput.Unmarshal(m, b)
}
func (m *TxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutput.Marshal(b, m, deterministic)
}
func (m *TxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutput.Merge(m, src)
}
func (m *TxOutput) XXX_Size() int {
	return xxx_messageInfo_TxOutput.Size(m)
}
func (m *TxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutput proto.InternalMessageInfo

func (m *TxOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TxOutput) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxOutput) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *TxOutput) GetIsChange() bool {
	if m != nil {
		return m.IsChange
	}
	return false
}

// The model of Bitcoin specific fields of transaction
type BitcoinSpecific struct {
	TxInputs             []*TxInput  `protobuf:"bytes,1,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	TxOutputs            []*TxOutput `protobuf:"bytes,2,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BitcoinSpecific) Reset()         { *m = BitcoinSpecific{} }
func (m *BitcoinSpecific) String() string { return proto.CompactTextString(m) }
func (*BitcoinSpecific) ProtoMessage()    {}
func (*BitcoinSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{11}
}

func (m *BitcoinSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitcoinSpecific.Unmarshal(m, b)
}
func (m *BitcoinSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitcoinSpecific.Marshal(b, m, deterministic)
}
func (m *BitcoinSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitcoinSpecific.Merge(m, src)
}
func (m *BitcoinSpecific) XXX_Size() int {
	return xxx_messageInfo_BitcoinSpecific.Size(m)
}
func (m *BitcoinSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_BitcoinSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_BitcoinSpecific proto.InternalMessageInfo

func (m *BitcoinSpecific) GetTxInputs() []*TxInput {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *BitcoinSpecific) GetTxOutputs() []*TxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

// The model of Litecoin specific fields of transaction
type LitecoinSpecific struct {
	TxInputs             []*TxInput  `protobuf:"bytes,1,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	TxOutputs            []*TxOutput `protobuf:"bytes,2,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *LitecoinSpecific) Reset()         { *m = LitecoinSpecific{} }
func (m *LitecoinSpecific) String() string { return proto.CompactTextString(m) }
func (*LitecoinSpecific) ProtoMessage()    {}
func (*LitecoinSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{12}
}

func (m *LitecoinSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LitecoinSpecific.Unmarshal(m, b)
}
func (m *LitecoinSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LitecoinSpecific.Marshal(b, m, deterministic)
}
func (m *LitecoinSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LitecoinSpecific.Merge(m, src)
}
func (m *LitecoinSpecific) XXX_Size() int {
	return xxx_messageInfo_LitecoinSpecific.Size(m)
}
func (m *LitecoinSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_LitecoinSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_LitecoinSpecific proto.InternalMessageInfo

func (m *LitecoinSpecific) GetTxInputs() []*TxInput {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *LitecoinSpecific) GetTxOutputs() []*TxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

// The model of BitcoinCash specific fields of transaction
type BitcoincashSpecific struct {
	TxInputs             []*TxInput  `protobuf:"bytes,1,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	TxOutputs            []*TxOutput `protobuf:"bytes,2,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BitcoincashSpecific) Reset()         { *m = BitcoincashSpecific{} }
func (m *BitcoincashSpecific) String() string { return proto.CompactTextString(m) }
func (*BitcoincashSpecific) ProtoMessage()    {}
func (*BitcoincashSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{13}
}

func (m *BitcoincashSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitcoincashSpecific.Unmarshal(m, b)
}
func (m *BitcoincashSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitcoincashSpecific.Marshal(b, m, deterministic)
}
func (m *BitcoincashSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitcoincashSpecific.Merge(m, src)
}
func (m *BitcoincashSpecific) XXX_Size() int {
	return xxx_messageInfo_BitcoincashSpecific.Size(m)
}
func (m *BitcoincashSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_BitcoincashSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_BitcoincashSpecific proto.InternalMessageInfo

func (m *BitcoincashSpecific) GetTxInputs() []*TxInput {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *BitcoincashSpecific) GetTxOutputs() []*TxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

// The model of Ethereum specific fields of transaction
type EthereumSpecific struct {
	GasLimit             uint64   `protobuf:"varint,1,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	Nonce                uint64   `protobuf:"varint,2,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EthereumSpecific) Reset()         { *m = EthereumSpecific{} }
func (m *EthereumSpecific) String() string { return proto.CompactTextString(m) }
func (*EthereumSpecific) ProtoMessage()    {}
func (*EthereumSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{14}
}

func (m *EthereumSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthereumSpecific.Unmarshal(m, b)
}
func (m *EthereumSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthereumSpecific.Marshal(b, m, deterministic)
}
func (m *EthereumSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthereumSpecific.Merge(m, src)
}
func (m *EthereumSpecific) XXX_Size() int {
	return xxx_messageInfo_EthereumSpecific.Size(m)
}
func (m *EthereumSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_EthereumSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_EthereumSpecific proto.InternalMessageInfo

func (m *EthereumSpecific) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *EthereumSpecific) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

// The model of XRP specific fields of transaction
type XrpSpecific struct {
	SequenceNumber       uint32                              `protobuf:"varint,1,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	DestinationTag       uint32                              `protobuf:"varint,2,opt,name=destination_tag,json=destinationTag,proto3" json:"destination_tag,omitempty"`
	TxType               gincoincglobalv1.XRPTransactionType `protobuf:"varint,3,opt,name=tx_type,json=txType,proto3,enum=gincoinc.global.v1.XRPTransactionType" json:"tx_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *XrpSpecific) Reset()         { *m = XrpSpecific{} }
func (m *XrpSpecific) String() string { return proto.CompactTextString(m) }
func (*XrpSpecific) ProtoMessage()    {}
func (*XrpSpecific) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{15}
}

func (m *XrpSpecific) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XrpSpecific.Unmarshal(m, b)
}
func (m *XrpSpecific) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XrpSpecific.Marshal(b, m, deterministic)
}
func (m *XrpSpecific) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XrpSpecific.Merge(m, src)
}
func (m *XrpSpecific) XXX_Size() int {
	return xxx_messageInfo_XrpSpecific.Size(m)
}
func (m *XrpSpecific) XXX_DiscardUnknown() {
	xxx_messageInfo_XrpSpecific.DiscardUnknown(m)
}

var xxx_messageInfo_XrpSpecific proto.InternalMessageInfo

func (m *XrpSpecific) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *XrpSpecific) GetDestinationTag() uint32 {
	if m != nil {
		return m.DestinationTag
	}
	return 0
}

func (m *XrpSpecific) GetTxType() gincoincglobalv1.XRPTransactionType {
	if m != nil {
		return m.TxType
	}
	return gincoincglobalv1.XRPTransactionType_XRP_TRANSACTION_TYPE_INVALID
}

// The model of information about signing
type SignInfo struct {
	WalletId             string                `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string                `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	KeyId                string                `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	HdAccount            uint32                `protobuf:"varint,4,opt,name=hd_account,json=hdAccount,proto3" json:"hd_account,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,5,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                `protobuf:"bytes,6,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	SignIndex            uint32                `protobuf:"varint,11,opt,name=sign_index,json=signIndex,proto3" json:"sign_index,omitempty"`
	SignMessage          string                `protobuf:"bytes,7,opt,name=sign_message,json=signMessage,proto3" json:"sign_message,omitempty"`
	HdChange             uint32                `protobuf:"varint,8,opt,name=hd_change,json=hdChange,proto3" json:"hd_change,omitempty"`
	HdIndex              uint32                `protobuf:"varint,9,opt,name=hd_index,json=hdIndex,proto3" json:"hd_index,omitempty"`
	SignTxInputs         []*SignTxInput        `protobuf:"bytes,10,rep,name=sign_tx_inputs,json=signTxInputs,proto3" json:"sign_tx_inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SignInfo) Reset()         { *m = SignInfo{} }
func (m *SignInfo) String() string { return proto.CompactTextString(m) }
func (*SignInfo) ProtoMessage()    {}
func (*SignInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{16}
}

func (m *SignInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInfo.Unmarshal(m, b)
}
func (m *SignInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInfo.Marshal(b, m, deterministic)
}
func (m *SignInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInfo.Merge(m, src)
}
func (m *SignInfo) XXX_Size() int {
	return xxx_messageInfo_SignInfo.Size(m)
}
func (m *SignInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignInfo proto.InternalMessageInfo

func (m *SignInfo) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *SignInfo) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *SignInfo) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignInfo) GetHdAccount() uint32 {
	if m != nil {
		return m.HdAccount
	}
	return 0
}

func (m *SignInfo) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *SignInfo) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *SignInfo) GetSignIndex() uint32 {
	if m != nil {
		return m.SignIndex
	}
	return 0
}

func (m *SignInfo) GetSignMessage() string {
	if m != nil {
		return m.SignMessage
	}
	return ""
}

func (m *SignInfo) GetHdChange() uint32 {
	if m != nil {
		return m.HdChange
	}
	return 0
}

func (m *SignInfo) GetHdIndex() uint32 {
	if m != nil {
		return m.HdIndex
	}
	return 0
}

func (m *SignInfo) GetSignTxInputs() []*SignTxInput {
	if m != nil {
		return m.SignTxInputs
	}
	return nil
}

// The model of transaction input for signing
type SignTxInput struct {
	TxInputIndex         uint32   `protobuf:"varint,1,opt,name=tx_input_index,json=txInputIndex,proto3" json:"tx_input_index,omitempty"`
	SignMessage          string   `protobuf:"bytes,2,opt,name=sign_message,json=signMessage,proto3" json:"sign_message,omitempty"`
	HdChange             uint32   `protobuf:"varint,3,opt,name=hd_change,json=hdChange,proto3" json:"hd_change,omitempty"`
	HdIndex              uint32   `protobuf:"varint,4,opt,name=hd_index,json=hdIndex,proto3" json:"hd_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTxInput) Reset()         { *m = SignTxInput{} }
func (m *SignTxInput) String() string { return proto.CompactTextString(m) }
func (*SignTxInput) ProtoMessage()    {}
func (*SignTxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{17}
}

func (m *SignTxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxInput.Unmarshal(m, b)
}
func (m *SignTxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxInput.Marshal(b, m, deterministic)
}
func (m *SignTxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxInput.Merge(m, src)
}
func (m *SignTxInput) XXX_Size() int {
	return xxx_messageInfo_SignTxInput.Size(m)
}
func (m *SignTxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxInput.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxInput proto.InternalMessageInfo

func (m *SignTxInput) GetTxInputIndex() uint32 {
	if m != nil {
		return m.TxInputIndex
	}
	return 0
}

func (m *SignTxInput) GetSignMessage() string {
	if m != nil {
		return m.SignMessage
	}
	return ""
}

func (m *SignTxInput) GetHdChange() uint32 {
	if m != nil {
		return m.HdChange
	}
	return 0
}

func (m *SignTxInput) GetHdIndex() uint32 {
	if m != nil {
		return m.HdIndex
	}
	return 0
}

// The model of transfer
type Transfer struct {
	WalletId             string                             `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransferId           string                             `protobuf:"bytes,2,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	Coin                 gincoincglobalv1.Coin              `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                             `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TransferType         gincoincglobalv1.TransferType      `protobuf:"varint,5,opt,name=transfer_type,json=transferType,proto3,enum=gincoinc.global.v1.TransferType" json:"transfer_type,omitempty"`
	Value                float64                            `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string                             `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	JpyRate              float64                            `protobuf:"fixed64,9,opt,name=jpy_rate,json=jpyRate,proto3" json:"jpy_rate,omitempty"`
	PartnerWalletId      string                             `protobuf:"bytes,10,opt,name=partner_wallet_id,json=partnerWalletId,proto3" json:"partner_wallet_id,omitempty"`
	PartnerAddress       string                             `protobuf:"bytes,11,opt,name=partner_address,json=partnerAddress,proto3" json:"partner_address,omitempty"`
	DestinationTag       uint32                             `protobuf:"varint,15,opt,name=destination_tag,json=destinationTag,proto3" json:"destination_tag,omitempty"`
	State                gincoincglobalv1.TransactionState  `protobuf:"varint,12,opt,name=state,proto3,enum=gincoinc.global.v1.TransactionState" json:"state,omitempty"`
	Result               gincoincglobalv1.TransactionResult `protobuf:"varint,16,opt,name=result,proto3,enum=gincoinc.global.v1.TransactionResult" json:"result,omitempty"`
	CreateTime           *timestamp.Timestamp               `protobuf:"bytes,13,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp               `protobuf:"bytes,14,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{18}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Transfer) GetTransferId() string {
	if m != nil {
		return m.TransferId
	}
	return ""
}

func (m *Transfer) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Transfer) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Transfer) GetTransferType() gincoincglobalv1.TransferType {
	if m != nil {
		return m.TransferType
	}
	return gincoincglobalv1.TransferType_TRANSFER_TYPE_INVALID
}

func (m *Transfer) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transfer) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Transfer) GetJpyRate() float64 {
	if m != nil {
		return m.JpyRate
	}
	return 0
}

func (m *Transfer) GetPartnerWalletId() string {
	if m != nil {
		return m.PartnerWalletId
	}
	return ""
}

func (m *Transfer) GetPartnerAddress() string {
	if m != nil {
		return m.PartnerAddress
	}
	return ""
}

func (m *Transfer) GetDestinationTag() uint32 {
	if m != nil {
		return m.DestinationTag
	}
	return 0
}

func (m *Transfer) GetState() gincoincglobalv1.TransactionState {
	if m != nil {
		return m.State
	}
	return gincoincglobalv1.TransactionState_TRANSACTION_STATE_INVALID
}

func (m *Transfer) GetResult() gincoincglobalv1.TransactionResult {
	if m != nil {
		return m.Result
	}
	return gincoincglobalv1.TransactionResult_TRANSACTION_RESULT_INVALID
}

func (m *Transfer) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Transfer) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of fiat rate
type Rate struct {
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,1,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Jpy                  float64               `protobuf:"fixed64,2,opt,name=jpy,proto3" json:"jpy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Rate) Reset()         { *m = Rate{} }
func (m *Rate) String() string { return proto.CompactTextString(m) }
func (*Rate) ProtoMessage()    {}
func (*Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{19}
}

func (m *Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rate.Unmarshal(m, b)
}
func (m *Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rate.Marshal(b, m, deterministic)
}
func (m *Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rate.Merge(m, src)
}
func (m *Rate) XXX_Size() int {
	return xxx_messageInfo_Rate.Size(m)
}
func (m *Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_Rate proto.InternalMessageInfo

func (m *Rate) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Rate) GetJpy() float64 {
	if m != nil {
		return m.Jpy
	}
	return 0
}

// The model of rate snapshot. the snapshot contains a set of rates
type RateSnapshot struct {
	RateSnapshotId       string           `protobuf:"bytes,1,opt,name=rate_snapshot_id,json=rateSnapshotId,proto3" json:"rate_snapshot_id,omitempty"`
	Rates                map[uint32]*Rate `protobuf:"bytes,2,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RateSnapshot) Reset()         { *m = RateSnapshot{} }
func (m *RateSnapshot) String() string { return proto.CompactTextString(m) }
func (*RateSnapshot) ProtoMessage()    {}
func (*RateSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{20}
}

func (m *RateSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateSnapshot.Unmarshal(m, b)
}
func (m *RateSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateSnapshot.Marshal(b, m, deterministic)
}
func (m *RateSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateSnapshot.Merge(m, src)
}
func (m *RateSnapshot) XXX_Size() int {
	return xxx_messageInfo_RateSnapshot.Size(m)
}
func (m *RateSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_RateSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_RateSnapshot proto.InternalMessageInfo

func (m *RateSnapshot) GetRateSnapshotId() string {
	if m != nil {
		return m.RateSnapshotId
	}
	return ""
}

func (m *RateSnapshot) GetRates() map[uint32]*Rate {
	if m != nil {
		return m.Rates
	}
	return nil
}

// The model which indicates corresponding account is deactivatable
type Deactivatability struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Deactivatable        bool     `protobuf:"varint,2,opt,name=deactivatable,proto3" json:"deactivatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deactivatability) Reset()         { *m = Deactivatability{} }
func (m *Deactivatability) String() string { return proto.CompactTextString(m) }
func (*Deactivatability) ProtoMessage()    {}
func (*Deactivatability) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{21}
}

func (m *Deactivatability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deactivatability.Unmarshal(m, b)
}
func (m *Deactivatability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deactivatability.Marshal(b, m, deterministic)
}
func (m *Deactivatability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deactivatability.Merge(m, src)
}
func (m *Deactivatability) XXX_Size() int {
	return xxx_messageInfo_Deactivatability.Size(m)
}
func (m *Deactivatability) XXX_DiscardUnknown() {
	xxx_messageInfo_Deactivatability.DiscardUnknown(m)
}

var xxx_messageInfo_Deactivatability proto.InternalMessageInfo

func (m *Deactivatability) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Deactivatability) GetDeactivatable() bool {
	if m != nil {
		return m.Deactivatable
	}
	return false
}

// The model of labeled address. labeled address is the address which is used to construct whitelist
type LabeledAddress struct {
	LabeledAddressId     string                  `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin   `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                  `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Proposal             *LabeledAddressProposal `protobuf:"bytes,5,opt,name=proposal,proto3" json:"proposal,omitempty"`
	IsDeletable          bool                    `protobuf:"varint,6,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	CreateTime           *timestamp.Timestamp    `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp    `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *LabeledAddress) Reset()         { *m = LabeledAddress{} }
func (m *LabeledAddress) String() string { return proto.CompactTextString(m) }
func (*LabeledAddress) ProtoMessage()    {}
func (*LabeledAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{22}
}

func (m *LabeledAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledAddress.Unmarshal(m, b)
}
func (m *LabeledAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledAddress.Marshal(b, m, deterministic)
}
func (m *LabeledAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledAddress.Merge(m, src)
}
func (m *LabeledAddress) XXX_Size() int {
	return xxx_messageInfo_LabeledAddress.Size(m)
}
func (m *LabeledAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledAddress.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledAddress proto.InternalMessageInfo

func (m *LabeledAddress) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

func (m *LabeledAddress) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LabeledAddress) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *LabeledAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *LabeledAddress) GetProposal() *LabeledAddressProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *LabeledAddress) GetIsDeletable() bool {
	if m != nil {
		return m.IsDeletable
	}
	return false
}

func (m *LabeledAddress) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LabeledAddress) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of proposal to update labeled address information
type LabeledAddressProposal struct {
	RequesterAccountId   string   `protobuf:"bytes,1,opt,name=requester_account_id,json=requesterAccountId,proto3" json:"requester_account_id,omitempty"`
	RequesterName        string   `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	ApproverAccountId    string   `protobuf:"bytes,3,opt,name=approver_account_id,json=approverAccountId,proto3" json:"approver_account_id,omitempty"`
	ApproverName         string   `protobuf:"bytes,4,opt,name=approver_name,json=approverName,proto3" json:"approver_name,omitempty"`
	ProposedAddress      string   `protobuf:"bytes,5,opt,name=proposed_address,json=proposedAddress,proto3" json:"proposed_address,omitempty"`
	AddressIsReviewed    bool     `protobuf:"varint,6,opt,name=address_is_reviewed,json=addressIsReviewed,proto3" json:"address_is_reviewed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabeledAddressProposal) Reset()         { *m = LabeledAddressProposal{} }
func (m *LabeledAddressProposal) String() string { return proto.CompactTextString(m) }
func (*LabeledAddressProposal) ProtoMessage()    {}
func (*LabeledAddressProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{23}
}

func (m *LabeledAddressProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledAddressProposal.Unmarshal(m, b)
}
func (m *LabeledAddressProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledAddressProposal.Marshal(b, m, deterministic)
}
func (m *LabeledAddressProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledAddressProposal.Merge(m, src)
}
func (m *LabeledAddressProposal) XXX_Size() int {
	return xxx_messageInfo_LabeledAddressProposal.Size(m)
}
func (m *LabeledAddressProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledAddressProposal.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledAddressProposal proto.InternalMessageInfo

func (m *LabeledAddressProposal) GetRequesterAccountId() string {
	if m != nil {
		return m.RequesterAccountId
	}
	return ""
}

func (m *LabeledAddressProposal) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *LabeledAddressProposal) GetApproverAccountId() string {
	if m != nil {
		return m.ApproverAccountId
	}
	return ""
}

func (m *LabeledAddressProposal) GetApproverName() string {
	if m != nil {
		return m.ApproverName
	}
	return ""
}

func (m *LabeledAddressProposal) GetProposedAddress() string {
	if m != nil {
		return m.ProposedAddress
	}
	return ""
}

func (m *LabeledAddressProposal) GetAddressIsReviewed() bool {
	if m != nil {
		return m.AddressIsReviewed
	}
	return false
}

// The model of whitelist
type Whitelist struct {
	WhitelistId          string                `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Addresses            []*LabeledAddress     `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	IsDeletable          bool                  `protobuf:"varint,5,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Whitelist) Reset()         { *m = Whitelist{} }
func (m *Whitelist) String() string { return proto.CompactTextString(m) }
func (*Whitelist) ProtoMessage()    {}
func (*Whitelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{24}
}

func (m *Whitelist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Whitelist.Unmarshal(m, b)
}
func (m *Whitelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Whitelist.Marshal(b, m, deterministic)
}
func (m *Whitelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Whitelist.Merge(m, src)
}
func (m *Whitelist) XXX_Size() int {
	return xxx_messageInfo_Whitelist.Size(m)
}
func (m *Whitelist) XXX_DiscardUnknown() {
	xxx_messageInfo_Whitelist.DiscardUnknown(m)
}

var xxx_messageInfo_Whitelist proto.InternalMessageInfo

func (m *Whitelist) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *Whitelist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Whitelist) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Whitelist) GetAddresses() []*LabeledAddress {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *Whitelist) GetIsDeletable() bool {
	if m != nil {
		return m.IsDeletable
	}
	return false
}

func (m *Whitelist) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Whitelist) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of transfer limit
type TransferLimit struct {
	TransferLimitId      string                 `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin  `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	HourlyLimit          int64                  `protobuf:"varint,4,opt,name=hourly_limit,json=hourlyLimit,proto3" json:"hourly_limit,omitempty"`
	DailyLimit           int64                  `protobuf:"varint,5,opt,name=daily_limit,json=dailyLimit,proto3" json:"daily_limit,omitempty"`
	OneTimeLimit         int64                  `protobuf:"varint,6,opt,name=one_time_limit,json=oneTimeLimit,proto3" json:"one_time_limit,omitempty"`
	Proposal             *TransferLimitProposal `protobuf:"bytes,7,opt,name=proposal,proto3" json:"proposal,omitempty"`
	IsReviewed           bool                   `protobuf:"varint,8,opt,name=is_reviewed,json=isReviewed,proto3" json:"is_reviewed,omitempty"`
	IsDeletable          bool                   `protobuf:"varint,9,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	CreateTime           *timestamp.Timestamp   `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransferLimit) Reset()         { *m = TransferLimit{} }
func (m *TransferLimit) String() string { return proto.CompactTextString(m) }
func (*TransferLimit) ProtoMessage()    {}
func (*TransferLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{25}
}

func (m *TransferLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLimit.Unmarshal(m, b)
}
func (m *TransferLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLimit.Marshal(b, m, deterministic)
}
func (m *TransferLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLimit.Merge(m, src)
}
func (m *TransferLimit) XXX_Size() int {
	return xxx_messageInfo_TransferLimit.Size(m)
}
func (m *TransferLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLimit.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLimit proto.InternalMessageInfo

func (m *TransferLimit) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *TransferLimit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransferLimit) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *TransferLimit) GetHourlyLimit() int64 {
	if m != nil {
		return m.HourlyLimit
	}
	return 0
}

func (m *TransferLimit) GetDailyLimit() int64 {
	if m != nil {
		return m.DailyLimit
	}
	return 0
}

func (m *TransferLimit) GetOneTimeLimit() int64 {
	if m != nil {
		return m.OneTimeLimit
	}
	return 0
}

func (m *TransferLimit) GetProposal() *TransferLimitProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *TransferLimit) GetIsReviewed() bool {
	if m != nil {
		return m.IsReviewed
	}
	return false
}

func (m *TransferLimit) GetIsDeletable() bool {
	if m != nil {
		return m.IsDeletable
	}
	return false
}

func (m *TransferLimit) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TransferLimit) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of proposal to update transfer limit information
type TransferLimitProposal struct {
	RequesterAccountId   string   `protobuf:"bytes,1,opt,name=requester_account_id,json=requesterAccountId,proto3" json:"requester_account_id,omitempty"`
	RequesterName        string   `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	ApproverAccountId    string   `protobuf:"bytes,3,opt,name=approver_account_id,json=approverAccountId,proto3" json:"approver_account_id,omitempty"`
	ApproverName         string   `protobuf:"bytes,4,opt,name=approver_name,json=approverName,proto3" json:"approver_name,omitempty"`
	ProposedHourlyLimit  int64    `protobuf:"varint,5,opt,name=proposed_hourly_limit,json=proposedHourlyLimit,proto3" json:"proposed_hourly_limit,omitempty"`
	ProposedDailyLimit   int64    `protobuf:"varint,6,opt,name=proposed_daily_limit,json=proposedDailyLimit,proto3" json:"proposed_daily_limit,omitempty"`
	ProposedOneTimeLimit int64    `protobuf:"varint,7,opt,name=proposed_one_time_limit,json=proposedOneTimeLimit,proto3" json:"proposed_one_time_limit,omitempty"`
	IsReviewed           bool     `protobuf:"varint,8,opt,name=is_reviewed,json=isReviewed,proto3" json:"is_reviewed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLimitProposal) Reset()         { *m = TransferLimitProposal{} }
func (m *TransferLimitProposal) String() string { return proto.CompactTextString(m) }
func (*TransferLimitProposal) ProtoMessage()    {}
func (*TransferLimitProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{26}
}

func (m *TransferLimitProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLimitProposal.Unmarshal(m, b)
}
func (m *TransferLimitProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLimitProposal.Marshal(b, m, deterministic)
}
func (m *TransferLimitProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLimitProposal.Merge(m, src)
}
func (m *TransferLimitProposal) XXX_Size() int {
	return xxx_messageInfo_TransferLimitProposal.Size(m)
}
func (m *TransferLimitProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLimitProposal.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLimitProposal proto.InternalMessageInfo

func (m *TransferLimitProposal) GetRequesterAccountId() string {
	if m != nil {
		return m.RequesterAccountId
	}
	return ""
}

func (m *TransferLimitProposal) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *TransferLimitProposal) GetApproverAccountId() string {
	if m != nil {
		return m.ApproverAccountId
	}
	return ""
}

func (m *TransferLimitProposal) GetApproverName() string {
	if m != nil {
		return m.ApproverName
	}
	return ""
}

func (m *TransferLimitProposal) GetProposedHourlyLimit() int64 {
	if m != nil {
		return m.ProposedHourlyLimit
	}
	return 0
}

func (m *TransferLimitProposal) GetProposedDailyLimit() int64 {
	if m != nil {
		return m.ProposedDailyLimit
	}
	return 0
}

func (m *TransferLimitProposal) GetProposedOneTimeLimit() int64 {
	if m != nil {
		return m.ProposedOneTimeLimit
	}
	return 0
}

func (m *TransferLimitProposal) GetIsReviewed() bool {
	if m != nil {
		return m.IsReviewed
	}
	return false
}

// The model of policy
type Policy struct {
	PolicyId             string                `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyType           PolicyType            `protobuf:"varint,2,opt,name=policy_type,json=policyType,proto3,enum=adamant.global.v1.PolicyType" json:"policy_type,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	IsBasePolicy         bool                  `protobuf:"varint,4,opt,name=is_base_policy,json=isBasePolicy,proto3" json:"is_base_policy,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,5,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Whitelist            *Whitelist            `protobuf:"bytes,6,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
	TransferLimit        *TransferLimit        `protobuf:"bytes,7,opt,name=transfer_limit,json=transferLimit,proto3" json:"transfer_limit,omitempty"`
	IsDeletable          bool                  `protobuf:"varint,8,opt,name=is_deletable,json=isDeletable,proto3" json:"is_deletable,omitempty"`
	Proposal             *PolicyProposal       `protobuf:"bytes,11,opt,name=proposal,proto3" json:"proposal,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,9,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,10,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{27}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Policy) GetPolicyType() PolicyType {
	if m != nil {
		return m.PolicyType
	}
	return PolicyType_POLICY_TYPE_INVALID
}

func (m *Policy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Policy) GetIsBasePolicy() bool {
	if m != nil {
		return m.IsBasePolicy
	}
	return false
}

func (m *Policy) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Policy) GetWhitelist() *Whitelist {
	if m != nil {
		return m.Whitelist
	}
	return nil
}

func (m *Policy) GetTransferLimit() *TransferLimit {
	if m != nil {
		return m.TransferLimit
	}
	return nil
}

func (m *Policy) GetIsDeletable() bool {
	if m != nil {
		return m.IsDeletable
	}
	return false
}

func (m *Policy) GetProposal() *PolicyProposal {
	if m != nil {
		return m.Proposal
	}
	return nil
}

func (m *Policy) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Policy) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

// The model of proposal to update policy information
type PolicyProposal struct {
	RequesterAccountId   string     `protobuf:"bytes,1,opt,name=requester_account_id,json=requesterAccountId,proto3" json:"requester_account_id,omitempty"`
	RequesterName        string     `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	ApproverAccountId    string     `protobuf:"bytes,3,opt,name=approver_account_id,json=approverAccountId,proto3" json:"approver_account_id,omitempty"`
	ApproverName         string     `protobuf:"bytes,4,opt,name=approver_name,json=approverName,proto3" json:"approver_name,omitempty"`
	ProposedWhitelist    *Whitelist `protobuf:"bytes,5,opt,name=proposed_whitelist,json=proposedWhitelist,proto3" json:"proposed_whitelist,omitempty"`
	IsReviewed           bool       `protobuf:"varint,6,opt,name=is_reviewed,json=isReviewed,proto3" json:"is_reviewed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PolicyProposal) Reset()         { *m = PolicyProposal{} }
func (m *PolicyProposal) String() string { return proto.CompactTextString(m) }
func (*PolicyProposal) ProtoMessage()    {}
func (*PolicyProposal) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{28}
}

func (m *PolicyProposal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyProposal.Unmarshal(m, b)
}
func (m *PolicyProposal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyProposal.Marshal(b, m, deterministic)
}
func (m *PolicyProposal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyProposal.Merge(m, src)
}
func (m *PolicyProposal) XXX_Size() int {
	return xxx_messageInfo_PolicyProposal.Size(m)
}
func (m *PolicyProposal) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyProposal.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyProposal proto.InternalMessageInfo

func (m *PolicyProposal) GetRequesterAccountId() string {
	if m != nil {
		return m.RequesterAccountId
	}
	return ""
}

func (m *PolicyProposal) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *PolicyProposal) GetApproverAccountId() string {
	if m != nil {
		return m.ApproverAccountId
	}
	return ""
}

func (m *PolicyProposal) GetApproverName() string {
	if m != nil {
		return m.ApproverName
	}
	return ""
}

func (m *PolicyProposal) GetProposedWhitelist() *Whitelist {
	if m != nil {
		return m.ProposedWhitelist
	}
	return nil
}

func (m *PolicyProposal) GetIsReviewed() bool {
	if m != nil {
		return m.IsReviewed
	}
	return false
}

// The model of total balance by asset
type TotalBalanceByCoin struct {
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,1,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	ColdStringBalance    string                `protobuf:"bytes,2,opt,name=cold_string_balance,json=coldStringBalance,proto3" json:"cold_string_balance,omitempty"`
	HotStringBalance     string                `protobuf:"bytes,3,opt,name=hot_string_balance,json=hotStringBalance,proto3" json:"hot_string_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TotalBalanceByCoin) Reset()         { *m = TotalBalanceByCoin{} }
func (m *TotalBalanceByCoin) String() string { return proto.CompactTextString(m) }
func (*TotalBalanceByCoin) ProtoMessage()    {}
func (*TotalBalanceByCoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{29}
}

func (m *TotalBalanceByCoin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalBalanceByCoin.Unmarshal(m, b)
}
func (m *TotalBalanceByCoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalBalanceByCoin.Marshal(b, m, deterministic)
}
func (m *TotalBalanceByCoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalBalanceByCoin.Merge(m, src)
}
func (m *TotalBalanceByCoin) XXX_Size() int {
	return xxx_messageInfo_TotalBalanceByCoin.Size(m)
}
func (m *TotalBalanceByCoin) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalBalanceByCoin.DiscardUnknown(m)
}

var xxx_messageInfo_TotalBalanceByCoin proto.InternalMessageInfo

func (m *TotalBalanceByCoin) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *TotalBalanceByCoin) GetColdStringBalance() string {
	if m != nil {
		return m.ColdStringBalance
	}
	return ""
}

func (m *TotalBalanceByCoin) GetHotStringBalance() string {
	if m != nil {
		return m.HotStringBalance
	}
	return ""
}

// The model of total balace
type TotalBalance struct {
	TotalBalances        map[uint32]*TotalBalanceByCoin `protobuf:"bytes,1,rep,name=total_balances,json=totalBalances,proto3" json:"total_balances,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TotalBalance) Reset()         { *m = TotalBalance{} }
func (m *TotalBalance) String() string { return proto.CompactTextString(m) }
func (*TotalBalance) ProtoMessage()    {}
func (*TotalBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{30}
}

func (m *TotalBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TotalBalance.Unmarshal(m, b)
}
func (m *TotalBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TotalBalance.Marshal(b, m, deterministic)
}
func (m *TotalBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TotalBalance.Merge(m, src)
}
func (m *TotalBalance) XXX_Size() int {
	return xxx_messageInfo_TotalBalance.Size(m)
}
func (m *TotalBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_TotalBalance.DiscardUnknown(m)
}

var xxx_messageInfo_TotalBalance proto.InternalMessageInfo

func (m *TotalBalance) GetTotalBalances() map[uint32]*TotalBalanceByCoin {
	if m != nil {
		return m.TotalBalances
	}
	return nil
}

// The model of balance snapshot
type BalanceSnapshot struct {
	CreateTime           *timestamp.Timestamp           `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TotalBalances        map[uint32]*TotalBalanceByCoin `protobuf:"bytes,2,rep,name=total_balances,json=totalBalances,proto3" json:"total_balances,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rates                map[uint32]*Rate               `protobuf:"bytes,3,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *BalanceSnapshot) Reset()         { *m = BalanceSnapshot{} }
func (m *BalanceSnapshot) String() string { return proto.CompactTextString(m) }
func (*BalanceSnapshot) ProtoMessage()    {}
func (*BalanceSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{31}
}

func (m *BalanceSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BalanceSnapshot.Unmarshal(m, b)
}
func (m *BalanceSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BalanceSnapshot.Marshal(b, m, deterministic)
}
func (m *BalanceSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BalanceSnapshot.Merge(m, src)
}
func (m *BalanceSnapshot) XXX_Size() int {
	return xxx_messageInfo_BalanceSnapshot.Size(m)
}
func (m *BalanceSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_BalanceSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_BalanceSnapshot proto.InternalMessageInfo

func (m *BalanceSnapshot) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *BalanceSnapshot) GetTotalBalances() map[uint32]*TotalBalanceByCoin {
	if m != nil {
		return m.TotalBalances
	}
	return nil
}

func (m *BalanceSnapshot) GetRates() map[uint32]*Rate {
	if m != nil {
		return m.Rates
	}
	return nil
}

type WalletBalanceSnapshotMap struct {
	WalletBalanceSnapshotMap map[string]*ListWalletBalanceSnapshots `protobuf:"bytes,1,rep,name=wallet_balance_snapshot_map,json=walletBalanceSnapshotMap,proto3" json:"wallet_balance_snapshot_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral     struct{}                               `json:"-"`
	XXX_unrecognized         []byte                                 `json:"-"`
	XXX_sizecache            int32                                  `json:"-"`
}

func (m *WalletBalanceSnapshotMap) Reset()         { *m = WalletBalanceSnapshotMap{} }
func (m *WalletBalanceSnapshotMap) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceSnapshotMap) ProtoMessage()    {}
func (*WalletBalanceSnapshotMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{32}
}

func (m *WalletBalanceSnapshotMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceSnapshotMap.Unmarshal(m, b)
}
func (m *WalletBalanceSnapshotMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceSnapshotMap.Marshal(b, m, deterministic)
}
func (m *WalletBalanceSnapshotMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceSnapshotMap.Merge(m, src)
}
func (m *WalletBalanceSnapshotMap) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceSnapshotMap.Size(m)
}
func (m *WalletBalanceSnapshotMap) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceSnapshotMap.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceSnapshotMap proto.InternalMessageInfo

func (m *WalletBalanceSnapshotMap) GetWalletBalanceSnapshotMap() map[string]*ListWalletBalanceSnapshots {
	if m != nil {
		return m.WalletBalanceSnapshotMap
	}
	return nil
}

type ListWalletBalanceSnapshots struct {
	WalletBalanceSnapshots []*WalletBalanceSnapshot `protobuf:"bytes,1,rep,name=wallet_balance_snapshots,json=walletBalanceSnapshots,proto3" json:"wallet_balance_snapshots,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                 `json:"-"`
	XXX_unrecognized       []byte                   `json:"-"`
	XXX_sizecache          int32                    `json:"-"`
}

func (m *ListWalletBalanceSnapshots) Reset()         { *m = ListWalletBalanceSnapshots{} }
func (m *ListWalletBalanceSnapshots) String() string { return proto.CompactTextString(m) }
func (*ListWalletBalanceSnapshots) ProtoMessage()    {}
func (*ListWalletBalanceSnapshots) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{33}
}

func (m *ListWalletBalanceSnapshots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWalletBalanceSnapshots.Unmarshal(m, b)
}
func (m *ListWalletBalanceSnapshots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWalletBalanceSnapshots.Marshal(b, m, deterministic)
}
func (m *ListWalletBalanceSnapshots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWalletBalanceSnapshots.Merge(m, src)
}
func (m *ListWalletBalanceSnapshots) XXX_Size() int {
	return xxx_messageInfo_ListWalletBalanceSnapshots.Size(m)
}
func (m *ListWalletBalanceSnapshots) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWalletBalanceSnapshots.DiscardUnknown(m)
}

var xxx_messageInfo_ListWalletBalanceSnapshots proto.InternalMessageInfo

func (m *ListWalletBalanceSnapshots) GetWalletBalanceSnapshots() []*WalletBalanceSnapshot {
	if m != nil {
		return m.WalletBalanceSnapshots
	}
	return nil
}

// The model of wallet balance snapshot
type WalletBalanceSnapshot struct {
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	StringBalance        string               `protobuf:"bytes,2,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	Jpy                  float64              `protobuf:"fixed64,3,opt,name=jpy,proto3" json:"jpy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WalletBalanceSnapshot) Reset()         { *m = WalletBalanceSnapshot{} }
func (m *WalletBalanceSnapshot) String() string { return proto.CompactTextString(m) }
func (*WalletBalanceSnapshot) ProtoMessage()    {}
func (*WalletBalanceSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{34}
}

func (m *WalletBalanceSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletBalanceSnapshot.Unmarshal(m, b)
}
func (m *WalletBalanceSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletBalanceSnapshot.Marshal(b, m, deterministic)
}
func (m *WalletBalanceSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletBalanceSnapshot.Merge(m, src)
}
func (m *WalletBalanceSnapshot) XXX_Size() int {
	return xxx_messageInfo_WalletBalanceSnapshot.Size(m)
}
func (m *WalletBalanceSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletBalanceSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_WalletBalanceSnapshot proto.InternalMessageInfo

func (m *WalletBalanceSnapshot) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *WalletBalanceSnapshot) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

func (m *WalletBalanceSnapshot) GetJpy() float64 {
	if m != nil {
		return m.Jpy
	}
	return 0
}

type TransferVolumeSnapshots struct {
	TransferVolumeSnapshotByTransferType map[int32]*ListTransferVolumeSnapshots `protobuf:"bytes,1,rep,name=transfer_volume_snapshot_by_transfer_type,json=transferVolumeSnapshotByTransferType,proto3" json:"transfer_volume_snapshot_by_transfer_type,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral                 struct{}                               `json:"-"`
	XXX_unrecognized                     []byte                                 `json:"-"`
	XXX_sizecache                        int32                                  `json:"-"`
}

func (m *TransferVolumeSnapshots) Reset()         { *m = TransferVolumeSnapshots{} }
func (m *TransferVolumeSnapshots) String() string { return proto.CompactTextString(m) }
func (*TransferVolumeSnapshots) ProtoMessage()    {}
func (*TransferVolumeSnapshots) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{35}
}

func (m *TransferVolumeSnapshots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferVolumeSnapshots.Unmarshal(m, b)
}
func (m *TransferVolumeSnapshots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferVolumeSnapshots.Marshal(b, m, deterministic)
}
func (m *TransferVolumeSnapshots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferVolumeSnapshots.Merge(m, src)
}
func (m *TransferVolumeSnapshots) XXX_Size() int {
	return xxx_messageInfo_TransferVolumeSnapshots.Size(m)
}
func (m *TransferVolumeSnapshots) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferVolumeSnapshots.DiscardUnknown(m)
}

var xxx_messageInfo_TransferVolumeSnapshots proto.InternalMessageInfo

func (m *TransferVolumeSnapshots) GetTransferVolumeSnapshotByTransferType() map[int32]*ListTransferVolumeSnapshots {
	if m != nil {
		return m.TransferVolumeSnapshotByTransferType
	}
	return nil
}

type ListTransferVolumeSnapshots struct {
	TransferVolumeSnapshots []*TransferVolumeSnapshot `protobuf:"bytes,1,rep,name=transfer_volume_snapshots,json=transferVolumeSnapshots,proto3" json:"transfer_volume_snapshots,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *ListTransferVolumeSnapshots) Reset()         { *m = ListTransferVolumeSnapshots{} }
func (m *ListTransferVolumeSnapshots) String() string { return proto.CompactTextString(m) }
func (*ListTransferVolumeSnapshots) ProtoMessage()    {}
func (*ListTransferVolumeSnapshots) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{36}
}

func (m *ListTransferVolumeSnapshots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransferVolumeSnapshots.Unmarshal(m, b)
}
func (m *ListTransferVolumeSnapshots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransferVolumeSnapshots.Marshal(b, m, deterministic)
}
func (m *ListTransferVolumeSnapshots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransferVolumeSnapshots.Merge(m, src)
}
func (m *ListTransferVolumeSnapshots) XXX_Size() int {
	return xxx_messageInfo_ListTransferVolumeSnapshots.Size(m)
}
func (m *ListTransferVolumeSnapshots) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransferVolumeSnapshots.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransferVolumeSnapshots proto.InternalMessageInfo

func (m *ListTransferVolumeSnapshots) GetTransferVolumeSnapshots() []*TransferVolumeSnapshot {
	if m != nil {
		return m.TransferVolumeSnapshots
	}
	return nil
}

// The model of transfer volume snapshot
type TransferVolumeSnapshot struct {
	CreateTime           *timestamp.Timestamp      `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	TransferVolumeByCoin map[int32]*TransferVolume `protobuf:"bytes,2,rep,name=transfer_volume_by_coin,json=transferVolumeByCoin,proto3" json:"transfer_volume_by_coin,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rates                map[uint32]*Rate          `protobuf:"bytes,3,rep,name=rates,proto3" json:"rates,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *TransferVolumeSnapshot) Reset()         { *m = TransferVolumeSnapshot{} }
func (m *TransferVolumeSnapshot) String() string { return proto.CompactTextString(m) }
func (*TransferVolumeSnapshot) ProtoMessage()    {}
func (*TransferVolumeSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{37}
}

func (m *TransferVolumeSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferVolumeSnapshot.Unmarshal(m, b)
}
func (m *TransferVolumeSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferVolumeSnapshot.Marshal(b, m, deterministic)
}
func (m *TransferVolumeSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferVolumeSnapshot.Merge(m, src)
}
func (m *TransferVolumeSnapshot) XXX_Size() int {
	return xxx_messageInfo_TransferVolumeSnapshot.Size(m)
}
func (m *TransferVolumeSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferVolumeSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_TransferVolumeSnapshot proto.InternalMessageInfo

func (m *TransferVolumeSnapshot) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TransferVolumeSnapshot) GetTransferVolumeByCoin() map[int32]*TransferVolume {
	if m != nil {
		return m.TransferVolumeByCoin
	}
	return nil
}

func (m *TransferVolumeSnapshot) GetRates() map[uint32]*Rate {
	if m != nil {
		return m.Rates
	}
	return nil
}

type TransferVolume struct {
	Coin                 gincoincglobalv1.Coin         `protobuf:"varint,1,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	HotStringVolume      string                        `protobuf:"bytes,2,opt,name=hot_string_volume,json=hotStringVolume,proto3" json:"hot_string_volume,omitempty"`
	ColdStringVolume     string                        `protobuf:"bytes,3,opt,name=cold_string_volume,json=coldStringVolume,proto3" json:"cold_string_volume,omitempty"`
	HotNumber            int64                         `protobuf:"varint,4,opt,name=hot_number,json=hotNumber,proto3" json:"hot_number,omitempty"`
	ColdNumber           int64                         `protobuf:"varint,5,opt,name=cold_number,json=coldNumber,proto3" json:"cold_number,omitempty"`
	TransferType         gincoincglobalv1.TransferType `protobuf:"varint,6,opt,name=transfer_type,json=transferType,proto3,enum=gincoinc.global.v1.TransferType" json:"transfer_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TransferVolume) Reset()         { *m = TransferVolume{} }
func (m *TransferVolume) String() string { return proto.CompactTextString(m) }
func (*TransferVolume) ProtoMessage()    {}
func (*TransferVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{38}
}

func (m *TransferVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferVolume.Unmarshal(m, b)
}
func (m *TransferVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferVolume.Marshal(b, m, deterministic)
}
func (m *TransferVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferVolume.Merge(m, src)
}
func (m *TransferVolume) XXX_Size() int {
	return xxx_messageInfo_TransferVolume.Size(m)
}
func (m *TransferVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferVolume.DiscardUnknown(m)
}

var xxx_messageInfo_TransferVolume proto.InternalMessageInfo

func (m *TransferVolume) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *TransferVolume) GetHotStringVolume() string {
	if m != nil {
		return m.HotStringVolume
	}
	return ""
}

func (m *TransferVolume) GetColdStringVolume() string {
	if m != nil {
		return m.ColdStringVolume
	}
	return ""
}

func (m *TransferVolume) GetHotNumber() int64 {
	if m != nil {
		return m.HotNumber
	}
	return 0
}

func (m *TransferVolume) GetColdNumber() int64 {
	if m != nil {
		return m.ColdNumber
	}
	return 0
}

func (m *TransferVolume) GetTransferType() gincoincglobalv1.TransferType {
	if m != nil {
		return m.TransferType
	}
	return gincoincglobalv1.TransferType_TRANSFER_TYPE_INVALID
}

type WalletTransferVolumeSnapshots struct {
	WalletTransferVolumeSnapshotByWalletId map[string]*ListWalletTransferVolumeSnapshots `protobuf:"bytes,1,rep,name=wallet_transfer_volume_snapshot_by_wallet_id,json=walletTransferVolumeSnapshotByWalletId,proto3" json:"wallet_transfer_volume_snapshot_by_wallet_id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral                   struct{}                                      `json:"-"`
	XXX_unrecognized                       []byte                                        `json:"-"`
	XXX_sizecache                          int32                                         `json:"-"`
}

func (m *WalletTransferVolumeSnapshots) Reset()         { *m = WalletTransferVolumeSnapshots{} }
func (m *WalletTransferVolumeSnapshots) String() string { return proto.CompactTextString(m) }
func (*WalletTransferVolumeSnapshots) ProtoMessage()    {}
func (*WalletTransferVolumeSnapshots) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{39}
}

func (m *WalletTransferVolumeSnapshots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletTransferVolumeSnapshots.Unmarshal(m, b)
}
func (m *WalletTransferVolumeSnapshots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletTransferVolumeSnapshots.Marshal(b, m, deterministic)
}
func (m *WalletTransferVolumeSnapshots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletTransferVolumeSnapshots.Merge(m, src)
}
func (m *WalletTransferVolumeSnapshots) XXX_Size() int {
	return xxx_messageInfo_WalletTransferVolumeSnapshots.Size(m)
}
func (m *WalletTransferVolumeSnapshots) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletTransferVolumeSnapshots.DiscardUnknown(m)
}

var xxx_messageInfo_WalletTransferVolumeSnapshots proto.InternalMessageInfo

func (m *WalletTransferVolumeSnapshots) GetWalletTransferVolumeSnapshotByWalletId() map[string]*ListWalletTransferVolumeSnapshots {
	if m != nil {
		return m.WalletTransferVolumeSnapshotByWalletId
	}
	return nil
}

type ListWalletTransferVolumeSnapshots struct {
	WalletTransferVolumeSnapshots []*WalletTransferVolumeSnapshot `protobuf:"bytes,1,rep,name=wallet_transfer_volume_snapshots,json=walletTransferVolumeSnapshots,proto3" json:"wallet_transfer_volume_snapshots,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}                        `json:"-"`
	XXX_unrecognized              []byte                          `json:"-"`
	XXX_sizecache                 int32                           `json:"-"`
}

func (m *ListWalletTransferVolumeSnapshots) Reset()         { *m = ListWalletTransferVolumeSnapshots{} }
func (m *ListWalletTransferVolumeSnapshots) String() string { return proto.CompactTextString(m) }
func (*ListWalletTransferVolumeSnapshots) ProtoMessage()    {}
func (*ListWalletTransferVolumeSnapshots) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{40}
}

func (m *ListWalletTransferVolumeSnapshots) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWalletTransferVolumeSnapshots.Unmarshal(m, b)
}
func (m *ListWalletTransferVolumeSnapshots) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWalletTransferVolumeSnapshots.Marshal(b, m, deterministic)
}
func (m *ListWalletTransferVolumeSnapshots) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWalletTransferVolumeSnapshots.Merge(m, src)
}
func (m *ListWalletTransferVolumeSnapshots) XXX_Size() int {
	return xxx_messageInfo_ListWalletTransferVolumeSnapshots.Size(m)
}
func (m *ListWalletTransferVolumeSnapshots) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWalletTransferVolumeSnapshots.DiscardUnknown(m)
}

var xxx_messageInfo_ListWalletTransferVolumeSnapshots proto.InternalMessageInfo

func (m *ListWalletTransferVolumeSnapshots) GetWalletTransferVolumeSnapshots() []*WalletTransferVolumeSnapshot {
	if m != nil {
		return m.WalletTransferVolumeSnapshots
	}
	return nil
}

type WalletTransferVolumeSnapshot struct {
	CreateTime                         *timestamp.Timestamp            `protobuf:"bytes,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	WalletTransferVolumeByTransferType map[int32]*WalletTransferVolume `protobuf:"bytes,2,rep,name=wallet_transfer_volume_by_transfer_type,json=walletTransferVolumeByTransferType,proto3" json:"wallet_transfer_volume_by_transfer_type,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Rate                               *Rate                           `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral               struct{}                        `json:"-"`
	XXX_unrecognized                   []byte                          `json:"-"`
	XXX_sizecache                      int32                           `json:"-"`
}

func (m *WalletTransferVolumeSnapshot) Reset()         { *m = WalletTransferVolumeSnapshot{} }
func (m *WalletTransferVolumeSnapshot) String() string { return proto.CompactTextString(m) }
func (*WalletTransferVolumeSnapshot) ProtoMessage()    {}
func (*WalletTransferVolumeSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{41}
}

func (m *WalletTransferVolumeSnapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletTransferVolumeSnapshot.Unmarshal(m, b)
}
func (m *WalletTransferVolumeSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletTransferVolumeSnapshot.Marshal(b, m, deterministic)
}
func (m *WalletTransferVolumeSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletTransferVolumeSnapshot.Merge(m, src)
}
func (m *WalletTransferVolumeSnapshot) XXX_Size() int {
	return xxx_messageInfo_WalletTransferVolumeSnapshot.Size(m)
}
func (m *WalletTransferVolumeSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletTransferVolumeSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_WalletTransferVolumeSnapshot proto.InternalMessageInfo

func (m *WalletTransferVolumeSnapshot) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *WalletTransferVolumeSnapshot) GetWalletTransferVolumeByTransferType() map[int32]*WalletTransferVolume {
	if m != nil {
		return m.WalletTransferVolumeByTransferType
	}
	return nil
}

func (m *WalletTransferVolumeSnapshot) GetRate() *Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

type WalletTransferVolume struct {
	StringVolume         string                        `protobuf:"bytes,1,opt,name=string_volume,json=stringVolume,proto3" json:"string_volume,omitempty"`
	Number               int64                         `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	TransferType         gincoincglobalv1.TransferType `protobuf:"varint,3,opt,name=transfer_type,json=transferType,proto3,enum=gincoinc.global.v1.TransferType" json:"transfer_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *WalletTransferVolume) Reset()         { *m = WalletTransferVolume{} }
func (m *WalletTransferVolume) String() string { return proto.CompactTextString(m) }
func (*WalletTransferVolume) ProtoMessage()    {}
func (*WalletTransferVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{42}
}

func (m *WalletTransferVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletTransferVolume.Unmarshal(m, b)
}
func (m *WalletTransferVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletTransferVolume.Marshal(b, m, deterministic)
}
func (m *WalletTransferVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletTransferVolume.Merge(m, src)
}
func (m *WalletTransferVolume) XXX_Size() int {
	return xxx_messageInfo_WalletTransferVolume.Size(m)
}
func (m *WalletTransferVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletTransferVolume.DiscardUnknown(m)
}

var xxx_messageInfo_WalletTransferVolume proto.InternalMessageInfo

func (m *WalletTransferVolume) GetStringVolume() string {
	if m != nil {
		return m.StringVolume
	}
	return ""
}

func (m *WalletTransferVolume) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *WalletTransferVolume) GetTransferType() gincoincglobalv1.TransferType {
	if m != nil {
		return m.TransferType
	}
	return gincoincglobalv1.TransferType_TRANSFER_TYPE_INVALID
}

// The model of confirmation
type Confirmation struct {
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,1,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Confirmation         uint32                `protobuf:"varint,2,opt,name=confirmation,proto3" json:"confirmation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Confirmation) Reset()         { *m = Confirmation{} }
func (m *Confirmation) String() string { return proto.CompactTextString(m) }
func (*Confirmation) ProtoMessage()    {}
func (*Confirmation) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{43}
}

func (m *Confirmation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Confirmation.Unmarshal(m, b)
}
func (m *Confirmation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Confirmation.Marshal(b, m, deterministic)
}
func (m *Confirmation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Confirmation.Merge(m, src)
}
func (m *Confirmation) XXX_Size() int {
	return xxx_messageInfo_Confirmation.Size(m)
}
func (m *Confirmation) XXX_DiscardUnknown() {
	xxx_messageInfo_Confirmation.DiscardUnknown(m)
}

var xxx_messageInfo_Confirmation proto.InternalMessageInfo

func (m *Confirmation) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Confirmation) GetConfirmation() uint32 {
	if m != nil {
		return m.Confirmation
	}
	return 0
}

type RequestTxOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	StringValue          string   `protobuf:"bytes,2,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTxOutput) Reset()         { *m = RequestTxOutput{} }
func (m *RequestTxOutput) String() string { return proto.CompactTextString(m) }
func (*RequestTxOutput) ProtoMessage()    {}
func (*RequestTxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{44}
}

func (m *RequestTxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTxOutput.Unmarshal(m, b)
}
func (m *RequestTxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTxOutput.Marshal(b, m, deterministic)
}
func (m *RequestTxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTxOutput.Merge(m, src)
}
func (m *RequestTxOutput) XXX_Size() int {
	return xxx_messageInfo_RequestTxOutput.Size(m)
}
func (m *RequestTxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTxOutput proto.InternalMessageInfo

func (m *RequestTxOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RequestTxOutput) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

type RequestSignedInfo struct {
	Signatures           []*RequestSignature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *RequestSignedInfo) Reset()         { *m = RequestSignedInfo{} }
func (m *RequestSignedInfo) String() string { return proto.CompactTextString(m) }
func (*RequestSignedInfo) ProtoMessage()    {}
func (*RequestSignedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{45}
}

func (m *RequestSignedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSignedInfo.Unmarshal(m, b)
}
func (m *RequestSignedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSignedInfo.Marshal(b, m, deterministic)
}
func (m *RequestSignedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSignedInfo.Merge(m, src)
}
func (m *RequestSignedInfo) XXX_Size() int {
	return xxx_messageInfo_RequestSignedInfo.Size(m)
}
func (m *RequestSignedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSignedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSignedInfo proto.InternalMessageInfo

func (m *RequestSignedInfo) GetSignatures() []*RequestSignature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type RequestSignature struct {
	SignIndex            uint32   `protobuf:"varint,1,opt,name=sign_index,json=signIndex,proto3" json:"sign_index,omitempty"`
	Signature            string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestSignature) Reset()         { *m = RequestSignature{} }
func (m *RequestSignature) String() string { return proto.CompactTextString(m) }
func (*RequestSignature) ProtoMessage()    {}
func (*RequestSignature) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{46}
}

func (m *RequestSignature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestSignature.Unmarshal(m, b)
}
func (m *RequestSignature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestSignature.Marshal(b, m, deterministic)
}
func (m *RequestSignature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestSignature.Merge(m, src)
}
func (m *RequestSignature) XXX_Size() int {
	return xxx_messageInfo_RequestSignature.Size(m)
}
func (m *RequestSignature) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestSignature.DiscardUnknown(m)
}

var xxx_messageInfo_RequestSignature proto.InternalMessageInfo

func (m *RequestSignature) GetSignIndex() uint32 {
	if m != nil {
		return m.SignIndex
	}
	return 0
}

func (m *RequestSignature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type RequestTransferLimitEntry struct {
	TransferLimitType    TransferLimitType `protobuf:"varint,1,opt,name=transfer_limit_type,json=transferLimitType,proto3,enum=adamant.global.v1.TransferLimitType" json:"transfer_limit_type,omitempty"`
	TransferLimitValue   int64             `protobuf:"varint,2,opt,name=transfer_limit_value,json=transferLimitValue,proto3" json:"transfer_limit_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RequestTransferLimitEntry) Reset()         { *m = RequestTransferLimitEntry{} }
func (m *RequestTransferLimitEntry) String() string { return proto.CompactTextString(m) }
func (*RequestTransferLimitEntry) ProtoMessage()    {}
func (*RequestTransferLimitEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{47}
}

func (m *RequestTransferLimitEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTransferLimitEntry.Unmarshal(m, b)
}
func (m *RequestTransferLimitEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTransferLimitEntry.Marshal(b, m, deterministic)
}
func (m *RequestTransferLimitEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTransferLimitEntry.Merge(m, src)
}
func (m *RequestTransferLimitEntry) XXX_Size() int {
	return xxx_messageInfo_RequestTransferLimitEntry.Size(m)
}
func (m *RequestTransferLimitEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTransferLimitEntry.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTransferLimitEntry proto.InternalMessageInfo

func (m *RequestTransferLimitEntry) GetTransferLimitType() TransferLimitType {
	if m != nil {
		return m.TransferLimitType
	}
	return TransferLimitType_TRANSFER_LIMIT_TYPE_INVALID
}

func (m *RequestTransferLimitEntry) GetTransferLimitValue() int64 {
	if m != nil {
		return m.TransferLimitValue
	}
	return 0
}

type RequestRate struct {
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,1,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Jpy                  float64               `protobuf:"fixed64,2,opt,name=jpy,proto3" json:"jpy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RequestRate) Reset()         { *m = RequestRate{} }
func (m *RequestRate) String() string { return proto.CompactTextString(m) }
func (*RequestRate) ProtoMessage()    {}
func (*RequestRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{48}
}

func (m *RequestRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestRate.Unmarshal(m, b)
}
func (m *RequestRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestRate.Marshal(b, m, deterministic)
}
func (m *RequestRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestRate.Merge(m, src)
}
func (m *RequestRate) XXX_Size() int {
	return xxx_messageInfo_RequestRate.Size(m)
}
func (m *RequestRate) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestRate.DiscardUnknown(m)
}

var xxx_messageInfo_RequestRate proto.InternalMessageInfo

func (m *RequestRate) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *RequestRate) GetJpy() float64 {
	if m != nil {
		return m.Jpy
	}
	return 0
}

func init() {
	proto.RegisterType((*Wallet)(nil), "adamant.global.v1.Wallet")
	proto.RegisterType((*WalletWithoutBalance)(nil), "adamant.global.v1.WalletWithoutBalance")
	proto.RegisterType((*WalletProposal)(nil), "adamant.global.v1.WalletProposal")
	proto.RegisterType((*WalletMember)(nil), "adamant.global.v1.WalletMember")
	proto.RegisterType((*Key)(nil), "adamant.global.v1.Key")
	proto.RegisterType((*Address)(nil), "adamant.global.v1.Address")
	proto.RegisterType((*EthereumFeeAddress)(nil), "adamant.global.v1.EthereumFeeAddress")
	proto.RegisterType((*Transaction)(nil), "adamant.global.v1.Transaction")
	proto.RegisterType((*TransactionMember)(nil), "adamant.global.v1.TransactionMember")
	proto.RegisterType((*TxInput)(nil), "adamant.global.v1.TxInput")
	proto.RegisterType((*TxOutput)(nil), "adamant.global.v1.TxOutput")
	proto.RegisterType((*BitcoinSpecific)(nil), "adamant.global.v1.BitcoinSpecific")
	proto.RegisterType((*LitecoinSpecific)(nil), "adamant.global.v1.LitecoinSpecific")
	proto.RegisterType((*BitcoincashSpecific)(nil), "adamant.global.v1.BitcoincashSpecific")
	proto.RegisterType((*EthereumSpecific)(nil), "adamant.global.v1.EthereumSpecific")
	proto.RegisterType((*XrpSpecific)(nil), "adamant.global.v1.XrpSpecific")
	proto.RegisterType((*SignInfo)(nil), "adamant.global.v1.SignInfo")
	proto.RegisterType((*SignTxInput)(nil), "adamant.global.v1.SignTxInput")
	proto.RegisterType((*Transfer)(nil), "adamant.global.v1.Transfer")
	proto.RegisterType((*Rate)(nil), "adamant.global.v1.Rate")
	proto.RegisterType((*RateSnapshot)(nil), "adamant.global.v1.RateSnapshot")
	proto.RegisterMapType((map[uint32]*Rate)(nil), "adamant.global.v1.RateSnapshot.RatesEntry")
	proto.RegisterType((*Deactivatability)(nil), "adamant.global.v1.Deactivatability")
	proto.RegisterType((*LabeledAddress)(nil), "adamant.global.v1.LabeledAddress")
	proto.RegisterType((*LabeledAddressProposal)(nil), "adamant.global.v1.LabeledAddressProposal")
	proto.RegisterType((*Whitelist)(nil), "adamant.global.v1.Whitelist")
	proto.RegisterType((*TransferLimit)(nil), "adamant.global.v1.TransferLimit")
	proto.RegisterType((*TransferLimitProposal)(nil), "adamant.global.v1.TransferLimitProposal")
	proto.RegisterType((*Policy)(nil), "adamant.global.v1.Policy")
	proto.RegisterType((*PolicyProposal)(nil), "adamant.global.v1.PolicyProposal")
	proto.RegisterType((*TotalBalanceByCoin)(nil), "adamant.global.v1.TotalBalanceByCoin")
	proto.RegisterType((*TotalBalance)(nil), "adamant.global.v1.TotalBalance")
	proto.RegisterMapType((map[uint32]*TotalBalanceByCoin)(nil), "adamant.global.v1.TotalBalance.TotalBalancesEntry")
	proto.RegisterType((*BalanceSnapshot)(nil), "adamant.global.v1.BalanceSnapshot")
	proto.RegisterMapType((map[uint32]*Rate)(nil), "adamant.global.v1.BalanceSnapshot.RatesEntry")
	proto.RegisterMapType((map[uint32]*TotalBalanceByCoin)(nil), "adamant.global.v1.BalanceSnapshot.TotalBalancesEntry")
	proto.RegisterType((*WalletBalanceSnapshotMap)(nil), "adamant.global.v1.WalletBalanceSnapshotMap")
	proto.RegisterMapType((map[string]*ListWalletBalanceSnapshots)(nil), "adamant.global.v1.WalletBalanceSnapshotMap.WalletBalanceSnapshotMapEntry")
	proto.RegisterType((*ListWalletBalanceSnapshots)(nil), "adamant.global.v1.ListWalletBalanceSnapshots")
	proto.RegisterType((*WalletBalanceSnapshot)(nil), "adamant.global.v1.WalletBalanceSnapshot")
	proto.RegisterType((*TransferVolumeSnapshots)(nil), "adamant.global.v1.TransferVolumeSnapshots")
	proto.RegisterMapType((map[int32]*ListTransferVolumeSnapshots)(nil), "adamant.global.v1.TransferVolumeSnapshots.TransferVolumeSnapshotByTransferTypeEntry")
	proto.RegisterType((*ListTransferVolumeSnapshots)(nil), "adamant.global.v1.ListTransferVolumeSnapshots")
	proto.RegisterType((*TransferVolumeSnapshot)(nil), "adamant.global.v1.TransferVolumeSnapshot")
	proto.RegisterMapType((map[uint32]*Rate)(nil), "adamant.global.v1.TransferVolumeSnapshot.RatesEntry")
	proto.RegisterMapType((map[int32]*TransferVolume)(nil), "adamant.global.v1.TransferVolumeSnapshot.TransferVolumeByCoinEntry")
	proto.RegisterType((*TransferVolume)(nil), "adamant.global.v1.TransferVolume")
	proto.RegisterType((*WalletTransferVolumeSnapshots)(nil), "adamant.global.v1.WalletTransferVolumeSnapshots")
	proto.RegisterMapType((map[string]*ListWalletTransferVolumeSnapshots)(nil), "adamant.global.v1.WalletTransferVolumeSnapshots.WalletTransferVolumeSnapshotByWalletIdEntry")
	proto.RegisterType((*ListWalletTransferVolumeSnapshots)(nil), "adamant.global.v1.ListWalletTransferVolumeSnapshots")
	proto.RegisterType((*WalletTransferVolumeSnapshot)(nil), "adamant.global.v1.WalletTransferVolumeSnapshot")
	proto.RegisterMapType((map[int32]*WalletTransferVolume)(nil), "adamant.global.v1.WalletTransferVolumeSnapshot.WalletTransferVolumeByTransferTypeEntry")
	proto.RegisterType((*WalletTransferVolume)(nil), "adamant.global.v1.WalletTransferVolume")
	proto.RegisterType((*Confirmation)(nil), "adamant.global.v1.Confirmation")
	proto.RegisterType((*RequestTxOutput)(nil), "adamant.global.v1.RequestTxOutput")
	proto.RegisterType((*RequestSignedInfo)(nil), "adamant.global.v1.RequestSignedInfo")
	proto.RegisterType((*RequestSignature)(nil), "adamant.global.v1.RequestSignature")
	proto.RegisterType((*RequestTransferLimitEntry)(nil), "adamant.global.v1.RequestTransferLimitEntry")
	proto.RegisterType((*RequestRate)(nil), "adamant.global.v1.RequestRate")
}

func init() {
	proto.RegisterFile("gincoinc/adamant/global/v1/adamantglobalv1/model.proto", fileDescriptor_370ec8378ff93ffa)
}

var fileDescriptor_370ec8378ff93ffa = []byte{
	// 3485 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5b, 0xcd, 0x6f, 0x1b, 0xc7,
	0x15, 0xcf, 0x72, 0xf9, 0xf9, 0x96, 0xa4, 0xc8, 0x95, 0x64, 0xd1, 0x72, 0x54, 0xcb, 0x1b, 0x3b,
	0x96, 0x1d, 0x47, 0x4a, 0xd4, 0x38, 0x1f, 0x0e, 0xf2, 0x61, 0xda, 0x4e, 0xaa, 0x38, 0x4e, 0xdc,
	0xb5, 0x60, 0xa7, 0x45, 0x01, 0x66, 0xc5, 0x1d, 0x91, 0x6b, 0x2f, 0x77, 0xd9, 0xdd, 0xa5, 0x24,
	0xe6, 0x50, 0x14, 0x6d, 0x91, 0x00, 0x05, 0xd2, 0x02, 0xb9, 0x35, 0x40, 0xd1, 0xf4, 0xd2, 0x4b,
	0x83, 0x5e, 0x93, 0x6b, 0x81, 0x1e, 0xdb, 0x1c, 0x0b, 0x14, 0x68, 0xaf, 0xbd, 0xf4, 0x1f, 0x28,
	0x7c, 0x28, 0x8a, 0xf9, 0xda, 0x9d, 0x5d, 0x2e, 0x49, 0xd1, 0x72, 0x12, 0xd8, 0x17, 0x73, 0xde,
	0xbc, 0x79, 0x33, 0xf3, 0xe6, 0xf7, 0xde, 0xbc, 0x79, 0x6f, 0x05, 0xcf, 0x77, 0x2c, 0xa7, 0xed,
	0x5a, 0x4e, 0x7b, 0xc3, 0x30, 0x8d, 0x9e, 0xe1, 0x04, 0x1b, 0x1d, 0xdb, 0xdd, 0x31, 0xec, 0x8d,
	0xbd, 0x67, 0x39, 0x85, 0x12, 0xf6, 0x9e, 0xdd, 0xe8, 0xb9, 0x26, 0xb2, 0xd7, 0xfb, 0x9e, 0x1b,
	0xb8, 0x6a, 0x9d, 0x75, 0xae, 0xd3, 0xde, 0xf5, 0xbd, 0x67, 0x97, 0x4f, 0x76, 0x5c, 0xb7, 0x63,
	0xa3, 0x0d, 0xc2, 0xb0, 0x33, 0xd8, 0xdd, 0x08, 0xac, 0x1e, 0xf2, 0x03, 0xa3, 0xd7, 0xa7, 0x63,
	0x96, 0x97, 0xf6, 0x0c, 0xdb, 0x32, 0x8d, 0x00, 0x6d, 0xf0, 0x1f, 0xac, 0x63, 0x3d, 0x5c, 0x44,
	0x34, 0x39, 0x27, 0x85, 0xb3, 0x23, 0x67, 0xd0, 0x63, 0xfc, 0x17, 0x67, 0x58, 0x74, 0x34, 0x4c,
	0xfb, 0x43, 0x01, 0xf2, 0x77, 0x0c, 0xdb, 0x46, 0x81, 0x7a, 0x02, 0x4a, 0xfb, 0xe4, 0x57, 0xcb,
	0x32, 0x1b, 0xd2, 0xaa, 0xb4, 0x56, 0xd2, 0x8b, 0x94, 0xb0, 0x65, 0xaa, 0x2a, 0x64, 0x1d, 0xa3,
	0x87, 0x1a, 0x19, 0x42, 0x27, 0xbf, 0xd5, 0x0b, 0x90, 0xc5, 0x33, 0x36, 0xe4, 0x55, 0x69, 0xad,
	0xba, 0xd9, 0x08, 0x57, 0x1c, 0xed, 0x7f, 0xfd, 0x8a, 0x6b, 0x39, 0x3a, 0xe1, 0x52, 0x57, 0x00,
	0xba, 0x66, 0xcb, 0x68, 0xb7, 0xdd, 0x81, 0x13, 0x34, 0xea, 0xab, 0xd2, 0x5a, 0x45, 0x2f, 0x75,
	0xcd, 0xcb, 0x94, 0xa0, 0xbe, 0x0a, 0x0a, 0x9b, 0x3d, 0x18, 0xf6, 0x51, 0x23, 0x4b, 0x64, 0xae,
	0xac, 0x8f, 0xa8, 0x74, 0x9d, 0xae, 0x76, 0x7b, 0xd8, 0x47, 0x3a, 0xec, 0x87, 0xbf, 0xd5, 0x26,
	0x94, 0x0d, 0xd3, 0xf4, 0x90, 0xef, 0x53, 0x01, 0x39, 0x22, 0xe0, 0x64, 0xda, 0xa2, 0x2e, 0x53,
	0x3e, 0x22, 0x42, 0x31, 0xa2, 0x86, 0x5a, 0x06, 0xa9, 0xd7, 0xc8, 0x93, 0x95, 0x49, 0x3d, 0xdc,
	0x72, 0x1a, 0x05, 0xda, 0x72, 0xd4, 0xe7, 0x20, 0xe7, 0x07, 0x46, 0x80, 0x1a, 0x45, 0x22, 0xf8,
	0x3b, 0x63, 0x57, 0x76, 0x0b, 0x73, 0xe9, 0x94, 0x59, 0x3d, 0x0f, 0xd9, 0x7b, 0x68, 0xe8, 0x37,
	0x4a, 0xab, 0xf2, 0x9a, 0xb2, 0x79, 0x2c, 0x65, 0xd0, 0x75, 0x34, 0xd4, 0x09, 0x8f, 0xfa, 0x12,
	0x14, 0x7a, 0xa8, 0xb7, 0x83, 0x3c, 0xbf, 0x01, 0x84, 0xfd, 0xe4, 0xd8, 0x39, 0x6e, 0x10, 0x3e,
	0x9d, 0xf3, 0xab, 0xcf, 0xc3, 0x92, 0x87, 0x7e, 0x3c, 0xb0, 0x3c, 0x64, 0xb6, 0x8c, 0x7e, 0xdf,
	0x73, 0xf7, 0x0c, 0xbb, 0x45, 0x15, 0xbd, 0x40, 0x36, 0xb0, 0xc8, 0xbb, 0x2f, 0xb3, 0xde, 0x2b,
	0x44, 0xe9, 0x0d, 0x28, 0xec, 0x18, 0xb6, 0xe1, 0xb4, 0x51, 0x43, 0x59, 0x95, 0xd6, 0x24, 0x9d,
	0x37, 0xd5, 0x33, 0x50, 0xf5, 0x03, 0xcf, 0x72, 0x3a, 0x2d, 0xce, 0x50, 0x26, 0x27, 0x5f, 0xa1,
	0xd4, 0x26, 0x63, 0x6b, 0x40, 0x81, 0x29, 0xb0, 0x51, 0x21, 0xfd, 0xbc, 0x89, 0xd1, 0xd4, 0x77,
	0x6d, 0xab, 0x3d, 0xc4, 0x68, 0xaa, 0x52, 0x34, 0x51, 0xc2, 0x96, 0xa9, 0xbe, 0x02, 0xc5, 0xbe,
	0xe7, 0xf6, 0x5d, 0xdf, 0xb0, 0x1b, 0xea, 0xaa, 0xb4, 0xa6, 0x6c, 0x9e, 0x1a, 0xbb, 0xd7, 0x9b,
	0x8c, 0x51, 0x0f, 0x87, 0xa8, 0x9b, 0xb0, 0x68, 0x22, 0x3f, 0xb0, 0x1c, 0x23, 0xb0, 0x5c, 0xa7,
	0x15, 0xa1, 0x76, 0x9e, 0xcc, 0x33, 0x2f, 0x74, 0xde, 0xe1, 0x00, 0x5e, 0x01, 0xd8, 0x37, 0x82,
	0x76, 0xb7, 0xe5, 0x3a, 0xf6, 0xb0, 0xb1, 0xb8, 0x2a, 0xad, 0x15, 0xf5, 0x12, 0xa1, 0xbc, 0xeb,
	0xd8, 0x43, 0xbc, 0x5f, 0x0e, 0x1f, 0x67, 0x80, 0x95, 0xda, 0x38, 0x46, 0x14, 0x57, 0x61, 0xd4,
	0x77, 0x08, 0x51, 0x7d, 0x19, 0x94, 0xb6, 0x87, 0x8c, 0x00, 0xb5, 0xb0, 0x21, 0x37, 0xe6, 0xc8,
	0xda, 0x97, 0xd7, 0xa9, 0x95, 0xaf, 0x73, 0x2b, 0x5f, 0xdf, 0xe6, 0x56, 0xae, 0x03, 0x65, 0xc7,
	0x04, 0x3c, 0x78, 0xd0, 0x37, 0xc3, 0xc1, 0xb5, 0xe9, 0x83, 0x29, 0x3b, 0x26, 0x68, 0x7f, 0xcd,
	0xc3, 0x02, 0xdd, 0xcc, 0x1d, 0x2b, 0xe8, 0xba, 0x83, 0x80, 0x1f, 0xc1, 0x37, 0x6a, 0xb6, 0xd9,
	0x29, 0x66, 0x9b, 0x3b, 0xaa, 0xd9, 0xe6, 0x1f, 0xd4, 0x6c, 0x0b, 0x31, 0xb3, 0x2d, 0x8e, 0x98,
	0x6d, 0xe9, 0x41, 0xcc, 0x16, 0x66, 0x33, 0x5b, 0xe5, 0xe1, 0x99, 0x6d, 0x79, 0x8a, 0xd9, 0x1e,
	0xd5, 0xea, 0xe6, 0x1e, 0xa2, 0xd5, 0xd5, 0x0e, 0x6b, 0x75, 0xf3, 0x49, 0xab, 0x4b, 0x98, 0x53,
	0xfd, 0x28, 0xe6, 0xa4, 0xce, 0x64, 0x4e, 0x5f, 0xc9, 0x50, 0x8d, 0xef, 0x54, 0x7d, 0x0b, 0x2a,
	0x7c, 0xaf, 0x14, 0x8b, 0x05, 0x02, 0x99, 0x33, 0x53, 0x75, 0x44, 0x10, 0x59, 0xee, 0x0b, 0x2d,
	0xf5, 0x19, 0x58, 0xc0, 0x47, 0x87, 0xfc, 0x00, 0x79, 0xdc, 0x78, 0x22, 0xfb, 0x54, 0xc3, 0x3e,
	0x66, 0x46, 0x5b, 0x26, 0x76, 0x40, 0xd1, 0x08, 0xc1, 0x66, 0x2b, 0x21, 0xf5, 0x1d, 0x6c, 0xbc,
	0xeb, 0x30, 0x4f, 0x91, 0x12, 0x97, 0x2b, 0x13, 0xde, 0x3a, 0xef, 0x8a, 0xc4, 0x3e, 0x01, 0x95,
	0x90, 0x9f, 0x48, 0xcd, 0x12, 0xce, 0x32, 0x27, 0x12, 0xa1, 0x67, 0x61, 0x8e, 0xae, 0x1e, 0x99,
	0x2d, 0x8a, 0x16, 0x62, 0xc8, 0x25, 0xbd, 0xca, 0xc9, 0x37, 0x09, 0x55, 0xdd, 0x80, 0xf9, 0x90,
	0x91, 0xc5, 0x2b, 0xae, 0xe7, 0x37, 0x8a, 0xab, 0x32, 0xde, 0x15, 0xef, 0xba, 0x1d, 0xf6, 0xa8,
	0x6f, 0xc2, 0x6a, 0x38, 0x60, 0x1c, 0xd4, 0x4b, 0x04, 0xea, 0x2b, 0x9c, 0x4f, 0x4f, 0x85, 0xfc,
	0x49, 0x50, 0x2c, 0xbf, 0xe5, 0xa1, 0x3d, 0x0b, 0xed, 0x23, 0x93, 0xb8, 0x89, 0xa2, 0x0e, 0x96,
	0xaf, 0x33, 0x8a, 0xf6, 0xf7, 0x0c, 0x94, 0x45, 0x2b, 0xc3, 0xd0, 0x1b, 0x51, 0x7c, 0xc9, 0x08,
	0x15, 0x73, 0x19, 0xca, 0xbc, 0x9b, 0x1c, 0x76, 0x66, 0xac, 0x7f, 0x60, 0xca, 0x64, 0x7e, 0x27,
	0x6a, 0x84, 0xce, 0x55, 0x16, 0x9c, 0xeb, 0x02, 0xe4, 0x50, 0xcf, 0xb0, 0x6c, 0xa6, 0x67, 0xda,
	0x50, 0x37, 0x20, 0xeb, 0xb9, 0x36, 0x77, 0x8f, 0x27, 0x52, 0x26, 0xd1, 0x5d, 0x1b, 0x91, 0x19,
	0x08, 0xa3, 0x7a, 0x1e, 0xea, 0x96, 0xdf, 0xba, 0x87, 0x86, 0x2d, 0x0f, 0x75, 0x2c, 0x7c, 0xfa,
	0xe1, 0xa6, 0xe7, 0x2c, 0x1f, 0x3b, 0x9f, 0x90, 0x8c, 0x6d, 0xde, 0xf2, 0x5b, 0x3d, 0x03, 0x37,
	0x09, 0x66, 0x8b, 0x7a, 0xd1, 0xf2, 0x6f, 0x90, 0xb6, 0xfa, 0x3a, 0xac, 0x58, 0x3e, 0x3f, 0x2b,
	0x64, 0xb6, 0x02, 0xb7, 0xc5, 0x2c, 0x8e, 0xda, 0x2f, 0xf1, 0x94, 0x45, 0xfd, 0xb8, 0xe5, 0xdf,
	0xe6, 0x3c, 0xdb, 0xee, 0x15, 0xc2, 0x41, 0xb5, 0xa9, 0x7d, 0x29, 0x81, 0x7c, 0x1d, 0x0d, 0x27,
	0xdf, 0x33, 0x71, 0x65, 0x67, 0xa6, 0x29, 0x5b, 0x9e, 0x5d, 0xd9, 0x8b, 0x90, 0xc7, 0xea, 0xb0,
	0x4c, 0xae, 0xd9, 0x7b, 0x08, 0xfb, 0xb4, 0x13, 0x50, 0x22, 0x64, 0xc7, 0x44, 0x07, 0x44, 0xbd,
	0x15, 0xbd, 0x88, 0x7b, 0x70, 0x5b, 0xfb, 0x87, 0x0c, 0x85, 0xcb, 0x91, 0x67, 0x9c, 0xbc, 0x7c,
	0x76, 0x0b, 0x09, 0xcb, 0xa7, 0x94, 0x2d, 0x73, 0xc6, 0x1b, 0x53, 0xf0, 0xce, 0xd9, 0xb8, 0x77,
	0x5e, 0x80, 0x9c, 0xb8, 0x50, 0xda, 0x10, 0x83, 0xb0, 0xfc, 0xb4, 0x20, 0xac, 0x90, 0x16, 0x84,
	0x5d, 0x8c, 0x87, 0xa6, 0x69, 0xf7, 0x0f, 0xd3, 0x42, 0xec, 0x92, 0x4b, 0x5e, 0xbd, 0xa5, 0x07,
	0xb8, 0x7a, 0x13, 0x0e, 0x5c, 0x39, 0x8a, 0x03, 0x2f, 0xcf, 0xe4, 0xc0, 0x5d, 0x50, 0xaf, 0x05,
	0x5d, 0xe4, 0xa1, 0x41, 0xef, 0x0d, 0x84, 0xf8, 0x29, 0x0b, 0xba, 0x97, 0xe2, 0xba, 0x17, 0xb4,
	0x9c, 0x99, 0xa6, 0x65, 0x39, 0x45, 0xcb, 0xda, 0xc7, 0x45, 0x50, 0xb6, 0x3d, 0xc3, 0xf1, 0x8d,
	0x36, 0xbe, 0xe2, 0x26, 0x03, 0xea, 0x0c, 0x54, 0x83, 0x88, 0x37, 0x02, 0x55, 0x45, 0xa0, 0xce,
	0x0c, 0xac, 0x79, 0xc8, 0x05, 0x07, 0x91, 0x05, 0x64, 0x83, 0x83, 0x2d, 0x53, 0xdc, 0x71, 0x6e,
	0x04, 0x6d, 0x7b, 0x86, 0x3d, 0xe0, 0xa8, 0xa2, 0x0d, 0xf5, 0x14, 0x94, 0xd9, 0x6e, 0x69, 0x27,
	0x45, 0x94, 0x42, 0x69, 0xb7, 0x09, 0xcb, 0x71, 0x28, 0xde, 0xed, 0x0f, 0x5b, 0x1e, 0x0f, 0x9b,
	0x24, 0xbd, 0x70, 0xb7, 0x3f, 0xd4, 0x31, 0x66, 0x6a, 0x20, 0xef, 0x22, 0xd4, 0x00, 0x42, 0xc5,
	0x3f, 0xb1, 0xe9, 0x30, 0x79, 0xb8, 0x43, 0xa1, 0xa6, 0x43, 0x29, 0x6f, 0x20, 0x22, 0x6b, 0x17,
	0x21, 0x2a, 0x0b, 0x1f, 0x70, 0x56, 0x2f, 0xec, 0x22, 0x44, 0x64, 0xbd, 0xc4, 0x61, 0x5b, 0x21,
	0xbb, 0x7f, 0x22, 0x05, 0xb6, 0x82, 0xbe, 0x63, 0xd0, 0x7d, 0x01, 0x14, 0xdf, 0xea, 0x38, 0xc8,
	0x6c, 0x91, 0x30, 0xad, 0x3a, 0x31, 0x4c, 0x03, 0xca, 0x7a, 0x1d, 0x07, 0x6b, 0xaf, 0x46, 0xc1,
	0x5a, 0x9d, 0x0c, 0x3a, 0x3d, 0x79, 0xd6, 0x64, 0xc4, 0x76, 0x03, 0x6a, 0x3b, 0x56, 0x80, 0x4f,
	0xa3, 0xe5, 0xf7, 0x51, 0xdb, 0xda, 0xb5, 0xda, 0xe4, 0xa1, 0xa0, 0x6c, 0x6a, 0x29, 0x82, 0x9a,
	0x94, 0xf5, 0x16, 0xe3, 0xd4, 0xe7, 0x76, 0xe2, 0x04, 0xf5, 0x26, 0xd4, 0x11, 0x03, 0x71, 0x24,
	0x6f, 0x81, 0xc8, 0x4b, 0x53, 0x07, 0x07, 0x7c, 0x28, 0xb0, 0x86, 0x12, 0x14, 0x2c, 0xd1, 0xb6,
	0x02, 0x14, 0x5f, 0xe1, 0xd2, 0x58, 0x89, 0x6f, 0x33, 0xde, 0x48, 0xa2, 0x9d, 0xa0, 0xa8, 0x3f,
	0x80, 0x05, 0xb6, 0xec, 0xb6, 0xe1, 0x77, 0x23, 0xa1, 0x0d, 0x22, 0xf4, 0xc9, 0xf1, 0xdb, 0xc6,
	0xec, 0xa1, 0xdc, 0xf9, 0x9d, 0x51, 0x22, 0xbe, 0x16, 0x0e, 0xbc, 0x7e, 0x24, 0x72, 0x91, 0x88,
	0x4c, 0xbb, 0x16, 0xde, 0xf3, 0xfa, 0xa1, 0x28, 0xe5, 0x20, 0x6a, 0x24, 0x1d, 0x90, 0x7a, 0x14,
	0x07, 0x34, 0x3f, 0x93, 0x03, 0xfa, 0x30, 0x03, 0xf5, 0x11, 0xa4, 0x3c, 0xda, 0x51, 0xc7, 0x31,
	0xc8, 0x53, 0x5b, 0x61, 0xa1, 0x06, 0x6b, 0xa9, 0x8f, 0x43, 0x29, 0x8c, 0x20, 0x58, 0x84, 0x11,
	0x11, 0x34, 0x0f, 0x0a, 0xdb, 0x07, 0x5b, 0x4e, 0x7f, 0x10, 0x44, 0x1e, 0x4a, 0x12, 0x3c, 0xd4,
	0x71, 0x28, 0x62, 0x22, 0xb9, 0xf8, 0x32, 0xe4, 0xe2, 0x2b, 0x04, 0x07, 0xe4, 0x82, 0x8e, 0x5c,
	0x94, 0x3c, 0xc9, 0x45, 0x65, 0x47, 0x5c, 0x94, 0xf6, 0x01, 0x14, 0xb7, 0x0f, 0xde, 0x1d, 0x04,
	0x78, 0xd2, 0xf1, 0x3e, 0x3f, 0x14, 0x9f, 0x99, 0x24, 0x5e, 0x1e, 0xf5, 0x80, 0x34, 0xa4, 0x6a,
	0x77, 0x0d, 0xa7, 0x43, 0xa7, 0x27, 0x21, 0xd5, 0x15, 0xd2, 0xd6, 0x3e, 0x94, 0x60, 0x2e, 0x61,
	0xd9, 0xea, 0x0b, 0x50, 0x22, 0x7b, 0xec, 0x0f, 0x02, 0xbc, 0x0a, 0x99, 0xe0, 0x28, 0xc5, 0xb3,
	0x50, 0x3d, 0xe9, 0xc5, 0x80, 0xfe, 0xf0, 0xd5, 0x4b, 0x00, 0xc1, 0x41, 0xcb, 0x25, 0x3b, 0xf1,
	0x1b, 0x19, 0x32, 0xf2, 0x44, 0xea, 0x48, 0xba, 0x5b, 0xbd, 0x14, 0xb0, 0x5f, 0xbe, 0xf6, 0x91,
	0x04, 0xb5, 0xa4, 0x01, 0x7f, 0x3b, 0x2b, 0xf9, 0xa5, 0x04, 0xf3, 0x29, 0x56, 0xff, 0xed, 0x2c,
	0xe6, 0x1a, 0xd4, 0x92, 0x8e, 0x12, 0x1f, 0x68, 0xc7, 0xf0, 0x5b, 0xb6, 0xd5, 0xb3, 0x02, 0x82,
	0x92, 0xac, 0x5e, 0xec, 0x18, 0xfe, 0xdb, 0xb8, 0x8d, 0x61, 0xe2, 0xb8, 0x3c, 0x30, 0xc8, 0xea,
	0xb4, 0xa1, 0x7d, 0x26, 0x81, 0x22, 0xb8, 0x1d, 0xfc, 0x48, 0xf2, 0xf1, 0x53, 0xcc, 0x69, 0x23,
	0x9e, 0x22, 0x92, 0x08, 0x9a, 0xab, 0x9c, 0xcc, 0x72, 0x44, 0x67, 0x61, 0x4e, 0x7c, 0x27, 0x07,
	0x46, 0x87, 0xc1, 0xbe, 0x2a, 0x90, 0xb7, 0x8d, 0x8e, 0xfa, 0x1a, 0x14, 0x82, 0x03, 0x31, 0x20,
	0x7e, 0x32, 0x2d, 0x00, 0x78, 0x4f, 0xbf, 0x29, 0xb8, 0x19, 0x62, 0xad, 0xf9, 0xe0, 0x00, 0xff,
	0xaf, 0x7d, 0x24, 0x43, 0xf1, 0x96, 0xd5, 0x71, 0xb6, 0x9c, 0x5d, 0xf7, 0xa1, 0xc4, 0x23, 0x51,
	0x90, 0x2d, 0x8b, 0x41, 0xf6, 0x94, 0x1c, 0x10, 0x8f, 0x62, 0x72, 0xb3, 0x45, 0x31, 0x79, 0xc1,
	0x47, 0xe0, 0x28, 0xc2, 0xea, 0x38, 0xcc, 0x4b, 0x28, 0x74, 0x06, 0x9f, 0x6c, 0x0d, 0xfb, 0x09,
	0x6c, 0xb2, 0xb8, 0xbb, 0x87, 0x7c, 0xdf, 0xe8, 0x44, 0x41, 0x8b, 0xd5, 0x71, 0x6e, 0x50, 0x12,
	0xde, 0x7e, 0xd7, 0xe4, 0x26, 0x4b, 0xd3, 0x3f, 0xc5, 0xae, 0x49, 0x4d, 0x16, 0xbb, 0xa0, 0xae,
	0xc9, 0x84, 0xd3, 0xe7, 0x66, 0xa1, 0x6b, 0x52, 0xd1, 0x57, 0xa1, 0x4a, 0x44, 0x47, 0x38, 0xa5,
	0x49, 0x9f, 0x34, 0x9f, 0x8c, 0x75, 0xcd, 0xb1, 0x4a, 0x16, 0xc4, 0x1a, 0xbe, 0xf6, 0x2b, 0x09,
	0x14, 0xa1, 0x57, 0x3d, 0x0d, 0x55, 0x2e, 0x90, 0x4d, 0x4b, 0xb1, 0x52, 0x66, 0x08, 0x4f, 0xdf,
	0x56, 0x66, 0xca, 0xb6, 0xe4, 0x09, 0xdb, 0xca, 0xc6, 0xb6, 0xa5, 0xfd, 0x26, 0x07, 0x45, 0x02,
	0x9b, 0x5d, 0xe4, 0x4d, 0x86, 0xc6, 0x49, 0x50, 0x02, 0xc6, 0x18, 0xe1, 0x02, 0x38, 0xe9, 0xe1,
	0x04, 0xa9, 0xd7, 0xa0, 0x12, 0xce, 0x21, 0xe4, 0x09, 0x57, 0xd3, 0x64, 0xf1, 0x55, 0xd3, 0xac,
	0x4a, 0x20, 0xb4, 0xbe, 0x96, 0x88, 0xf6, 0x3c, 0xd4, 0xfb, 0x86, 0x17, 0x38, 0xc8, 0x13, 0x32,
	0x5a, 0x40, 0x44, 0xcc, 0xb1, 0x8e, 0x30, 0x9b, 0x75, 0x16, 0x38, 0xa9, 0xc5, 0x6f, 0x1c, 0x85,
	0xe5, 0x49, 0x28, 0x99, 0x3f, 0x43, 0x52, 0x5c, 0xc0, 0x5c, 0xaa, 0x0b, 0xb8, 0xc4, 0x63, 0xe0,
	0x32, 0x51, 0xc8, 0xe9, 0xb1, 0x0a, 0x49, 0x09, 0x82, 0x5f, 0x81, 0xbc, 0x87, 0xfc, 0x81, 0x1d,
	0x90, 0x04, 0x5c, 0x75, 0xf3, 0xcc, 0x94, 0xc1, 0x3a, 0x61, 0xd6, 0xd9, 0xa0, 0x64, 0xe4, 0x54,
	0x39, 0x4a, 0xe4, 0x54, 0x9d, 0x29, 0x72, 0x7a, 0x03, 0xb2, 0x44, 0xf5, 0x1c, 0x58, 0xd2, 0xa1,
	0x80, 0x55, 0x03, 0xf9, 0x6e, 0x7f, 0xc8, 0xae, 0x72, 0xfc, 0x53, 0xfb, 0x9b, 0x04, 0x65, 0x2c,
	0xe8, 0x96, 0x63, 0xf4, 0xfd, 0xae, 0x1b, 0xa8, 0x6b, 0x50, 0xc3, 0x47, 0xdc, 0xf2, 0x19, 0x21,
	0x82, 0x7b, 0xd5, 0x13, 0xf8, 0xb6, 0x4c, 0xf5, 0x75, 0xc8, 0x61, 0x0a, 0xbf, 0x5a, 0xce, 0xa7,
	0xc5, 0x46, 0xc2, 0x08, 0xd2, 0xf0, 0xaf, 0x39, 0x81, 0x37, 0xd4, 0xe9, 0xc0, 0xe5, 0xef, 0x03,
	0x44, 0x44, 0xbc, 0xb8, 0x7b, 0x68, 0xc8, 0x8c, 0x1c, 0xff, 0x54, 0x9f, 0x16, 0x63, 0x0f, 0x65,
	0x73, 0x69, 0xcc, 0x0c, 0x0c, 0xc4, 0x97, 0x32, 0x2f, 0x4a, 0xda, 0x1d, 0xa8, 0x5d, 0x45, 0xf8,
	0xac, 0xf6, 0x8c, 0xc0, 0xd8, 0xb1, 0x6c, 0x2b, 0x18, 0x4e, 0x8b, 0x27, 0x4f, 0x43, 0xc5, 0x8c,
	0x86, 0xd8, 0x74, 0xb6, 0xa2, 0x1e, 0x27, 0x6a, 0xff, 0xcb, 0x40, 0xf5, 0x6d, 0x63, 0x07, 0xd9,
	0xc8, 0xe4, 0x08, 0xbd, 0x00, 0xaa, 0x4d, 0x29, 0x2d, 0x21, 0xf3, 0x41, 0xe5, 0xd7, 0xec, 0x18,
	0xef, 0x43, 0x29, 0x23, 0x8c, 0x4f, 0x8a, 0x5c, 0x13, 0xb2, 0xd2, 0x39, 0xa2, 0xab, 0x73, 0x69,
	0x0f, 0x95, 0xd8, 0x92, 0x52, 0xb2, 0xd3, 0xa7, 0xa0, 0x6c, 0xf9, 0x2d, 0x13, 0xd9, 0x88, 0x2a,
	0x82, 0x46, 0xb0, 0x8a, 0xe5, 0x5f, 0xe5, 0xa4, 0x24, 0xe2, 0x0b, 0x47, 0x41, 0x7c, 0x71, 0x26,
	0xc4, 0xff, 0x3e, 0x03, 0xc7, 0xd2, 0x77, 0xf0, 0x88, 0x65, 0x8a, 0xcf, 0x41, 0x2d, 0xcc, 0xe7,
	0xc6, 0xd3, 0x0e, 0x61, 0x06, 0x99, 0x23, 0x0c, 0xcf, 0xcf, 0x91, 0x35, 0x92, 0xb9, 0xad, 0xf3,
	0xe4, 0x5a, 0x94, 0xc0, 0xfd, 0x2a, 0x03, 0xa5, 0x3b, 0x5d, 0x2b, 0x40, 0xb6, 0xe5, 0x07, 0xf8,
	0x38, 0xf7, 0x79, 0x23, 0x52, 0x87, 0x12, 0xd2, 0x1e, 0x0a, 0x28, 0x5f, 0x03, 0x9e, 0xe4, 0x43,
	0x18, 0x96, 0xf2, 0x98, 0x8a, 0x48, 0xfc, 0xe4, 0xf4, 0x68, 0xcc, 0x08, 0xe8, 0x72, 0x53, 0x41,
	0x97, 0x3f, 0x0a, 0xe8, 0x0a, 0x33, 0x81, 0xee, 0x3f, 0x32, 0x54, 0xf8, 0x65, 0x4a, 0x03, 0xdd,
	0xf3, 0x50, 0x0f, 0xaf, 0x61, 0x12, 0x0a, 0x47, 0x9a, 0x9d, 0x0b, 0x44, 0xce, 0x87, 0xa2, 0xdd,
	0x53, 0x50, 0xee, 0xba, 0x03, 0xcf, 0x1e, 0xb2, 0xb0, 0x1b, 0xe3, 0x49, 0xd6, 0x15, 0x4a, 0xa3,
	0x0b, 0x3a, 0x09, 0x8a, 0x69, 0x58, 0x21, 0x47, 0x8e, 0x70, 0x00, 0x21, 0x51, 0x86, 0xd3, 0x50,
	0x75, 0x1d, 0xba, 0x7b, 0xc6, 0x93, 0x27, 0x3c, 0x65, 0xd7, 0x21, 0x9b, 0xa4, 0x5c, 0x57, 0x05,
	0x17, 0x42, 0x75, 0xb4, 0x36, 0x2e, 0xad, 0xc3, 0x77, 0x98, 0xe2, 0x41, 0x12, 0x25, 0x86, 0x62,
	0xb2, 0xc4, 0x30, 0x72, 0xda, 0xa5, 0xa9, 0xa7, 0x0d, 0x47, 0x39, 0x6d, 0x65, 0xa6, 0xd3, 0xfe,
	0xb9, 0x0c, 0x8b, 0xa9, 0x3b, 0x7c, 0xc4, 0x3c, 0xcc, 0x26, 0x2c, 0x86, 0x1e, 0x26, 0x06, 0x1f,
	0x0a, 0x8e, 0xb0, 0xfe, 0xf4, 0x3d, 0x01, 0x46, 0xcf, 0xc0, 0x42, 0x38, 0x46, 0xc4, 0x13, 0xc5,
	0x4a, 0x58, 0x97, 0xba, 0x1a, 0xe1, 0xea, 0x22, 0x2c, 0x85, 0x23, 0x12, 0x00, 0x2b, 0x90, 0x41,
	0xa1, 0xc0, 0x77, 0x45, 0xa0, 0x4d, 0x83, 0x88, 0xf6, 0xa7, 0x2c, 0xe4, 0x59, 0xad, 0x2c, 0x56,
	0x8a, 0x95, 0x12, 0xa5, 0xd8, 0x57, 0x41, 0x61, 0x9d, 0x42, 0x1a, 0x28, 0xad, 0x6c, 0x4e, 0x85,
	0xd1, 0xb2, 0x79, 0x3f, 0xfc, 0x9d, 0x9a, 0x04, 0x3a, 0x0d, 0x55, 0xcb, 0x6f, 0xed, 0x18, 0x3e,
	0xe2, 0x45, 0x3c, 0x9a, 0xb9, 0x28, 0x5b, 0x7e, 0xd3, 0xf0, 0x11, 0x5b, 0xd6, 0x6c, 0x8f, 0xb5,
	0x4b, 0x50, 0x0a, 0x5d, 0x2e, 0xf3, 0x5d, 0x8f, 0xa7, 0xd5, 0x43, 0x39, 0x8f, 0x1e, 0xb1, 0xab,
	0x6f, 0xb2, 0x37, 0x67, 0xe8, 0x6d, 0x98, 0x6d, 0xae, 0x4e, 0xb3, 0x4d, 0xbd, 0x12, 0x73, 0x46,
	0x23, 0x76, 0x57, 0x1c, 0xb5, 0x3b, 0xb1, 0xb4, 0xad, 0x8c, 0x2d, 0x6d, 0x53, 0x15, 0xa4, 0x98,
	0x7e, 0xc2, 0x6c, 0x4b, 0x47, 0x31, 0x5b, 0x98, 0xc9, 0x6c, 0x3f, 0xcf, 0x40, 0x35, 0xbe, 0xac,
	0x47, 0xcc, 0x5e, 0xaf, 0x43, 0x68, 0x5f, 0xad, 0x08, 0x2a, 0xb9, 0x43, 0x40, 0xa5, 0xce, 0xc7,
	0x45, 0xb7, 0xfe, 0xd4, 0x2a, 0xef, 0x67, 0x12, 0xa8, 0xdb, 0x6e, 0x60, 0xd8, 0xac, 0x2a, 0xd3,
	0x1c, 0x62, 0xb0, 0xce, 0xf8, 0x92, 0x58, 0x87, 0xf9, 0xb6, 0x6b, 0x9b, 0xad, 0x44, 0xd5, 0x87,
	0xea, 0xac, 0x8e, 0xbb, 0x6e, 0xc5, 0xea, 0x6b, 0x17, 0x40, 0xc5, 0x8f, 0x89, 0xd4, 0x22, 0x51,
	0xad, 0xeb, 0x06, 0x31, 0x6e, 0xed, 0x9f, 0x12, 0x94, 0xc5, 0x25, 0xaa, 0x6d, 0xa8, 0x06, 0xb8,
	0xcd, 0x47, 0xf2, 0x4c, 0xd8, 0x66, 0x9a, 0x1d, 0x08, 0x03, 0x63, 0x0d, 0xfa, 0xce, 0x68, 0x16,
	0xef, 0x37, 0x73, 0x9f, 0x4a, 0x99, 0x86, 0xa4, 0x57, 0x02, 0xb1, 0x77, 0xb9, 0x13, 0xd7, 0xcb,
	0xd8, 0x67, 0xc9, 0xcb, 0xf1, 0x67, 0xc9, 0x99, 0x29, 0x6b, 0xa0, 0xfa, 0x15, 0x1f, 0x29, 0x7f,
	0x96, 0x61, 0x8e, 0x75, 0x86, 0xef, 0xae, 0x84, 0xf9, 0x48, 0x33, 0x99, 0xcf, 0xee, 0x88, 0x7a,
	0xe8, 0x9b, 0xec, 0x62, 0x5a, 0x65, 0x21, 0x3e, 0xf1, 0x2c, 0x1a, 0x52, 0x6f, 0xf0, 0x27, 0x9f,
	0x4c, 0xc4, 0x3f, 0x7d, 0x08, 0xf1, 0xd1, 0x03, 0x4f, 0x10, 0xcb, 0xde, 0x7f, 0xdf, 0x94, 0xc2,
	0xbf, 0x8e, 0x87, 0xe6, 0x1f, 0x33, 0xd0, 0xa0, 0x49, 0x8d, 0xc4, 0x8e, 0x6f, 0x18, 0x7d, 0xf5,
	0x13, 0x09, 0x4e, 0xb0, 0x4c, 0x08, 0x3b, 0x91, 0xe8, 0x3d, 0xdd, 0x33, 0xfa, 0x0c, 0xbc, 0x5b,
	0x63, 0xbf, 0x8a, 0x19, 0x15, 0x39, 0xb6, 0x23, 0xa9, 0xda, 0xc6, 0xfe, 0x18, 0xc6, 0xe5, 0x0f,
	0x60, 0x65, 0xa2, 0x10, 0x51, 0x2f, 0x25, 0xaa, 0x97, 0x2b, 0x71, 0xbd, 0x3c, 0x9d, 0x5a, 0xfd,
	0xf2, 0x83, 0x54, 0xb1, 0xbe, 0xa8, 0xad, 0x9f, 0x4a, 0xb0, 0x3c, 0x9e, 0x53, 0xdd, 0x81, 0xc6,
	0x18, 0x75, 0x71, 0x43, 0x5f, 0x3b, 0xac, 0xae, 0xf4, 0x63, 0xa9, 0x0a, 0xf0, 0xb5, 0x8f, 0x25,
	0x58, 0x4c, 0x1d, 0x71, 0x34, 0xd3, 0x1b, 0xad, 0x7c, 0x67, 0xd2, 0xbe, 0x2f, 0x60, 0x99, 0x17,
	0x39, 0xca, 0xbc, 0xfc, 0x2b, 0x03, 0x4b, 0xfc, 0xca, 0xbe, 0xed, 0xda, 0x83, 0x9e, 0xa0, 0x8f,
	0x2f, 0x24, 0x38, 0x17, 0xde, 0xfb, 0x7b, 0xa4, 0x33, 0x02, 0xd0, 0xce, 0xb0, 0x15, 0x4f, 0x04,
	0x52, 0x0d, 0x6d, 0x4f, 0x08, 0x09, 0x12, 0xf2, 0xc7, 0xd0, 0x9b, 0x43, 0x31, 0x6f, 0x98, 0x04,
	0xd6, 0xe9, 0xe0, 0x10, 0x83, 0x96, 0x3f, 0x92, 0xe0, 0xdc, 0xa1, 0xa5, 0x8b, 0x88, 0xcb, 0x51,
	0xc4, 0x5d, 0x8d, 0x23, 0x6e, 0x7d, 0x0c, 0xe2, 0xc6, 0x6c, 0x4c, 0x84, 0xdc, 0x2f, 0x24, 0x38,
	0x31, 0x81, 0x55, 0x45, 0x70, 0x7c, 0x9c, 0x8a, 0x39, 0xe8, 0xce, 0x1d, 0x5a, 0xa5, 0xfa, 0x52,
	0xba, 0x76, 0x7c, 0xed, 0xdf, 0x32, 0x1c, 0x4b, 0x1f, 0x73, 0x34, 0xdc, 0x7d, 0x00, 0x4b, 0xc9,
	0xe5, 0xef, 0x0c, 0x5b, 0xe4, 0x06, 0xa7, 0xbe, 0xff, 0xca, 0xa1, 0x17, 0x9f, 0x20, 0x53, 0xf7,
	0x49, 0x13, 0x75, 0x0b, 0x41, 0x4a, 0x97, 0xba, 0x1d, 0xbf, 0x06, 0x9e, 0x3b, 0xfc, 0x4c, 0x93,
	0x6e, 0x83, 0xbb, 0x70, 0x7c, 0xec, 0x42, 0x52, 0x90, 0xf2, 0x42, 0x1c, 0x29, 0xa7, 0xa6, 0x2e,
	0xe2, 0x6b, 0xbe, 0x10, 0x7e, 0x97, 0x81, 0x6a, 0x7c, 0xc2, 0x19, 0x43, 0xaa, 0xf3, 0x50, 0x17,
	0x42, 0x24, 0x7a, 0xa6, 0xcc, 0x99, 0xcc, 0x85, 0x11, 0x52, 0x28, 0x59, 0x15, 0xc3, 0x2f, 0xc6,
	0xcc, 0xc2, 0xa9, 0x28, 0xfa, 0x62, 0xdc, 0x2b, 0x00, 0x58, 0x32, 0xab, 0xb8, 0xd1, 0x1c, 0x42,
	0xa9, 0xeb, 0x06, 0xac, 0xd8, 0x76, 0x12, 0x14, 0x22, 0x8c, 0xf5, 0xb3, 0x0c, 0x02, 0x26, 0x31,
	0x86, 0x91, 0xd2, 0x43, 0xfe, 0x41, 0x4a, 0x0f, 0xda, 0x7f, 0x33, 0xfc, 0x06, 0x1a, 0x67, 0x93,
	0x7f, 0x91, 0xe0, 0x02, 0xff, 0x14, 0x7a, 0x82, 0xfb, 0x13, 0x0b, 0x31, 0x18, 0x80, 0x3f, 0x1a,
	0xff, 0xad, 0xf4, 0x18, 0x07, 0x38, 0xa9, 0xb7, 0x39, 0xe4, 0xc5, 0x8a, 0x24, 0x50, 0x9f, 0xdc,
	0x3f, 0xd4, 0xb0, 0xe5, 0x5f, 0x4b, 0xf0, 0xd4, 0x0c, 0x33, 0xa4, 0x5c, 0xbc, 0x6f, 0xc5, 0xf1,
	0xf7, 0xdc, 0xc4, 0x8b, 0xf7, 0x10, 0xce, 0xf0, 0xb7, 0x12, 0x9c, 0x9a, 0x3a, 0x40, 0x3d, 0x80,
	0xd5, 0x29, 0xda, 0xe7, 0x9e, 0x71, 0x63, 0x46, 0x8d, 0xeb, 0x2b, 0x93, 0x54, 0xe7, 0x6b, 0x5f,
	0xc8, 0xf0, 0xf8, 0xa4, 0xf1, 0x47, 0xf3, 0x95, 0x9f, 0x4b, 0x70, 0x76, 0xcc, 0xc6, 0x46, 0x2e,
	0x53, 0xea, 0x3c, 0xef, 0xcc, 0xb8, 0xbf, 0xd4, 0xce, 0x94, 0x1b, 0x4f, 0xd7, 0xf6, 0xa7, 0x32,
	0xaa, 0x4f, 0x41, 0x96, 0x54, 0xd9, 0xf2, 0x93, 0x7d, 0x0f, 0x61, 0x5a, 0xfe, 0x09, 0x9c, 0x3d,
	0xe4, 0xdc, 0x29, 0x3e, 0xf4, 0x95, 0x38, 0xcc, 0xce, 0x1e, 0x72, 0xd7, 0x22, 0xb2, 0x3e, 0x95,
	0xf8, 0xdf, 0x54, 0x24, 0x9c, 0xdf, 0x13, 0x50, 0x89, 0x7b, 0x27, 0x0a, 0x6f, 0x56, 0x67, 0x64,
	0x4c, 0xc7, 0x20, 0xcf, 0xbc, 0x4e, 0x86, 0x78, 0x1d, 0xd6, 0x1a, 0xf5, 0x38, 0xf2, 0x03, 0x79,
	0x9c, 0xf7, 0xa1, 0x7c, 0xc5, 0x75, 0x76, 0x2d, 0xaf, 0x47, 0xaa, 0x85, 0x33, 0x3a, 0x64, 0x0d,
	0xca, 0x6d, 0x61, 0x34, 0xfb, 0x02, 0x21, 0x46, 0xd3, 0xde, 0x87, 0x39, 0x9d, 0x26, 0x08, 0xc2,
	0x6f, 0x69, 0x4e, 0x25, 0xbe, 0xa5, 0x69, 0x16, 0xee, 0x37, 0xb3, 0x5e, 0xa6, 0x26, 0x47, 0xf5,
	0x9a, 0xf3, 0x89, 0x72, 0x6b, 0x46, 0xe4, 0x93, 0xe2, 0x9f, 0xe9, 0xec, 0x40, 0x9d, 0xcd, 0x70,
	0x8b, 0x7c, 0x49, 0x44, 0x3e, 0x54, 0xb8, 0x41, 0x6b, 0xfd, 0x46, 0x30, 0xf0, 0xc2, 0xb7, 0x70,
	0xda, 0xb7, 0x69, 0xc2, 0x48, 0xc2, 0x4b, 0x9c, 0xd9, 0x27, 0x52, 0xa6, 0x28, 0xe9, 0x82, 0x00,
	0xed, 0x3d, 0xa8, 0x25, 0x39, 0x13, 0x9f, 0x13, 0x48, 0xc9, 0xcf, 0x09, 0xce, 0x40, 0x29, 0x14,
	0x90, 0x5c, 0x7f, 0xd4, 0xa3, 0x7d, 0x29, 0xc1, 0x71, 0xae, 0x20, 0x31, 0x21, 0x45, 0x11, 0xf9,
	0x3e, 0xcc, 0x27, 0x92, 0xe9, 0x2c, 0xa0, 0xa5, 0x85, 0xdc, 0x29, 0x39, 0x2e, 0x7c, 0xc4, 0x4d,
	0xb8, 0xdf, 0x2c, 0xfc, 0x4c, 0xca, 0xd6, 0xa4, 0xd5, 0xc7, 0xf4, 0x7a, 0x90, 0xec, 0x56, 0x5f,
	0x82, 0x85, 0xc4, 0x0c, 0x91, 0xc6, 0x65, 0xb2, 0x62, 0x2d, 0xb3, 0xf6, 0x98, 0xae, 0xc6, 0x46,
	0x52, 0xc5, 0x5b, 0xa0, 0xb0, 0x95, 0x93, 0x4a, 0xeb, 0x8b, 0x87, 0xc3, 0x4e, 0x6c, 0x41, 0x14,
	0x47, 0xab, 0x42, 0xd5, 0xb5, 0x59, 0xbd, 0xdf, 0x54, 0xd4, 0xd2, 0xb9, 0xc7, 0xd8, 0x3f, 0xf2,
	0x16, 0x68, 0xd6, 0x7f, 0x38, 0x97, 0xf8, 0xfb, 0xc2, 0x9d, 0x3c, 0xf1, 0x69, 0xdf, 0xfd, 0x7f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x09, 0x0b, 0x8d, 0x49, 0x39, 0x00, 0x00,
}
