// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

package adamantglobalv1

import (
	fmt "fmt"
	gincoincglobalv1 "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Wallet struct {
	WalletId             string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Name                 string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin        `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	WalletType           WalletType                   `protobuf:"varint,4,opt,name=wallet_type,json=walletType,proto3,enum=adamant.global.v1.WalletType" json:"wallet_type,omitempty"`
	AddressType          gincoincglobalv1.AddressType `protobuf:"varint,5,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	M                    uint32                       `protobuf:"varint,6,opt,name=m,proto3" json:"m,omitempty"`
	N                    uint32                       `protobuf:"varint,7,opt,name=n,proto3" json:"n,omitempty"`
	State                WalletState                  `protobuf:"varint,8,opt,name=state,proto3,enum=adamant.global.v1.WalletState" json:"state,omitempty"`
	Keys                 []*Key                       `protobuf:"bytes,9,rep,name=keys,proto3" json:"keys,omitempty"`
	Members              []*WalletMember              `protobuf:"bytes,10,rep,name=members,proto3" json:"members,omitempty"`
	Balance              float64                      `protobuf:"fixed64,11,opt,name=balance,proto3" json:"balance,omitempty"`
	StringBalance        string                       `protobuf:"bytes,12,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	Address              string                       `protobuf:"bytes,13,opt,name=address,proto3" json:"address,omitempty"`
	PolicyId             string                       `protobuf:"bytes,14,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	CreateTime           *timestamp.Timestamp         `protobuf:"bytes,15,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp         `protobuf:"bytes,16,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Wallet) Reset()         { *m = Wallet{} }
func (m *Wallet) String() string { return proto.CompactTextString(m) }
func (*Wallet) ProtoMessage()    {}
func (*Wallet) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{0}
}

func (m *Wallet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Wallet.Unmarshal(m, b)
}
func (m *Wallet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Wallet.Marshal(b, m, deterministic)
}
func (m *Wallet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Wallet.Merge(m, src)
}
func (m *Wallet) XXX_Size() int {
	return xxx_messageInfo_Wallet.Size(m)
}
func (m *Wallet) XXX_DiscardUnknown() {
	xxx_messageInfo_Wallet.DiscardUnknown(m)
}

var xxx_messageInfo_Wallet proto.InternalMessageInfo

func (m *Wallet) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Wallet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Wallet) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Wallet) GetWalletType() WalletType {
	if m != nil {
		return m.WalletType
	}
	return WalletType_WALLET_TYPE_INVALID
}

func (m *Wallet) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *Wallet) GetM() uint32 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *Wallet) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *Wallet) GetState() WalletState {
	if m != nil {
		return m.State
	}
	return WalletState_WALLET_STATE_INVALID
}

func (m *Wallet) GetKeys() []*Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Wallet) GetMembers() []*WalletMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Wallet) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Wallet) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

func (m *Wallet) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Wallet) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Wallet) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Wallet) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type WalletMember struct {
	AccountId            string      `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role                 RoleType    `protobuf:"varint,5,opt,name=role,proto3,enum=adamant.global.v1.RoleType" json:"role,omitempty"`
	IsKeyRegistered      bool        `protobuf:"varint,6,opt,name=is_key_registered,json=isKeyRegistered,proto3" json:"is_key_registered,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WalletMember) Reset()         { *m = WalletMember{} }
func (m *WalletMember) String() string { return proto.CompactTextString(m) }
func (*WalletMember) ProtoMessage()    {}
func (*WalletMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{1}
}

func (m *WalletMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WalletMember.Unmarshal(m, b)
}
func (m *WalletMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WalletMember.Marshal(b, m, deterministic)
}
func (m *WalletMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WalletMember.Merge(m, src)
}
func (m *WalletMember) XXX_Size() int {
	return xxx_messageInfo_WalletMember.Size(m)
}
func (m *WalletMember) XXX_DiscardUnknown() {
	xxx_messageInfo_WalletMember.DiscardUnknown(m)
}

var xxx_messageInfo_WalletMember proto.InternalMessageInfo

func (m *WalletMember) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *WalletMember) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *WalletMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WalletMember) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *WalletMember) GetRole() RoleType {
	if m != nil {
		return m.Role
	}
	return RoleType_ROLE_TYPE_INVALID
}

func (m *WalletMember) GetIsKeyRegistered() bool {
	if m != nil {
		return m.IsKeyRegistered
	}
	return false
}

type Key struct {
	WalletId             string      `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	AccountId            string      `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType `protobuf:"varint,3,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	KeyId                string      `protobuf:"bytes,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Key) Reset()         { *m = Key{} }
func (m *Key) String() string { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()    {}
func (*Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{2}
}

func (m *Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Key.Unmarshal(m, b)
}
func (m *Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Key.Marshal(b, m, deterministic)
}
func (m *Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Key.Merge(m, src)
}
func (m *Key) XXX_Size() int {
	return xxx_messageInfo_Key.Size(m)
}
func (m *Key) XXX_DiscardUnknown() {
	xxx_messageInfo_Key.DiscardUnknown(m)
}

var xxx_messageInfo_Key proto.InternalMessageInfo

func (m *Key) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Key) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Key) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *Key) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type Address struct {
	WalletId             string                       `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	AddressId            string                       `protobuf:"bytes,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	Coin                 gincoincglobalv1.Coin        `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                       `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Index                uint32                       `protobuf:"varint,5,opt,name=index,proto3" json:"index,omitempty"`
	Balance              float64                      `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`
	StringBalance        string                       `protobuf:"bytes,7,opt,name=string_balance,json=stringBalance,proto3" json:"string_balance,omitempty"`
	State                AddressState                 `protobuf:"varint,8,opt,name=state,proto3,enum=adamant.global.v1.AddressState" json:"state,omitempty"`
	AddressType          gincoincglobalv1.AddressType `protobuf:"varint,9,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	SequenceNumber       uint32                       `protobuf:"varint,10,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	CreateTime           *timestamp.Timestamp         `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp         `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{3}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Address) GetAddressId() string {
	if m != nil {
		return m.AddressId
	}
	return ""
}

func (m *Address) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Address) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Address) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Address) GetStringBalance() string {
	if m != nil {
		return m.StringBalance
	}
	return ""
}

func (m *Address) GetState() AddressState {
	if m != nil {
		return m.State
	}
	return AddressState_ADDRESS_STATE_INVALID
}

func (m *Address) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *Address) GetSequenceNumber() uint32 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func (m *Address) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Address) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Transaction struct {
	WalletId             string                `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string                `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	Address              string                `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	Value                float64               `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string                `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	Fee                  float64               `protobuf:"fixed64,8,opt,name=fee,proto3" json:"fee,omitempty"`
	StringFee            string                `protobuf:"bytes,9,opt,name=string_fee,json=stringFee,proto3" json:"string_fee,omitempty"`
	FeeRate              uint64                `protobuf:"varint,10,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	State                TransactionState      `protobuf:"varint,11,opt,name=state,proto3,enum=adamant.global.v1.TransactionState" json:"state,omitempty"`
	SignedKeys           []*Key                `protobuf:"bytes,12,rep,name=signed_keys,json=signedKeys,proto3" json:"signed_keys,omitempty"`
	TxInputs             []*TxInput            `protobuf:"bytes,13,rep,name=tx_inputs,json=txInputs,proto3" json:"tx_inputs,omitempty"`
	TxOutputs            []*TxOutput           `protobuf:"bytes,14,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	Members              []*TransactionMember  `protobuf:"bytes,15,rep,name=members,proto3" json:"members,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,16,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,17,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{4}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Transaction) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *Transaction) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Transaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Transaction) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Transaction) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transaction) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Transaction) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *Transaction) GetStringFee() string {
	if m != nil {
		return m.StringFee
	}
	return ""
}

func (m *Transaction) GetFeeRate() uint64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *Transaction) GetState() TransactionState {
	if m != nil {
		return m.State
	}
	return TransactionState_TRANSACTION_STATE_INVALID
}

func (m *Transaction) GetSignedKeys() []*Key {
	if m != nil {
		return m.SignedKeys
	}
	return nil
}

func (m *Transaction) GetTxInputs() []*TxInput {
	if m != nil {
		return m.TxInputs
	}
	return nil
}

func (m *Transaction) GetTxOutputs() []*TxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

func (m *Transaction) GetMembers() []*TransactionMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *Transaction) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Transaction) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type TransactionMember struct {
	AccountId            string      `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountType          AccountType `protobuf:"varint,2,opt,name=account_type,json=accountType,proto3,enum=adamant.global.v1.AccountType" json:"account_type,omitempty"`
	Name                 string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string      `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Role                 RoleType    `protobuf:"varint,5,opt,name=role,proto3,enum=adamant.global.v1.RoleType" json:"role,omitempty"`
	Signed               bool        `protobuf:"varint,6,opt,name=signed,proto3" json:"signed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TransactionMember) Reset()         { *m = TransactionMember{} }
func (m *TransactionMember) String() string { return proto.CompactTextString(m) }
func (*TransactionMember) ProtoMessage()    {}
func (*TransactionMember) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{5}
}

func (m *TransactionMember) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionMember.Unmarshal(m, b)
}
func (m *TransactionMember) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionMember.Marshal(b, m, deterministic)
}
func (m *TransactionMember) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionMember.Merge(m, src)
}
func (m *TransactionMember) XXX_Size() int {
	return xxx_messageInfo_TransactionMember.Size(m)
}
func (m *TransactionMember) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionMember.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionMember proto.InternalMessageInfo

func (m *TransactionMember) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *TransactionMember) GetAccountType() AccountType {
	if m != nil {
		return m.AccountType
	}
	return AccountType_ACCOUNT_TYPE_INVALID
}

func (m *TransactionMember) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransactionMember) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *TransactionMember) GetRole() RoleType {
	if m != nil {
		return m.Role
	}
	return RoleType_ROLE_TYPE_INVALID
}

func (m *TransactionMember) GetSigned() bool {
	if m != nil {
		return m.Signed
	}
	return false
}

type TxInput struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxIndex              uint32   `protobuf:"varint,2,opt,name=tx_index,json=txIndex,proto3" json:"tx_index,omitempty"`
	Value                float64  `protobuf:"fixed64,3,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string   `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxInput) Reset()         { *m = TxInput{} }
func (m *TxInput) String() string { return proto.CompactTextString(m) }
func (*TxInput) ProtoMessage()    {}
func (*TxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{6}
}

func (m *TxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxInput.Unmarshal(m, b)
}
func (m *TxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxInput.Marshal(b, m, deterministic)
}
func (m *TxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxInput.Merge(m, src)
}
func (m *TxInput) XXX_Size() int {
	return xxx_messageInfo_TxInput.Size(m)
}
func (m *TxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxInput.DiscardUnknown(m)
}

var xxx_messageInfo_TxInput proto.InternalMessageInfo

func (m *TxInput) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *TxInput) GetTxIndex() uint32 {
	if m != nil {
		return m.TxIndex
	}
	return 0
}

func (m *TxInput) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxInput) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

type TxOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string   `protobuf:"bytes,3,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	IsChange             bool     `protobuf:"varint,4,opt,name=is_change,json=isChange,proto3" json:"is_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxOutput) Reset()         { *m = TxOutput{} }
func (m *TxOutput) String() string { return proto.CompactTextString(m) }
func (*TxOutput) ProtoMessage()    {}
func (*TxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{7}
}

func (m *TxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxOutput.Unmarshal(m, b)
}
func (m *TxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxOutput.Marshal(b, m, deterministic)
}
func (m *TxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxOutput.Merge(m, src)
}
func (m *TxOutput) XXX_Size() int {
	return xxx_messageInfo_TxOutput.Size(m)
}
func (m *TxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TxOutput proto.InternalMessageInfo

func (m *TxOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *TxOutput) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TxOutput) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *TxOutput) GetIsChange() bool {
	if m != nil {
		return m.IsChange
	}
	return false
}

type SignInfo struct {
	WalletId             string                `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string                `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	KeyId                string                `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	HdAccount            uint32                `protobuf:"varint,4,opt,name=hd_account,json=hdAccount,proto3" json:"hd_account,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,5,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                `protobuf:"bytes,6,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	SignMessage          string                `protobuf:"bytes,7,opt,name=sign_message,json=signMessage,proto3" json:"sign_message,omitempty"`
	HdChange             uint32                `protobuf:"varint,8,opt,name=hd_change,json=hdChange,proto3" json:"hd_change,omitempty"`
	HdIndex              uint32                `protobuf:"varint,9,opt,name=hd_index,json=hdIndex,proto3" json:"hd_index,omitempty"`
	SignTxInputs         []*SignTxInput        `protobuf:"bytes,10,rep,name=sign_tx_inputs,json=signTxInputs,proto3" json:"sign_tx_inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SignInfo) Reset()         { *m = SignInfo{} }
func (m *SignInfo) String() string { return proto.CompactTextString(m) }
func (*SignInfo) ProtoMessage()    {}
func (*SignInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{8}
}

func (m *SignInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignInfo.Unmarshal(m, b)
}
func (m *SignInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignInfo.Marshal(b, m, deterministic)
}
func (m *SignInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInfo.Merge(m, src)
}
func (m *SignInfo) XXX_Size() int {
	return xxx_messageInfo_SignInfo.Size(m)
}
func (m *SignInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignInfo proto.InternalMessageInfo

func (m *SignInfo) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *SignInfo) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *SignInfo) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignInfo) GetHdAccount() uint32 {
	if m != nil {
		return m.HdAccount
	}
	return 0
}

func (m *SignInfo) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *SignInfo) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *SignInfo) GetSignMessage() string {
	if m != nil {
		return m.SignMessage
	}
	return ""
}

func (m *SignInfo) GetHdChange() uint32 {
	if m != nil {
		return m.HdChange
	}
	return 0
}

func (m *SignInfo) GetHdIndex() uint32 {
	if m != nil {
		return m.HdIndex
	}
	return 0
}

func (m *SignInfo) GetSignTxInputs() []*SignTxInput {
	if m != nil {
		return m.SignTxInputs
	}
	return nil
}

type SignTxInput struct {
	TxInputIndex         uint32   `protobuf:"varint,1,opt,name=tx_input_index,json=txInputIndex,proto3" json:"tx_input_index,omitempty"`
	SignMessage          string   `protobuf:"bytes,2,opt,name=sign_message,json=signMessage,proto3" json:"sign_message,omitempty"`
	HdChange             uint32   `protobuf:"varint,3,opt,name=hd_change,json=hdChange,proto3" json:"hd_change,omitempty"`
	HdIndex              uint32   `protobuf:"varint,4,opt,name=hd_index,json=hdIndex,proto3" json:"hd_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignTxInput) Reset()         { *m = SignTxInput{} }
func (m *SignTxInput) String() string { return proto.CompactTextString(m) }
func (*SignTxInput) ProtoMessage()    {}
func (*SignTxInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{9}
}

func (m *SignTxInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTxInput.Unmarshal(m, b)
}
func (m *SignTxInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTxInput.Marshal(b, m, deterministic)
}
func (m *SignTxInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTxInput.Merge(m, src)
}
func (m *SignTxInput) XXX_Size() int {
	return xxx_messageInfo_SignTxInput.Size(m)
}
func (m *SignTxInput) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTxInput.DiscardUnknown(m)
}

var xxx_messageInfo_SignTxInput proto.InternalMessageInfo

func (m *SignTxInput) GetTxInputIndex() uint32 {
	if m != nil {
		return m.TxInputIndex
	}
	return 0
}

func (m *SignTxInput) GetSignMessage() string {
	if m != nil {
		return m.SignMessage
	}
	return ""
}

func (m *SignTxInput) GetHdChange() uint32 {
	if m != nil {
		return m.HdChange
	}
	return 0
}

func (m *SignTxInput) GetHdIndex() uint32 {
	if m != nil {
		return m.HdIndex
	}
	return 0
}

type SignedInfo struct {
	Signatures           []*Signature `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SignedInfo) Reset()         { *m = SignedInfo{} }
func (m *SignedInfo) String() string { return proto.CompactTextString(m) }
func (*SignedInfo) ProtoMessage()    {}
func (*SignedInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{10}
}

func (m *SignedInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedInfo.Unmarshal(m, b)
}
func (m *SignedInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedInfo.Marshal(b, m, deterministic)
}
func (m *SignedInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedInfo.Merge(m, src)
}
func (m *SignedInfo) XXX_Size() int {
	return xxx_messageInfo_SignedInfo.Size(m)
}
func (m *SignedInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SignedInfo proto.InternalMessageInfo

func (m *SignedInfo) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

// Signature ...
type Signature struct {
	SignIndex            uint32   `protobuf:"varint,1,opt,name=sign_index,json=signIndex,proto3" json:"sign_index,omitempty"`
	Signature            string   `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{11}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetSignIndex() uint32 {
	if m != nil {
		return m.SignIndex
	}
	return 0
}

func (m *Signature) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

// Transfer ...
type Transfer struct {
	WalletId             string                            `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransferId           string                            `protobuf:"bytes,2,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	Coin                 gincoincglobalv1.Coin             `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TxId                 string                            `protobuf:"bytes,4,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TransferType         gincoincglobalv1.TransferType     `protobuf:"varint,5,opt,name=transfer_type,json=transferType,proto3,enum=gincoinc.global.v1.TransferType" json:"transfer_type,omitempty"`
	Value                float64                           `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string                            `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	PartnerWalletId      string                            `protobuf:"bytes,8,opt,name=partner_wallet_id,json=partnerWalletId,proto3" json:"partner_wallet_id,omitempty"`
	PartnerAddress       string                            `protobuf:"bytes,9,opt,name=partner_address,json=partnerAddress,proto3" json:"partner_address,omitempty"`
	State                gincoincglobalv1.TransactionState `protobuf:"varint,10,opt,name=state,proto3,enum=gincoinc.global.v1.TransactionState" json:"state,omitempty"`
	CreateTime           *timestamp.Timestamp              `protobuf:"bytes,11,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp              `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *Transfer) Reset()         { *m = Transfer{} }
func (m *Transfer) String() string { return proto.CompactTextString(m) }
func (*Transfer) ProtoMessage()    {}
func (*Transfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{12}
}

func (m *Transfer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transfer.Unmarshal(m, b)
}
func (m *Transfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transfer.Marshal(b, m, deterministic)
}
func (m *Transfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transfer.Merge(m, src)
}
func (m *Transfer) XXX_Size() int {
	return xxx_messageInfo_Transfer.Size(m)
}
func (m *Transfer) XXX_DiscardUnknown() {
	xxx_messageInfo_Transfer.DiscardUnknown(m)
}

var xxx_messageInfo_Transfer proto.InternalMessageInfo

func (m *Transfer) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *Transfer) GetTransferId() string {
	if m != nil {
		return m.TransferId
	}
	return ""
}

func (m *Transfer) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Transfer) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *Transfer) GetTransferType() gincoincglobalv1.TransferType {
	if m != nil {
		return m.TransferType
	}
	return gincoincglobalv1.TransferType_TRANSFER_TYPE_INVALID
}

func (m *Transfer) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Transfer) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *Transfer) GetPartnerWalletId() string {
	if m != nil {
		return m.PartnerWalletId
	}
	return ""
}

func (m *Transfer) GetPartnerAddress() string {
	if m != nil {
		return m.PartnerAddress
	}
	return ""
}

func (m *Transfer) GetState() gincoincglobalv1.TransactionState {
	if m != nil {
		return m.State
	}
	return gincoincglobalv1.TransactionState_TRANSACTION_STATE_INVALID
}

func (m *Transfer) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Transfer) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Rate struct {
	CoinType             gincoincglobalv1.Coin `protobuf:"varint,1,opt,name=coin_type,json=coinType,proto3,enum=gincoinc.global.v1.Coin" json:"coin_type,omitempty"`
	Jpy                  string                `protobuf:"bytes,2,opt,name=jpy,proto3" json:"jpy,omitempty"`
	Usd                  string                `protobuf:"bytes,3,opt,name=usd,proto3" json:"usd,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Rate) Reset()         { *m = Rate{} }
func (m *Rate) String() string { return proto.CompactTextString(m) }
func (*Rate) ProtoMessage()    {}
func (*Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{13}
}

func (m *Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rate.Unmarshal(m, b)
}
func (m *Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rate.Marshal(b, m, deterministic)
}
func (m *Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rate.Merge(m, src)
}
func (m *Rate) XXX_Size() int {
	return xxx_messageInfo_Rate.Size(m)
}
func (m *Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_Rate proto.InternalMessageInfo

func (m *Rate) GetCoinType() gincoincglobalv1.Coin {
	if m != nil {
		return m.CoinType
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Rate) GetJpy() string {
	if m != nil {
		return m.Jpy
	}
	return ""
}

func (m *Rate) GetUsd() string {
	if m != nil {
		return m.Usd
	}
	return ""
}

type Deactivatability struct {
	AccountId            string   `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Deactivatable        bool     `protobuf:"varint,2,opt,name=deactivatable,proto3" json:"deactivatable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Deactivatability) Reset()         { *m = Deactivatability{} }
func (m *Deactivatability) String() string { return proto.CompactTextString(m) }
func (*Deactivatability) ProtoMessage()    {}
func (*Deactivatability) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{14}
}

func (m *Deactivatability) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deactivatability.Unmarshal(m, b)
}
func (m *Deactivatability) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deactivatability.Marshal(b, m, deterministic)
}
func (m *Deactivatability) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deactivatability.Merge(m, src)
}
func (m *Deactivatability) XXX_Size() int {
	return xxx_messageInfo_Deactivatability.Size(m)
}
func (m *Deactivatability) XXX_DiscardUnknown() {
	xxx_messageInfo_Deactivatability.DiscardUnknown(m)
}

var xxx_messageInfo_Deactivatability proto.InternalMessageInfo

func (m *Deactivatability) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *Deactivatability) GetDeactivatable() bool {
	if m != nil {
		return m.Deactivatable
	}
	return false
}

type LabeledAddress struct {
	LabeledAddressId     string                `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	ProposedAddress      string                `protobuf:"bytes,5,opt,name=proposed_address,json=proposedAddress,proto3" json:"proposed_address,omitempty"`
	AddressReview        *AddressReview        `protobuf:"bytes,6,opt,name=address_review,json=addressReview,proto3" json:"address_review,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *LabeledAddress) Reset()         { *m = LabeledAddress{} }
func (m *LabeledAddress) String() string { return proto.CompactTextString(m) }
func (*LabeledAddress) ProtoMessage()    {}
func (*LabeledAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{15}
}

func (m *LabeledAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabeledAddress.Unmarshal(m, b)
}
func (m *LabeledAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabeledAddress.Marshal(b, m, deterministic)
}
func (m *LabeledAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabeledAddress.Merge(m, src)
}
func (m *LabeledAddress) XXX_Size() int {
	return xxx_messageInfo_LabeledAddress.Size(m)
}
func (m *LabeledAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_LabeledAddress.DiscardUnknown(m)
}

var xxx_messageInfo_LabeledAddress proto.InternalMessageInfo

func (m *LabeledAddress) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

func (m *LabeledAddress) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *LabeledAddress) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *LabeledAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *LabeledAddress) GetProposedAddress() string {
	if m != nil {
		return m.ProposedAddress
	}
	return ""
}

func (m *LabeledAddress) GetAddressReview() *AddressReview {
	if m != nil {
		return m.AddressReview
	}
	return nil
}

func (m *LabeledAddress) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *LabeledAddress) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type AddressReview struct {
	AddressReviewId      string   `protobuf:"bytes,1,opt,name=address_review_id,json=addressReviewId,proto3" json:"address_review_id,omitempty"`
	RequesterAccountId   string   `protobuf:"bytes,2,opt,name=requester_account_id,json=requesterAccountId,proto3" json:"requester_account_id,omitempty"`
	RequesterName        string   `protobuf:"bytes,3,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	ApproverAccountId    string   `protobuf:"bytes,4,opt,name=approver_account_id,json=approverAccountId,proto3" json:"approver_account_id,omitempty"`
	ApproverName         string   `protobuf:"bytes,5,opt,name=approver_name,json=approverName,proto3" json:"approver_name,omitempty"`
	AddressIsReviewed    bool     `protobuf:"varint,6,opt,name=address_is_reviewed,json=addressIsReviewed,proto3" json:"address_is_reviewed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddressReview) Reset()         { *m = AddressReview{} }
func (m *AddressReview) String() string { return proto.CompactTextString(m) }
func (*AddressReview) ProtoMessage()    {}
func (*AddressReview) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{16}
}

func (m *AddressReview) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressReview.Unmarshal(m, b)
}
func (m *AddressReview) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressReview.Marshal(b, m, deterministic)
}
func (m *AddressReview) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressReview.Merge(m, src)
}
func (m *AddressReview) XXX_Size() int {
	return xxx_messageInfo_AddressReview.Size(m)
}
func (m *AddressReview) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressReview.DiscardUnknown(m)
}

var xxx_messageInfo_AddressReview proto.InternalMessageInfo

func (m *AddressReview) GetAddressReviewId() string {
	if m != nil {
		return m.AddressReviewId
	}
	return ""
}

func (m *AddressReview) GetRequesterAccountId() string {
	if m != nil {
		return m.RequesterAccountId
	}
	return ""
}

func (m *AddressReview) GetRequesterName() string {
	if m != nil {
		return m.RequesterName
	}
	return ""
}

func (m *AddressReview) GetApproverAccountId() string {
	if m != nil {
		return m.ApproverAccountId
	}
	return ""
}

func (m *AddressReview) GetApproverName() string {
	if m != nil {
		return m.ApproverName
	}
	return ""
}

func (m *AddressReview) GetAddressIsReviewed() bool {
	if m != nil {
		return m.AddressIsReviewed
	}
	return false
}

type Whitelist struct {
	WhitelistId          string                `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Addresses            []*LabeledAddress     `protobuf:"bytes,4,rep,name=addresses,proto3" json:"addresses,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Whitelist) Reset()         { *m = Whitelist{} }
func (m *Whitelist) String() string { return proto.CompactTextString(m) }
func (*Whitelist) ProtoMessage()    {}
func (*Whitelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{17}
}

func (m *Whitelist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Whitelist.Unmarshal(m, b)
}
func (m *Whitelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Whitelist.Marshal(b, m, deterministic)
}
func (m *Whitelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Whitelist.Merge(m, src)
}
func (m *Whitelist) XXX_Size() int {
	return xxx_messageInfo_Whitelist.Size(m)
}
func (m *Whitelist) XXX_DiscardUnknown() {
	xxx_messageInfo_Whitelist.DiscardUnknown(m)
}

var xxx_messageInfo_Whitelist proto.InternalMessageInfo

func (m *Whitelist) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *Whitelist) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Whitelist) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Whitelist) GetAddresses() []*LabeledAddress {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *Whitelist) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Whitelist) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type TransferLimit struct {
	TransferLimitId      string                `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	HourlyLimit          int64                 `protobuf:"varint,4,opt,name=hourly_limit,json=hourlyLimit,proto3" json:"hourly_limit,omitempty"`
	DailyLimit           int64                 `protobuf:"varint,5,opt,name=daily_limit,json=dailyLimit,proto3" json:"daily_limit,omitempty"`
	OneTimeLimit         int64                 `protobuf:"varint,6,opt,name=one_time_limit,json=oneTimeLimit,proto3" json:"one_time_limit,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *TransferLimit) Reset()         { *m = TransferLimit{} }
func (m *TransferLimit) String() string { return proto.CompactTextString(m) }
func (*TransferLimit) ProtoMessage()    {}
func (*TransferLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{18}
}

func (m *TransferLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLimit.Unmarshal(m, b)
}
func (m *TransferLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLimit.Marshal(b, m, deterministic)
}
func (m *TransferLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLimit.Merge(m, src)
}
func (m *TransferLimit) XXX_Size() int {
	return xxx_messageInfo_TransferLimit.Size(m)
}
func (m *TransferLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLimit.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLimit proto.InternalMessageInfo

func (m *TransferLimit) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *TransferLimit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TransferLimit) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *TransferLimit) GetHourlyLimit() int64 {
	if m != nil {
		return m.HourlyLimit
	}
	return 0
}

func (m *TransferLimit) GetDailyLimit() int64 {
	if m != nil {
		return m.DailyLimit
	}
	return 0
}

func (m *TransferLimit) GetOneTimeLimit() int64 {
	if m != nil {
		return m.OneTimeLimit
	}
	return 0
}

func (m *TransferLimit) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *TransferLimit) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type Policy struct {
	PolicyId             string                `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	PolicyType           PolicyType            `protobuf:"varint,2,opt,name=policy_type,json=policyType,proto3,enum=adamant.global.v1.PolicyType" json:"policy_type,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	IsBasePolicy         bool                  `protobuf:"varint,4,opt,name=is_base_policy,json=isBasePolicy,proto3" json:"is_base_policy,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,5,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Whitelist            *Whitelist            `protobuf:"bytes,6,opt,name=whitelist,proto3" json:"whitelist,omitempty"`
	TransferLimit        *TransferLimit        `protobuf:"bytes,7,opt,name=transfer_limit,json=transferLimit,proto3" json:"transfer_limit,omitempty"`
	CreateTime           *timestamp.Timestamp  `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime           *timestamp.Timestamp  `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{19}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *Policy) GetPolicyType() PolicyType {
	if m != nil {
		return m.PolicyType
	}
	return PolicyType_POLICY_TYPE_INVALID
}

func (m *Policy) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Policy) GetIsBasePolicy() bool {
	if m != nil {
		return m.IsBasePolicy
	}
	return false
}

func (m *Policy) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *Policy) GetWhitelist() *Whitelist {
	if m != nil {
		return m.Whitelist
	}
	return nil
}

func (m *Policy) GetTransferLimit() *TransferLimit {
	if m != nil {
		return m.TransferLimit
	}
	return nil
}

func (m *Policy) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *Policy) GetUpdateTime() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateTime
	}
	return nil
}

type RequestTxOutput struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value                float64  `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTxOutput) Reset()         { *m = RequestTxOutput{} }
func (m *RequestTxOutput) String() string { return proto.CompactTextString(m) }
func (*RequestTxOutput) ProtoMessage()    {}
func (*RequestTxOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_370ec8378ff93ffa, []int{20}
}

func (m *RequestTxOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTxOutput.Unmarshal(m, b)
}
func (m *RequestTxOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTxOutput.Marshal(b, m, deterministic)
}
func (m *RequestTxOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTxOutput.Merge(m, src)
}
func (m *RequestTxOutput) XXX_Size() int {
	return xxx_messageInfo_RequestTxOutput.Size(m)
}
func (m *RequestTxOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTxOutput.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTxOutput proto.InternalMessageInfo

func (m *RequestTxOutput) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RequestTxOutput) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Wallet)(nil), "adamant.global.v1.Wallet")
	proto.RegisterType((*WalletMember)(nil), "adamant.global.v1.WalletMember")
	proto.RegisterType((*Key)(nil), "adamant.global.v1.Key")
	proto.RegisterType((*Address)(nil), "adamant.global.v1.Address")
	proto.RegisterType((*Transaction)(nil), "adamant.global.v1.Transaction")
	proto.RegisterType((*TransactionMember)(nil), "adamant.global.v1.TransactionMember")
	proto.RegisterType((*TxInput)(nil), "adamant.global.v1.TxInput")
	proto.RegisterType((*TxOutput)(nil), "adamant.global.v1.TxOutput")
	proto.RegisterType((*SignInfo)(nil), "adamant.global.v1.SignInfo")
	proto.RegisterType((*SignTxInput)(nil), "adamant.global.v1.SignTxInput")
	proto.RegisterType((*SignedInfo)(nil), "adamant.global.v1.SignedInfo")
	proto.RegisterType((*Signature)(nil), "adamant.global.v1.Signature")
	proto.RegisterType((*Transfer)(nil), "adamant.global.v1.Transfer")
	proto.RegisterType((*Rate)(nil), "adamant.global.v1.Rate")
	proto.RegisterType((*Deactivatability)(nil), "adamant.global.v1.Deactivatability")
	proto.RegisterType((*LabeledAddress)(nil), "adamant.global.v1.LabeledAddress")
	proto.RegisterType((*AddressReview)(nil), "adamant.global.v1.AddressReview")
	proto.RegisterType((*Whitelist)(nil), "adamant.global.v1.Whitelist")
	proto.RegisterType((*TransferLimit)(nil), "adamant.global.v1.TransferLimit")
	proto.RegisterType((*Policy)(nil), "adamant.global.v1.Policy")
	proto.RegisterType((*RequestTxOutput)(nil), "adamant.global.v1.RequestTxOutput")
}

func init() {
	proto.RegisterFile("gincoinc/adamant/global/v1/adamantglobalv1/model.proto", fileDescriptor_370ec8378ff93ffa)
}

var fileDescriptor_370ec8378ff93ffa = []byte{
	// 1851 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x93, 0x1b, 0x47,
	0x15, 0xaf, 0x91, 0x46, 0xd2, 0xcc, 0x1b, 0x7d, 0x8e, 0x4d, 0x98, 0xd8, 0x84, 0x95, 0x95, 0x75,
	0x65, 0x71, 0x65, 0x25, 0xbc, 0xb1, 0x49, 0x6c, 0x28, 0x53, 0xab, 0x24, 0xa4, 0x84, 0x9d, 0x00,
	0x63, 0x17, 0xae, 0x22, 0x15, 0xa6, 0x5a, 0x9a, 0x5e, 0xa9, 0xf1, 0x68, 0x46, 0xcc, 0x8c, 0xe4,
	0x15, 0x60, 0x0e, 0x70, 0xe1, 0xc4, 0x31, 0x07, 0x38, 0x73, 0xe6, 0xbf, 0xe1, 0x6f, 0xc8, 0x7f,
	0x40, 0x91, 0x13, 0xd5, 0x5f, 0xf3, 0xa1, 0x95, 0xb4, 0x25, 0xef, 0x6e, 0xa5, 0x72, 0xeb, 0x7e,
	0xfd, 0xba, 0xdf, 0xd7, 0xef, 0xbd, 0xd7, 0x3d, 0x03, 0x3f, 0x1a, 0x13, 0x7f, 0x14, 0x10, 0x7f,
	0xd4, 0x43, 0x2e, 0x9a, 0x22, 0x3f, 0xee, 0x8d, 0xbd, 0x60, 0x88, 0xbc, 0xde, 0xe2, 0xae, 0xa4,
	0x70, 0xc2, 0xe2, 0x6e, 0x6f, 0x1a, 0xb8, 0xd8, 0xeb, 0xce, 0xc2, 0x20, 0x0e, 0xcc, 0x96, 0x58,
	0xec, 0xf2, 0xd5, 0xee, 0xe2, 0xee, 0x8d, 0xbd, 0x71, 0x10, 0x8c, 0x3d, 0xdc, 0x63, 0x0c, 0xc3,
	0xf9, 0x49, 0x2f, 0x26, 0x53, 0x1c, 0xc5, 0x68, 0x3a, 0xe3, 0x7b, 0x6e, 0x7c, 0x77, 0x81, 0x3c,
	0xe2, 0xa2, 0x18, 0xf7, 0xe4, 0x40, 0x2c, 0x74, 0x13, 0x25, 0x52, 0xe1, 0x92, 0x94, 0x48, 0xc7,
	0xfe, 0x7c, 0x2a, 0xf8, 0xef, 0xef, 0xa0, 0x74, 0xba, 0xad, 0xf3, 0x65, 0x09, 0xca, 0xcf, 0x91,
	0xe7, 0xe1, 0xd8, 0xbc, 0x09, 0xfa, 0x4b, 0x36, 0x72, 0x88, 0x6b, 0x29, 0x6d, 0xe5, 0x40, 0xb7,
	0x35, 0x4e, 0x18, 0xb8, 0xa6, 0x09, 0xaa, 0x8f, 0xa6, 0xd8, 0x2a, 0x30, 0x3a, 0x1b, 0x9b, 0xef,
	0x82, 0x4a, 0x25, 0x5a, 0xc5, 0xb6, 0x72, 0x50, 0x3f, 0xb2, 0x12, 0x8d, 0x53, 0xfb, 0xbb, 0x1f,
	0x06, 0xc4, 0xb7, 0x19, 0x97, 0xf9, 0x08, 0x0c, 0x71, 0x7c, 0xbc, 0x9c, 0x61, 0x4b, 0x65, 0x9b,
	0xde, 0xea, 0x9e, 0xf1, 0x59, 0x97, 0xab, 0xf3, 0x6c, 0x39, 0xc3, 0x36, 0xbc, 0x4c, 0xc6, 0x66,
	0x1f, 0xaa, 0xc8, 0x75, 0x43, 0x1c, 0x45, 0xfc, 0x80, 0x12, 0x3b, 0x60, 0x6f, 0x9d, 0xd4, 0x63,
	0xce, 0xc7, 0x8e, 0x30, 0x50, 0x3a, 0x31, 0xab, 0xa0, 0x4c, 0xad, 0x72, 0x5b, 0x39, 0xa8, 0xd9,
	0xca, 0x94, 0xce, 0x7c, 0xab, 0xc2, 0x67, 0xbe, 0x79, 0x0f, 0x4a, 0x51, 0x8c, 0x62, 0x6c, 0x69,
	0xec, 0xe0, 0xef, 0x6f, 0xd4, 0xec, 0x29, 0xe5, 0xb2, 0x39, 0xb3, 0x79, 0x07, 0xd4, 0x17, 0x78,
	0x19, 0x59, 0x7a, 0xbb, 0x78, 0x60, 0x1c, 0xbd, 0xb1, 0x66, 0xd3, 0x63, 0xbc, 0xb4, 0x19, 0x8f,
	0xf9, 0x00, 0x2a, 0x53, 0x3c, 0x1d, 0xe2, 0x30, 0xb2, 0x80, 0xb1, 0xef, 0x6d, 0x94, 0xf1, 0x29,
	0xe3, 0xb3, 0x25, 0xbf, 0x69, 0x41, 0x65, 0x88, 0x3c, 0xe4, 0x8f, 0xb0, 0x65, 0xb4, 0x95, 0x03,
	0xc5, 0x96, 0x53, 0xf3, 0x36, 0xd4, 0xa3, 0x38, 0x24, 0xfe, 0xd8, 0x91, 0x0c, 0x55, 0x16, 0xa2,
	0x1a, 0xa7, 0xf6, 0x05, 0x9b, 0x05, 0x15, 0xe1, 0x08, 0xab, 0xc6, 0xd6, 0xe5, 0x94, 0x86, 0x7d,
	0x16, 0x78, 0x64, 0xb4, 0xa4, 0x61, 0xaf, 0xf3, 0xb0, 0x73, 0xc2, 0xc0, 0x35, 0x7f, 0x0c, 0xc6,
	0x28, 0xc4, 0x28, 0xc6, 0x0e, 0x05, 0xae, 0xd5, 0x68, 0x2b, 0x07, 0xc6, 0xd1, 0x8d, 0x2e, 0x47,
	0x75, 0x57, 0xa2, 0xba, 0xfb, 0x4c, 0xa2, 0xda, 0x06, 0xce, 0x4e, 0x09, 0x74, 0xf3, 0x7c, 0xe6,
	0x26, 0x9b, 0x9b, 0xe7, 0x6f, 0xe6, 0xec, 0x94, 0xd0, 0xf9, 0xaf, 0x02, 0xd5, 0xac, 0x2f, 0xcc,
	0xb7, 0x00, 0xd0, 0x68, 0x14, 0xcc, 0xfd, 0x0c, 0x3e, 0x75, 0x41, 0x19, 0xb8, 0xe6, 0x31, 0x54,
	0xe5, 0x32, 0x83, 0x47, 0x61, 0x63, 0x14, 0x8f, 0x39, 0x9b, 0x40, 0x47, 0x3a, 0x49, 0x30, 0x5e,
	0xcc, 0x60, 0xfc, 0x3a, 0x94, 0xf0, 0x14, 0x11, 0x8f, 0xe1, 0x55, 0xb7, 0xf9, 0xc4, 0xec, 0x81,
	0x1a, 0x06, 0x9e, 0xc4, 0xe0, 0xcd, 0x35, 0x42, 0xec, 0xc0, 0xc3, 0x4c, 0x02, 0x63, 0x34, 0xef,
	0x40, 0x8b, 0x44, 0xce, 0x0b, 0xbc, 0x74, 0x42, 0x3c, 0x26, 0x51, 0x8c, 0x43, 0xec, 0x32, 0x20,
	0x6a, 0x76, 0x83, 0x44, 0x14, 0x22, 0x09, 0xb9, 0xf3, 0x4f, 0x05, 0x8a, 0x8f, 0xf1, 0x72, 0x7b,
	0x3e, 0xe6, 0xbd, 0x51, 0x38, 0xcf, 0x1b, 0xc5, 0xdd, 0xbd, 0xf1, 0x1d, 0x28, 0x53, 0x7d, 0x89,
	0x2b, 0x4d, 0x7f, 0x81, 0x97, 0x03, 0xb7, 0xf3, 0x17, 0x15, 0x2a, 0xc7, 0x29, 0x74, 0xb6, 0x6b,
	0x28, 0xf2, 0x35, 0xa3, 0x21, 0xa7, 0x0c, 0xdc, 0x1d, 0x8b, 0x47, 0x06, 0xbe, 0x6a, 0x1e, 0xbe,
	0xd7, 0xa1, 0x44, 0x7c, 0x17, 0x9f, 0xb2, 0x58, 0xd4, 0x6c, 0x3e, 0xc9, 0xe6, 0x4b, 0xf9, 0xbc,
	0x7c, 0xa9, 0xac, 0xcb, 0x97, 0xfb, 0xf9, 0x6a, 0xb0, 0x2e, 0x53, 0x85, 0x17, 0x72, 0xe5, 0x60,
	0xb5, 0x48, 0xe9, 0xaf, 0x51, 0xa4, 0xde, 0x81, 0x46, 0x84, 0x7f, 0x3f, 0xc7, 0xfe, 0x08, 0x3b,
	0xfe, 0x9c, 0x62, 0xdf, 0x02, 0x66, 0x5b, 0x5d, 0x92, 0x3f, 0x63, 0xd4, 0xd5, 0xe4, 0x34, 0x2e,
	0x92, 0x9c, 0xd5, 0x9d, 0x92, 0xf3, 0x3f, 0x25, 0x30, 0x9e, 0x85, 0xc8, 0x8f, 0xd0, 0x28, 0x26,
	0x81, 0xbf, 0x1d, 0x08, 0xb7, 0xa1, 0x1e, 0xa7, 0xbc, 0x29, 0x18, 0x6a, 0x19, 0xea, 0xce, 0x80,
	0xb8, 0x06, 0xa5, 0xf8, 0x34, 0x05, 0xa7, 0x1a, 0x9f, 0x0e, 0xdc, 0x2c, 0x4a, 0x4a, 0x67, 0x50,
	0xb2, 0x40, 0xde, 0x5c, 0xa2, 0x81, 0x4f, 0xcc, 0x5b, 0x50, 0x15, 0x58, 0xe0, 0x8b, 0x1c, 0x09,
	0x06, 0xa7, 0xfd, 0x9a, 0xb1, 0x34, 0xa1, 0x78, 0x82, 0x39, 0x0a, 0x14, 0x9b, 0x0e, 0x29, 0xae,
	0xc5, 0x26, 0xba, 0xa0, 0x73, 0x5c, 0x73, 0xca, 0xcf, 0x30, 0x36, 0xdf, 0x04, 0xed, 0x04, 0x63,
	0x27, 0xa4, 0xd8, 0xa1, 0x61, 0x53, 0xed, 0xca, 0x09, 0xc6, 0x36, 0x05, 0xc7, 0x03, 0x89, 0x29,
	0x83, 0x99, 0xf8, 0xf6, 0x1a, 0x4c, 0x65, 0x9c, 0x9a, 0xc3, 0xd5, 0xfb, 0x60, 0x44, 0x64, 0xec,
	0x63, 0xd7, 0x61, 0xdd, 0xa6, 0xba, 0xb5, 0xdb, 0x00, 0x67, 0x7d, 0x4c, 0x7b, 0xce, 0xfb, 0xa0,
	0x53, 0x3f, 0xf9, 0xb3, 0x79, 0x4c, 0x2b, 0x7f, 0x91, 0x05, 0x79, 0x8d, 0xdc, 0xd3, 0x01, 0x65,
	0xb1, 0xb5, 0x98, 0x0f, 0x22, 0xf3, 0x21, 0x40, 0x7c, 0xea, 0x04, 0xf3, 0x98, 0xed, 0xac, 0xb3,
	0x9d, 0x37, 0xd7, 0xee, 0xfc, 0x05, 0xe3, 0xb1, 0xf5, 0x58, 0x8c, 0x22, 0xf3, 0x51, 0xda, 0xe8,
	0x1a, 0x6c, 0xe3, 0xfe, 0x76, 0x53, 0x57, 0xbb, 0xdd, 0x0a, 0xb0, 0x9b, 0x17, 0x01, 0x76, 0x6b,
	0x27, 0x60, 0x7f, 0xa5, 0x40, 0xeb, 0x8c, 0x62, 0xdf, 0xee, 0xd6, 0xf3, 0x06, 0x94, 0x39, 0x1e,
	0x44, 0xbf, 0x11, 0xb3, 0x4e, 0x08, 0x15, 0x11, 0xf5, 0x34, 0x99, 0x94, 0x4c, 0x32, 0xbd, 0x09,
	0x1a, 0x43, 0x0e, 0xad, 0xad, 0x05, 0x56, 0x7f, 0x2a, 0x14, 0x1c, 0xb4, 0xba, 0x26, 0xd9, 0x54,
	0xdc, 0x96, 0x4d, 0xea, 0x99, 0x6c, 0xea, 0xfc, 0x01, 0x34, 0x89, 0x97, 0x6c, 0xb2, 0x2a, 0x1b,
	0x92, 0xb5, 0xb0, 0xed, 0xf8, 0xe2, 0xd9, 0x64, 0xbd, 0x09, 0x3a, 0x89, 0x9c, 0xd1, 0x04, 0xf9,
	0x63, 0x2e, 0x5e, 0xb3, 0x35, 0x12, 0x7d, 0xc8, 0xe6, 0x9d, 0xaf, 0x0a, 0xa0, 0x3d, 0x25, 0x63,
	0x7f, 0xe0, 0x9f, 0x04, 0x97, 0x52, 0xb0, 0xd2, 0x06, 0x59, 0xcc, 0x34, 0x48, 0x0a, 0x96, 0x89,
	0xeb, 0x88, 0xe0, 0x32, 0x2d, 0x6a, 0xb6, 0x3e, 0x71, 0x45, 0xe8, 0x93, 0x32, 0x57, 0xda, 0xad,
	0xcc, 0x95, 0x33, 0x91, 0xa1, 0x9e, 0x20, 0x63, 0xdf, 0x99, 0xe2, 0x28, 0x42, 0xe3, 0xb4, 0x6c,
	0x91, 0xb1, 0xff, 0x29, 0x27, 0x51, 0xfb, 0x26, 0xae, 0xf4, 0x84, 0xc6, 0x74, 0xd0, 0x26, 0x2e,
	0xf7, 0x04, 0x8d, 0xec, 0xc4, 0x15, 0x91, 0xd5, 0x79, 0x64, 0x27, 0x2e, 0x8f, 0xec, 0x47, 0x50,
	0x67, 0x47, 0xa7, 0x35, 0x83, 0xdf, 0x54, 0xd7, 0x81, 0x99, 0x3a, 0x53, 0xd6, 0x0d, 0xa6, 0x90,
	0x98, 0x44, 0x9d, 0xbf, 0x2b, 0x60, 0x64, 0x56, 0xcd, 0x7d, 0xa8, 0xcb, 0x03, 0x85, 0x58, 0x85,
	0x89, 0xad, 0x8a, 0x6a, 0xc3, 0x65, 0xaf, 0x9a, 0x55, 0x38, 0xc7, 0xac, 0xe2, 0x16, 0xb3, 0xd4,
	0x9c, 0x59, 0x9d, 0x9f, 0x03, 0x3c, 0x65, 0xa8, 0x67, 0xc1, 0xff, 0x09, 0xb0, 0x0a, 0x89, 0xe2,
	0x79, 0x88, 0x29, 0xf8, 0xa8, 0x81, 0xdf, 0xdb, 0x60, 0x20, 0x63, 0xb2, 0x33, 0xfc, 0x9d, 0x5f,
	0x81, 0x9e, 0x2c, 0xb0, 0x66, 0x40, 0x75, 0xce, 0x5a, 0xa5, 0x47, 0x0c, 0x65, 0xd4, 0xa4, 0xdb,
	0xa0, 0x27, 0x3b, 0xb9, 0x3d, 0xfd, 0xca, 0xd7, 0x7d, 0x35, 0x2c, 0x34, 0x15, 0x3b, 0x5d, 0xe9,
	0x7c, 0xa9, 0x82, 0xc6, 0xaa, 0xce, 0x09, 0x0e, 0xb7, 0x43, 0x73, 0x0f, 0x8c, 0x58, 0x30, 0xa6,
	0xb8, 0x04, 0x49, 0xba, 0x9c, 0x2e, 0xfa, 0x31, 0xd4, 0x12, 0x19, 0x99, 0x97, 0x56, 0x7b, 0xdd,
	0x59, 0x52, 0x6b, 0x56, 0x6f, 0xaa, 0x71, 0x66, 0xf6, 0xfa, 0x2d, 0xf7, 0x0e, 0xb4, 0x66, 0x28,
	0x8c, 0x7d, 0x1c, 0x3a, 0xa9, 0x23, 0x34, 0xc6, 0xd7, 0x10, 0x0b, 0xcf, 0xa5, 0x3f, 0xde, 0x01,
	0x49, 0x72, 0x64, 0x31, 0xe1, 0x1d, 0xb9, 0x2e, 0xc8, 0xf2, 0xaa, 0xfa, 0x50, 0xf6, 0x5e, 0x60,
	0xc6, 0xec, 0x6f, 0x34, 0x66, 0x4d, 0xf3, 0xfd, 0xe6, 0xee, 0x59, 0x08, 0x54, 0x76, 0x73, 0xb8,
	0x0f, 0x3a, 0x55, 0x96, 0x87, 0x43, 0x39, 0x27, 0xb4, 0x1a, 0xa5, 0xb2, 0x10, 0x34, 0xa1, 0xf8,
	0xbb, 0xd9, 0x52, 0xa0, 0x84, 0x0e, 0x29, 0x65, 0x1e, 0xc9, 0x82, 0x45, 0x87, 0x9d, 0x7f, 0x29,
	0xd0, 0xfc, 0x08, 0x53, 0xab, 0x17, 0x28, 0x46, 0x43, 0xe2, 0x91, 0x78, 0x69, 0xbe, 0x38, 0xdb,
	0xf0, 0xfa, 0x4f, 0xbe, 0xee, 0x0f, 0xc2, 0x4f, 0x8e, 0x3e, 0xfe, 0xed, 0xe7, 0x3f, 0x3c, 0x7c,
	0x80, 0x0e, 0x4f, 0xbe, 0xf8, 0xe3, 0x07, 0xaf, 0x0e, 0x93, 0xf1, 0xbd, 0x57, 0x87, 0xf7, 0x92,
	0xc9, 0x7b, 0xaf, 0x0e, 0x3f, 0xff, 0xe0, 0x01, 0x1a, 0x7e, 0x91, 0xa3, 0xc8, 0xf1, 0xdd, 0xa3,
	0x57, 0xfb, 0xd9, 0xf6, 0xb9, 0x0f, 0x35, 0x37, 0x55, 0xc0, 0xe3, 0x89, 0xa2, 0xd9, 0x79, 0x62,
	0xe7, 0x6f, 0x45, 0xa8, 0x3f, 0x41, 0x43, 0xec, 0x61, 0x57, 0xc6, 0xf4, 0x5d, 0x30, 0x3d, 0x4e,
	0x71, 0x32, 0x2f, 0x0d, 0x9e, 0x32, 0x4d, 0x2f, 0xc7, 0x7b, 0x29, 0x5f, 0x30, 0x36, 0x3f, 0x42,
	0x7e, 0x00, 0xcd, 0x59, 0x18, 0xcc, 0x82, 0x28, 0x55, 0x45, 0xdc, 0x40, 0x1b, 0x92, 0x2e, 0x95,
	0xfe, 0x04, 0xea, 0x52, 0xd9, 0x10, 0x2f, 0x08, 0x7e, 0xc9, 0xf2, 0xc3, 0x38, 0x6a, 0x6f, 0x7e,
	0x61, 0xd8, 0x8c, 0xcf, 0xae, 0xa1, 0xec, 0x74, 0x15, 0x95, 0x95, 0x8b, 0xa0, 0x52, 0xdb, 0x09,
	0x95, 0x7f, 0x55, 0xa1, 0x96, 0x53, 0xcd, 0x3c, 0x85, 0x56, 0xde, 0xa8, 0xab, 0x82, 0x4d, 0x23,
	0xe7, 0x83, 0x81, 0x6b, 0xfe, 0x19, 0xae, 0x87, 0xf4, 0x55, 0x44, 0xdf, 0xce, 0xce, 0xea, 0x8b,
	0xf8, 0x92, 0x85, 0x9b, 0x89, 0xa4, 0xe3, 0x04, 0xbc, 0xb7, 0xa1, 0x9e, 0xca, 0xcf, 0x5c, 0xe1,
	0x6a, 0x09, 0xf5, 0x33, 0x0a, 0xb4, 0x3f, 0xc1, 0x35, 0x34, 0x9b, 0x85, 0xc1, 0x22, 0xaf, 0xa5,
	0x7a, 0x05, 0x5a, 0xb6, 0xa4, 0xa0, 0x54, 0xc9, 0xb7, 0xa1, 0x96, 0x48, 0x67, 0x3a, 0x72, 0x6c,
	0x56, 0x25, 0x91, 0xa9, 0xd8, 0x85, 0x6b, 0x49, 0x16, 0xc9, 0x30, 0x26, 0x97, 0x46, 0x19, 0xde,
	0x81, 0xf0, 0x3c, 0x76, 0x3b, 0xff, 0x2b, 0x80, 0xfe, 0x7c, 0x42, 0x62, 0xec, 0x91, 0x28, 0x36,
	0x03, 0xa8, 0xbe, 0x94, 0x93, 0xab, 0x0a, 0xbe, 0x91, 0x48, 0xb8, 0x94, 0x74, 0xfe, 0x29, 0xc8,
	0xcf, 0x11, 0x98, 0x26, 0x34, 0xbd, 0x05, 0xdc, 0x5a, 0x93, 0x84, 0xf9, 0xa2, 0x63, 0xa7, 0x7b,
	0x56, 0x33, 0xb0, 0x74, 0x91, 0x0c, 0x2c, 0xef, 0x94, 0x81, 0xff, 0x2e, 0x42, 0x4d, 0xb6, 0xde,
	0x27, 0x64, 0x4a, 0x62, 0x9a, 0x81, 0x49, 0xd3, 0xf6, 0x28, 0xe5, 0xca, 0x32, 0x30, 0xce, 0xca,
	0xbd, 0x94, 0x40, 0xdc, 0x82, 0xea, 0x24, 0x98, 0x87, 0xde, 0x92, 0x6b, 0xce, 0xb2, 0xa2, 0x68,
	0x1b, 0x9c, 0xc6, 0xcd, 0xdb, 0x03, 0xc3, 0x45, 0x24, 0xe1, 0x28, 0x31, 0x0e, 0x60, 0x24, 0xce,
	0xb0, 0x0f, 0xf5, 0xc0, 0xe7, 0xbe, 0x14, 0x3c, 0x65, 0xc6, 0x53, 0x0d, 0x7c, 0xe6, 0x32, 0xce,
	0xf5, 0xcd, 0xd5, 0xcc, 0x7f, 0xa8, 0x50, 0xfe, 0x25, 0xfb, 0xaa, 0x6a, 0x92, 0xec, 0x07, 0xd7,
	0xab, 0x08, 0x51, 0xfa, 0xf9, 0xf6, 0x11, 0x18, 0x42, 0x54, 0xe6, 0x61, 0xba, 0xee, 0x9b, 0x3b,
	0x57, 0x8d, 0x7f, 0x73, 0x9f, 0x25, 0xe3, 0xb5, 0xcf, 0xd2, 0x7d, 0xa8, 0x93, 0xc8, 0x19, 0xa2,
	0x08, 0x3b, 0x9c, 0x53, 0xbc, 0xb4, 0xaa, 0x24, 0xea, 0xa3, 0x08, 0x0b, 0x23, 0x77, 0x7b, 0xe6,
	0x3c, 0x04, 0x3d, 0xc9, 0x6d, 0x91, 0x0a, 0xeb, 0x2e, 0xe4, 0x49, 0xb9, 0xb1, 0x53, 0x76, 0xda,
	0x50, 0xf3, 0xc8, 0x17, 0x61, 0x6d, 0x6f, 0xfa, 0xe6, 0x20, 0xb1, 0x6b, 0xd7, 0x72, 0x50, 0x5e,
	0x05, 0x87, 0x76, 0x11, 0x70, 0xe8, 0x3b, 0x81, 0xe3, 0x18, 0x1a, 0x36, 0x6f, 0x17, 0xaf, 0xfb,
	0x3a, 0xee, 0xb7, 0x7e, 0xd3, 0x58, 0xf9, 0xcb, 0x33, 0x2c, 0x33, 0xa9, 0xef, 0xfd, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0xfe, 0x1c, 0x3d, 0xf6, 0xcf, 0x1a, 0x00, 0x00,
}
