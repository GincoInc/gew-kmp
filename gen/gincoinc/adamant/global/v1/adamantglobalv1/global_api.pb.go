// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

package adamantglobalv1

import (
	context "context"
	fmt "fmt"
	gincoincglobalv1 "github.com/GincoInc/gew-kmp/gen/gincoinc/global/v1/gincoincglobalv1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ApproveWalletRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApproveWalletRequest) Reset()         { *m = ApproveWalletRequest{} }
func (m *ApproveWalletRequest) String() string { return proto.CompactTextString(m) }
func (*ApproveWalletRequest) ProtoMessage()    {}
func (*ApproveWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{0}
}

func (m *ApproveWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveWalletRequest.Unmarshal(m, b)
}
func (m *ApproveWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveWalletRequest.Marshal(b, m, deterministic)
}
func (m *ApproveWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveWalletRequest.Merge(m, src)
}
func (m *ApproveWalletRequest) XXX_Size() int {
	return xxx_messageInfo_ApproveWalletRequest.Size(m)
}
func (m *ApproveWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveWalletRequest proto.InternalMessageInfo

func (m *ApproveWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type ApproveTransactionRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApproveTransactionRequest) Reset()         { *m = ApproveTransactionRequest{} }
func (m *ApproveTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*ApproveTransactionRequest) ProtoMessage()    {}
func (*ApproveTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{1}
}

func (m *ApproveTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApproveTransactionRequest.Unmarshal(m, b)
}
func (m *ApproveTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApproveTransactionRequest.Marshal(b, m, deterministic)
}
func (m *ApproveTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApproveTransactionRequest.Merge(m, src)
}
func (m *ApproveTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_ApproveTransactionRequest.Size(m)
}
func (m *ApproveTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApproveTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApproveTransactionRequest proto.InternalMessageInfo

func (m *ApproveTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ApproveTransactionRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type CreateWalletRequest struct {
	WalletName  string                       `protobuf:"bytes,1,opt,name=wallet_name,json=walletName,proto3" json:"wallet_name,omitempty"`
	Coin        gincoincglobalv1.Coin        `protobuf:"varint,2,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	WalletType  WalletType                   `protobuf:"varint,3,opt,name=wallet_type,json=walletType,proto3,enum=adamant.global.v1.WalletType" json:"wallet_type,omitempty"`
	AddressType gincoincglobalv1.AddressType `protobuf:"varint,4,opt,name=address_type,json=addressType,proto3,enum=gincoinc.global.v1.AddressType" json:"address_type,omitempty"`
	// and must be m <= n
	M       uint32   `protobuf:"varint,5,opt,name=m,proto3" json:"m,omitempty"`
	N       uint32   `protobuf:"varint,6,opt,name=n,proto3" json:"n,omitempty"`
	Members []string `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"`
	// optional
	PolicyId             string   `protobuf:"bytes,8,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWalletRequest) Reset()         { *m = CreateWalletRequest{} }
func (m *CreateWalletRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWalletRequest) ProtoMessage()    {}
func (*CreateWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{2}
}

func (m *CreateWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWalletRequest.Unmarshal(m, b)
}
func (m *CreateWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWalletRequest.Marshal(b, m, deterministic)
}
func (m *CreateWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWalletRequest.Merge(m, src)
}
func (m *CreateWalletRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWalletRequest.Size(m)
}
func (m *CreateWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWalletRequest proto.InternalMessageInfo

func (m *CreateWalletRequest) GetWalletName() string {
	if m != nil {
		return m.WalletName
	}
	return ""
}

func (m *CreateWalletRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *CreateWalletRequest) GetWalletType() WalletType {
	if m != nil {
		return m.WalletType
	}
	return WalletType_WALLET_TYPE_INVALID
}

func (m *CreateWalletRequest) GetAddressType() gincoincglobalv1.AddressType {
	if m != nil {
		return m.AddressType
	}
	return gincoincglobalv1.AddressType_ADDRESS_TYPE_INVALID
}

func (m *CreateWalletRequest) GetM() uint32 {
	if m != nil {
		return m.M
	}
	return 0
}

func (m *CreateWalletRequest) GetN() uint32 {
	if m != nil {
		return m.N
	}
	return 0
}

func (m *CreateWalletRequest) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *CreateWalletRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

type CreateWalletResponse struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWalletResponse) Reset()         { *m = CreateWalletResponse{} }
func (m *CreateWalletResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWalletResponse) ProtoMessage()    {}
func (*CreateWalletResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{3}
}

func (m *CreateWalletResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWalletResponse.Unmarshal(m, b)
}
func (m *CreateWalletResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWalletResponse.Marshal(b, m, deterministic)
}
func (m *CreateWalletResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWalletResponse.Merge(m, src)
}
func (m *CreateWalletResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWalletResponse.Size(m)
}
func (m *CreateWalletResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWalletResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWalletResponse proto.InternalMessageInfo

func (m *CreateWalletResponse) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type GetWalletRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWalletRequest) Reset()         { *m = GetWalletRequest{} }
func (m *GetWalletRequest) String() string { return proto.CompactTextString(m) }
func (*GetWalletRequest) ProtoMessage()    {}
func (*GetWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{4}
}

func (m *GetWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWalletRequest.Unmarshal(m, b)
}
func (m *GetWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWalletRequest.Marshal(b, m, deterministic)
}
func (m *GetWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWalletRequest.Merge(m, src)
}
func (m *GetWalletRequest) XXX_Size() int {
	return xxx_messageInfo_GetWalletRequest.Size(m)
}
func (m *GetWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWalletRequest proto.InternalMessageInfo

func (m *GetWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type CancelWalletRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelWalletRequest) Reset()         { *m = CancelWalletRequest{} }
func (m *CancelWalletRequest) String() string { return proto.CompactTextString(m) }
func (*CancelWalletRequest) ProtoMessage()    {}
func (*CancelWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{5}
}

func (m *CancelWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelWalletRequest.Unmarshal(m, b)
}
func (m *CancelWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelWalletRequest.Marshal(b, m, deterministic)
}
func (m *CancelWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelWalletRequest.Merge(m, src)
}
func (m *CancelWalletRequest) XXX_Size() int {
	return xxx_messageInfo_CancelWalletRequest.Size(m)
}
func (m *CancelWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelWalletRequest proto.InternalMessageInfo

func (m *CancelWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type ArchiveWalletRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveWalletRequest) Reset()         { *m = ArchiveWalletRequest{} }
func (m *ArchiveWalletRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveWalletRequest) ProtoMessage()    {}
func (*ArchiveWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{6}
}

func (m *ArchiveWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveWalletRequest.Unmarshal(m, b)
}
func (m *ArchiveWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveWalletRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveWalletRequest.Merge(m, src)
}
func (m *ArchiveWalletRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveWalletRequest.Size(m)
}
func (m *ArchiveWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveWalletRequest proto.InternalMessageInfo

func (m *ArchiveWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type UnArchiveWalletRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnArchiveWalletRequest) Reset()         { *m = UnArchiveWalletRequest{} }
func (m *UnArchiveWalletRequest) String() string { return proto.CompactTextString(m) }
func (*UnArchiveWalletRequest) ProtoMessage()    {}
func (*UnArchiveWalletRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{7}
}

func (m *UnArchiveWalletRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnArchiveWalletRequest.Unmarshal(m, b)
}
func (m *UnArchiveWalletRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnArchiveWalletRequest.Marshal(b, m, deterministic)
}
func (m *UnArchiveWalletRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnArchiveWalletRequest.Merge(m, src)
}
func (m *UnArchiveWalletRequest) XXX_Size() int {
	return xxx_messageInfo_UnArchiveWalletRequest.Size(m)
}
func (m *UnArchiveWalletRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnArchiveWalletRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnArchiveWalletRequest proto.InternalMessageInfo

func (m *UnArchiveWalletRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type ListWalletsRequest struct {
	PageSize             uint32   `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWalletsRequest) Reset()         { *m = ListWalletsRequest{} }
func (m *ListWalletsRequest) String() string { return proto.CompactTextString(m) }
func (*ListWalletsRequest) ProtoMessage()    {}
func (*ListWalletsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{8}
}

func (m *ListWalletsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWalletsRequest.Unmarshal(m, b)
}
func (m *ListWalletsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWalletsRequest.Marshal(b, m, deterministic)
}
func (m *ListWalletsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWalletsRequest.Merge(m, src)
}
func (m *ListWalletsRequest) XXX_Size() int {
	return xxx_messageInfo_ListWalletsRequest.Size(m)
}
func (m *ListWalletsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWalletsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWalletsRequest proto.InternalMessageInfo

func (m *ListWalletsRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWalletsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListWalletsResponse struct {
	Wallets              []*Wallet `protobuf:"bytes,1,rep,name=wallets,proto3" json:"wallets,omitempty"`
	NextPageToken        string    `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListWalletsResponse) Reset()         { *m = ListWalletsResponse{} }
func (m *ListWalletsResponse) String() string { return proto.CompactTextString(m) }
func (*ListWalletsResponse) ProtoMessage()    {}
func (*ListWalletsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{9}
}

func (m *ListWalletsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWalletsResponse.Unmarshal(m, b)
}
func (m *ListWalletsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWalletsResponse.Marshal(b, m, deterministic)
}
func (m *ListWalletsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWalletsResponse.Merge(m, src)
}
func (m *ListWalletsResponse) XXX_Size() int {
	return xxx_messageInfo_ListWalletsResponse.Size(m)
}
func (m *ListWalletsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWalletsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWalletsResponse proto.InternalMessageInfo

func (m *ListWalletsResponse) GetWallets() []*Wallet {
	if m != nil {
		return m.Wallets
	}
	return nil
}

func (m *ListWalletsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type UpdateWalletPolicyRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PolicyId             string   `protobuf:"bytes,2,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWalletPolicyRequest) Reset()         { *m = UpdateWalletPolicyRequest{} }
func (m *UpdateWalletPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWalletPolicyRequest) ProtoMessage()    {}
func (*UpdateWalletPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{10}
}

func (m *UpdateWalletPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWalletPolicyRequest.Unmarshal(m, b)
}
func (m *UpdateWalletPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWalletPolicyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWalletPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWalletPolicyRequest.Merge(m, src)
}
func (m *UpdateWalletPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWalletPolicyRequest.Size(m)
}
func (m *UpdateWalletPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWalletPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWalletPolicyRequest proto.InternalMessageInfo

func (m *UpdateWalletPolicyRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *UpdateWalletPolicyRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

type ReviewWalletProposalRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Approve              bool     `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewWalletProposalRequest) Reset()         { *m = ReviewWalletProposalRequest{} }
func (m *ReviewWalletProposalRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewWalletProposalRequest) ProtoMessage()    {}
func (*ReviewWalletProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{11}
}

func (m *ReviewWalletProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewWalletProposalRequest.Unmarshal(m, b)
}
func (m *ReviewWalletProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewWalletProposalRequest.Marshal(b, m, deterministic)
}
func (m *ReviewWalletProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewWalletProposalRequest.Merge(m, src)
}
func (m *ReviewWalletProposalRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewWalletProposalRequest.Size(m)
}
func (m *ReviewWalletProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewWalletProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewWalletProposalRequest proto.InternalMessageInfo

func (m *ReviewWalletProposalRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ReviewWalletProposalRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type RegisterKeyRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PubKey               string   `protobuf:"bytes,2,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterKeyRequest) Reset()         { *m = RegisterKeyRequest{} }
func (m *RegisterKeyRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterKeyRequest) ProtoMessage()    {}
func (*RegisterKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{12}
}

func (m *RegisterKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterKeyRequest.Unmarshal(m, b)
}
func (m *RegisterKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterKeyRequest.Marshal(b, m, deterministic)
}
func (m *RegisterKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterKeyRequest.Merge(m, src)
}
func (m *RegisterKeyRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterKeyRequest.Size(m)
}
func (m *RegisterKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterKeyRequest proto.InternalMessageInfo

func (m *RegisterKeyRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *RegisterKeyRequest) GetPubKey() string {
	if m != nil {
		return m.PubKey
	}
	return ""
}

type RegisterKeyResponse struct {
	KeyId                string   `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterKeyResponse) Reset()         { *m = RegisterKeyResponse{} }
func (m *RegisterKeyResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterKeyResponse) ProtoMessage()    {}
func (*RegisterKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{13}
}

func (m *RegisterKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterKeyResponse.Unmarshal(m, b)
}
func (m *RegisterKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterKeyResponse.Marshal(b, m, deterministic)
}
func (m *RegisterKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterKeyResponse.Merge(m, src)
}
func (m *RegisterKeyResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterKeyResponse.Size(m)
}
func (m *RegisterKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterKeyResponse proto.InternalMessageInfo

func (m *RegisterKeyResponse) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

type CreateAddressRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	FeeRate              uint64   `protobuf:"varint,2,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAddressRequest) Reset()         { *m = CreateAddressRequest{} }
func (m *CreateAddressRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAddressRequest) ProtoMessage()    {}
func (*CreateAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{14}
}

func (m *CreateAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAddressRequest.Unmarshal(m, b)
}
func (m *CreateAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAddressRequest.Marshal(b, m, deterministic)
}
func (m *CreateAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAddressRequest.Merge(m, src)
}
func (m *CreateAddressRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAddressRequest.Size(m)
}
func (m *CreateAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAddressRequest proto.InternalMessageInfo

func (m *CreateAddressRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *CreateAddressRequest) GetFeeRate() uint64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

type CreateAddressResponse struct {
	AddressId            string   `protobuf:"bytes,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAddressResponse) Reset()         { *m = CreateAddressResponse{} }
func (m *CreateAddressResponse) String() string { return proto.CompactTextString(m) }
func (*CreateAddressResponse) ProtoMessage()    {}
func (*CreateAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{15}
}

func (m *CreateAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAddressResponse.Unmarshal(m, b)
}
func (m *CreateAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAddressResponse.Marshal(b, m, deterministic)
}
func (m *CreateAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAddressResponse.Merge(m, src)
}
func (m *CreateAddressResponse) XXX_Size() int {
	return xxx_messageInfo_CreateAddressResponse.Size(m)
}
func (m *CreateAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAddressResponse proto.InternalMessageInfo

func (m *CreateAddressResponse) GetAddressId() string {
	if m != nil {
		return m.AddressId
	}
	return ""
}

type GetAddressRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	AddressId            string   `protobuf:"bytes,2,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressRequest) Reset()         { *m = GetAddressRequest{} }
func (m *GetAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressRequest) ProtoMessage()    {}
func (*GetAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{16}
}

func (m *GetAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressRequest.Unmarshal(m, b)
}
func (m *GetAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressRequest.Merge(m, src)
}
func (m *GetAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressRequest.Size(m)
}
func (m *GetAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressRequest proto.InternalMessageInfo

func (m *GetAddressRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetAddressRequest) GetAddressId() string {
	if m != nil {
		return m.AddressId
	}
	return ""
}

type GetAddressByAddressRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAddressByAddressRequest) Reset()         { *m = GetAddressByAddressRequest{} }
func (m *GetAddressByAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetAddressByAddressRequest) ProtoMessage()    {}
func (*GetAddressByAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{17}
}

func (m *GetAddressByAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAddressByAddressRequest.Unmarshal(m, b)
}
func (m *GetAddressByAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAddressByAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetAddressByAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAddressByAddressRequest.Merge(m, src)
}
func (m *GetAddressByAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetAddressByAddressRequest.Size(m)
}
func (m *GetAddressByAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAddressByAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAddressByAddressRequest proto.InternalMessageInfo

func (m *GetAddressByAddressRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetAddressByAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ListAddressesRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	OmitChange           bool     `protobuf:"varint,2,opt,name=omit_change,json=omitChange,proto3" json:"omit_change,omitempty"`
	PageSize             uint32   `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAddressesRequest) Reset()         { *m = ListAddressesRequest{} }
func (m *ListAddressesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAddressesRequest) ProtoMessage()    {}
func (*ListAddressesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{18}
}

func (m *ListAddressesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAddressesRequest.Unmarshal(m, b)
}
func (m *ListAddressesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAddressesRequest.Marshal(b, m, deterministic)
}
func (m *ListAddressesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAddressesRequest.Merge(m, src)
}
func (m *ListAddressesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAddressesRequest.Size(m)
}
func (m *ListAddressesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAddressesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAddressesRequest proto.InternalMessageInfo

func (m *ListAddressesRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ListAddressesRequest) GetOmitChange() bool {
	if m != nil {
		return m.OmitChange
	}
	return false
}

func (m *ListAddressesRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAddressesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListAddressesResponse struct {
	Addresses            []*Address `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	NextPageToken        string     `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListAddressesResponse) Reset()         { *m = ListAddressesResponse{} }
func (m *ListAddressesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAddressesResponse) ProtoMessage()    {}
func (*ListAddressesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{19}
}

func (m *ListAddressesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAddressesResponse.Unmarshal(m, b)
}
func (m *ListAddressesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAddressesResponse.Marshal(b, m, deterministic)
}
func (m *ListAddressesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAddressesResponse.Merge(m, src)
}
func (m *ListAddressesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAddressesResponse.Size(m)
}
func (m *ListAddressesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAddressesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAddressesResponse proto.InternalMessageInfo

func (m *ListAddressesResponse) GetAddresses() []*Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func (m *ListAddressesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetEthereumFeeAddressRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEthereumFeeAddressRequest) Reset()         { *m = GetEthereumFeeAddressRequest{} }
func (m *GetEthereumFeeAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetEthereumFeeAddressRequest) ProtoMessage()    {}
func (*GetEthereumFeeAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{20}
}

func (m *GetEthereumFeeAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEthereumFeeAddressRequest.Unmarshal(m, b)
}
func (m *GetEthereumFeeAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEthereumFeeAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetEthereumFeeAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEthereumFeeAddressRequest.Merge(m, src)
}
func (m *GetEthereumFeeAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetEthereumFeeAddressRequest.Size(m)
}
func (m *GetEthereumFeeAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEthereumFeeAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEthereumFeeAddressRequest proto.InternalMessageInfo

type CreateTransactionRequest struct {
	WalletId             string             `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	FeeRate              uint64             `protobuf:"varint,2,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	TxOutputs            []*RequestTxOutput `protobuf:"bytes,3,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	Address              string             `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	DestinationTag       uint32             `protobuf:"varint,5,opt,name=destination_tag,json=destinationTag,proto3" json:"destination_tag,omitempty"`
	Value                float64            `protobuf:"fixed64,6,opt,name=value,proto3" json:"value,omitempty"`
	StringValue          string             `protobuf:"bytes,7,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateTransactionRequest) Reset()         { *m = CreateTransactionRequest{} }
func (m *CreateTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionRequest) ProtoMessage()    {}
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{21}
}

func (m *CreateTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionRequest.Unmarshal(m, b)
}
func (m *CreateTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CreateTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionRequest.Merge(m, src)
}
func (m *CreateTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionRequest.Size(m)
}
func (m *CreateTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionRequest proto.InternalMessageInfo

func (m *CreateTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *CreateTransactionRequest) GetFeeRate() uint64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *CreateTransactionRequest) GetTxOutputs() []*RequestTxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

func (m *CreateTransactionRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CreateTransactionRequest) GetDestinationTag() uint32 {
	if m != nil {
		return m.DestinationTag
	}
	return 0
}

func (m *CreateTransactionRequest) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *CreateTransactionRequest) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

type CreateTransactionResponse struct {
	TransactionId        string   `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransactionResponse) Reset()         { *m = CreateTransactionResponse{} }
func (m *CreateTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTransactionResponse) ProtoMessage()    {}
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{22}
}

func (m *CreateTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransactionResponse.Unmarshal(m, b)
}
func (m *CreateTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransactionResponse.Marshal(b, m, deterministic)
}
func (m *CreateTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransactionResponse.Merge(m, src)
}
func (m *CreateTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTransactionResponse.Size(m)
}
func (m *CreateTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransactionResponse proto.InternalMessageInfo

func (m *CreateTransactionResponse) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type CreateXRPInitTransactionsRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateXRPInitTransactionsRequest) Reset()         { *m = CreateXRPInitTransactionsRequest{} }
func (m *CreateXRPInitTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*CreateXRPInitTransactionsRequest) ProtoMessage()    {}
func (*CreateXRPInitTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{23}
}

func (m *CreateXRPInitTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateXRPInitTransactionsRequest.Unmarshal(m, b)
}
func (m *CreateXRPInitTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateXRPInitTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *CreateXRPInitTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateXRPInitTransactionsRequest.Merge(m, src)
}
func (m *CreateXRPInitTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_CreateXRPInitTransactionsRequest.Size(m)
}
func (m *CreateXRPInitTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateXRPInitTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateXRPInitTransactionsRequest proto.InternalMessageInfo

func (m *CreateXRPInitTransactionsRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type SignTransactionRequest struct {
	WalletId             string             `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string             `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	KeyId                string             `protobuf:"bytes,3,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SignedInfo           *RequestSignedInfo `protobuf:"bytes,4,opt,name=signed_info,json=signedInfo,proto3" json:"signed_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SignTransactionRequest) Reset()         { *m = SignTransactionRequest{} }
func (m *SignTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SignTransactionRequest) ProtoMessage()    {}
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{24}
}

func (m *SignTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignTransactionRequest.Unmarshal(m, b)
}
func (m *SignTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SignTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignTransactionRequest.Merge(m, src)
}
func (m *SignTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SignTransactionRequest.Size(m)
}
func (m *SignTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignTransactionRequest proto.InternalMessageInfo

func (m *SignTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *SignTransactionRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *SignTransactionRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignTransactionRequest) GetSignedInfo() *RequestSignedInfo {
	if m != nil {
		return m.SignedInfo
	}
	return nil
}

type SignXRPInitTransactionsRequest struct {
	WalletId             string               `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	KeyId                string               `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	SignedInfo           []*RequestSignedInfo `protobuf:"bytes,4,rep,name=signed_info,json=signedInfo,proto3" json:"signed_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SignXRPInitTransactionsRequest) Reset()         { *m = SignXRPInitTransactionsRequest{} }
func (m *SignXRPInitTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*SignXRPInitTransactionsRequest) ProtoMessage()    {}
func (*SignXRPInitTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{25}
}

func (m *SignXRPInitTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignXRPInitTransactionsRequest.Unmarshal(m, b)
}
func (m *SignXRPInitTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignXRPInitTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *SignXRPInitTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignXRPInitTransactionsRequest.Merge(m, src)
}
func (m *SignXRPInitTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_SignXRPInitTransactionsRequest.Size(m)
}
func (m *SignXRPInitTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignXRPInitTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignXRPInitTransactionsRequest proto.InternalMessageInfo

func (m *SignXRPInitTransactionsRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *SignXRPInitTransactionsRequest) GetKeyId() string {
	if m != nil {
		return m.KeyId
	}
	return ""
}

func (m *SignXRPInitTransactionsRequest) GetSignedInfo() []*RequestSignedInfo {
	if m != nil {
		return m.SignedInfo
	}
	return nil
}

type SendTransactionRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionRequest) Reset()         { *m = SendTransactionRequest{} }
func (m *SendTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*SendTransactionRequest) ProtoMessage()    {}
func (*SendTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{26}
}

func (m *SendTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionRequest.Unmarshal(m, b)
}
func (m *SendTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionRequest.Marshal(b, m, deterministic)
}
func (m *SendTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionRequest.Merge(m, src)
}
func (m *SendTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_SendTransactionRequest.Size(m)
}
func (m *SendTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionRequest proto.InternalMessageInfo

func (m *SendTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *SendTransactionRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type SendTransactionResponse struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{27}
}

func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(m, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

func (m *SendTransactionResponse) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type SendXRPInitTransactionsRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendXRPInitTransactionsRequest) Reset()         { *m = SendXRPInitTransactionsRequest{} }
func (m *SendXRPInitTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*SendXRPInitTransactionsRequest) ProtoMessage()    {}
func (*SendXRPInitTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{28}
}

func (m *SendXRPInitTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendXRPInitTransactionsRequest.Unmarshal(m, b)
}
func (m *SendXRPInitTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendXRPInitTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *SendXRPInitTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendXRPInitTransactionsRequest.Merge(m, src)
}
func (m *SendXRPInitTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_SendXRPInitTransactionsRequest.Size(m)
}
func (m *SendXRPInitTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendXRPInitTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendXRPInitTransactionsRequest proto.InternalMessageInfo

func (m *SendXRPInitTransactionsRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type SendXRPInitTransactionsResponse struct {
	TxIds                []string `protobuf:"bytes,1,rep,name=tx_ids,json=txIds,proto3" json:"tx_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendXRPInitTransactionsResponse) Reset()         { *m = SendXRPInitTransactionsResponse{} }
func (m *SendXRPInitTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*SendXRPInitTransactionsResponse) ProtoMessage()    {}
func (*SendXRPInitTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{29}
}

func (m *SendXRPInitTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendXRPInitTransactionsResponse.Unmarshal(m, b)
}
func (m *SendXRPInitTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendXRPInitTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *SendXRPInitTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendXRPInitTransactionsResponse.Merge(m, src)
}
func (m *SendXRPInitTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_SendXRPInitTransactionsResponse.Size(m)
}
func (m *SendXRPInitTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendXRPInitTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendXRPInitTransactionsResponse proto.InternalMessageInfo

func (m *SendXRPInitTransactionsResponse) GetTxIds() []string {
	if m != nil {
		return m.TxIds
	}
	return nil
}

type CancelTransactionRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelTransactionRequest) Reset()         { *m = CancelTransactionRequest{} }
func (m *CancelTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*CancelTransactionRequest) ProtoMessage()    {}
func (*CancelTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{30}
}

func (m *CancelTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelTransactionRequest.Unmarshal(m, b)
}
func (m *CancelTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelTransactionRequest.Marshal(b, m, deterministic)
}
func (m *CancelTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelTransactionRequest.Merge(m, src)
}
func (m *CancelTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_CancelTransactionRequest.Size(m)
}
func (m *CancelTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelTransactionRequest proto.InternalMessageInfo

func (m *CancelTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *CancelTransactionRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type GetTransactionRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionRequest) Reset()         { *m = GetTransactionRequest{} }
func (m *GetTransactionRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionRequest) ProtoMessage()    {}
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{31}
}

func (m *GetTransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionRequest.Unmarshal(m, b)
}
func (m *GetTransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionRequest.Merge(m, src)
}
func (m *GetTransactionRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionRequest.Size(m)
}
func (m *GetTransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionRequest proto.InternalMessageInfo

func (m *GetTransactionRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetTransactionRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type GetTransactionByTxIDRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TxId                 string   `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionByTxIDRequest) Reset()         { *m = GetTransactionByTxIDRequest{} }
func (m *GetTransactionByTxIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransactionByTxIDRequest) ProtoMessage()    {}
func (*GetTransactionByTxIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{32}
}

func (m *GetTransactionByTxIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransactionByTxIDRequest.Unmarshal(m, b)
}
func (m *GetTransactionByTxIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransactionByTxIDRequest.Marshal(b, m, deterministic)
}
func (m *GetTransactionByTxIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionByTxIDRequest.Merge(m, src)
}
func (m *GetTransactionByTxIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransactionByTxIDRequest.Size(m)
}
func (m *GetTransactionByTxIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionByTxIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionByTxIDRequest proto.InternalMessageInfo

func (m *GetTransactionByTxIDRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetTransactionByTxIDRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

type ListTransactionsRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PageSize             uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTransactionsRequest) Reset()         { *m = ListTransactionsRequest{} }
func (m *ListTransactionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTransactionsRequest) ProtoMessage()    {}
func (*ListTransactionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{33}
}

func (m *ListTransactionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransactionsRequest.Unmarshal(m, b)
}
func (m *ListTransactionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransactionsRequest.Marshal(b, m, deterministic)
}
func (m *ListTransactionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransactionsRequest.Merge(m, src)
}
func (m *ListTransactionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTransactionsRequest.Size(m)
}
func (m *ListTransactionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransactionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransactionsRequest proto.InternalMessageInfo

func (m *ListTransactionsRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ListTransactionsRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTransactionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListTransactionsResponse struct {
	Transactions         []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	NextPageToken        string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListTransactionsResponse) Reset()         { *m = ListTransactionsResponse{} }
func (m *ListTransactionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTransactionsResponse) ProtoMessage()    {}
func (*ListTransactionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{34}
}

func (m *ListTransactionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransactionsResponse.Unmarshal(m, b)
}
func (m *ListTransactionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransactionsResponse.Marshal(b, m, deterministic)
}
func (m *ListTransactionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransactionsResponse.Merge(m, src)
}
func (m *ListTransactionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTransactionsResponse.Size(m)
}
func (m *ListTransactionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransactionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransactionsResponse proto.InternalMessageInfo

func (m *ListTransactionsResponse) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *ListTransactionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetSignInfoRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSignInfoRequest) Reset()         { *m = GetSignInfoRequest{} }
func (m *GetSignInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetSignInfoRequest) ProtoMessage()    {}
func (*GetSignInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{35}
}

func (m *GetSignInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignInfoRequest.Unmarshal(m, b)
}
func (m *GetSignInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetSignInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignInfoRequest.Merge(m, src)
}
func (m *GetSignInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetSignInfoRequest.Size(m)
}
func (m *GetSignInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignInfoRequest proto.InternalMessageInfo

func (m *GetSignInfoRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *GetSignInfoRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type ListSignInfoRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	TransactionId        string   `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSignInfoRequest) Reset()         { *m = ListSignInfoRequest{} }
func (m *ListSignInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ListSignInfoRequest) ProtoMessage()    {}
func (*ListSignInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{36}
}

func (m *ListSignInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSignInfoRequest.Unmarshal(m, b)
}
func (m *ListSignInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSignInfoRequest.Marshal(b, m, deterministic)
}
func (m *ListSignInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSignInfoRequest.Merge(m, src)
}
func (m *ListSignInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ListSignInfoRequest.Size(m)
}
func (m *ListSignInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSignInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSignInfoRequest proto.InternalMessageInfo

func (m *ListSignInfoRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ListSignInfoRequest) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

type ListSignInfoResponse struct {
	SignInfoList         []*SignInfo `protobuf:"bytes,1,rep,name=sign_info_list,json=signInfoList,proto3" json:"sign_info_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListSignInfoResponse) Reset()         { *m = ListSignInfoResponse{} }
func (m *ListSignInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ListSignInfoResponse) ProtoMessage()    {}
func (*ListSignInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{37}
}

func (m *ListSignInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSignInfoResponse.Unmarshal(m, b)
}
func (m *ListSignInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSignInfoResponse.Marshal(b, m, deterministic)
}
func (m *ListSignInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSignInfoResponse.Merge(m, src)
}
func (m *ListSignInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ListSignInfoResponse.Size(m)
}
func (m *ListSignInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSignInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSignInfoResponse proto.InternalMessageInfo

func (m *ListSignInfoResponse) GetSignInfoList() []*SignInfo {
	if m != nil {
		return m.SignInfoList
	}
	return nil
}

type ListXRPInitSignInfoRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListXRPInitSignInfoRequest) Reset()         { *m = ListXRPInitSignInfoRequest{} }
func (m *ListXRPInitSignInfoRequest) String() string { return proto.CompactTextString(m) }
func (*ListXRPInitSignInfoRequest) ProtoMessage()    {}
func (*ListXRPInitSignInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{38}
}

func (m *ListXRPInitSignInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXRPInitSignInfoRequest.Unmarshal(m, b)
}
func (m *ListXRPInitSignInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXRPInitSignInfoRequest.Marshal(b, m, deterministic)
}
func (m *ListXRPInitSignInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXRPInitSignInfoRequest.Merge(m, src)
}
func (m *ListXRPInitSignInfoRequest) XXX_Size() int {
	return xxx_messageInfo_ListXRPInitSignInfoRequest.Size(m)
}
func (m *ListXRPInitSignInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXRPInitSignInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListXRPInitSignInfoRequest proto.InternalMessageInfo

func (m *ListXRPInitSignInfoRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type ListXRPInitSignInfoResponse struct {
	SignInfoList         []*SignInfo `protobuf:"bytes,1,rep,name=sign_info_list,json=signInfoList,proto3" json:"sign_info_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListXRPInitSignInfoResponse) Reset()         { *m = ListXRPInitSignInfoResponse{} }
func (m *ListXRPInitSignInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ListXRPInitSignInfoResponse) ProtoMessage()    {}
func (*ListXRPInitSignInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{39}
}

func (m *ListXRPInitSignInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListXRPInitSignInfoResponse.Unmarshal(m, b)
}
func (m *ListXRPInitSignInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListXRPInitSignInfoResponse.Marshal(b, m, deterministic)
}
func (m *ListXRPInitSignInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListXRPInitSignInfoResponse.Merge(m, src)
}
func (m *ListXRPInitSignInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ListXRPInitSignInfoResponse.Size(m)
}
func (m *ListXRPInitSignInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListXRPInitSignInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListXRPInitSignInfoResponse proto.InternalMessageInfo

func (m *ListXRPInitSignInfoResponse) GetSignInfoList() []*SignInfo {
	if m != nil {
		return m.SignInfoList
	}
	return nil
}

type ListTransfersRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	PageSize             uint32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTransfersRequest) Reset()         { *m = ListTransfersRequest{} }
func (m *ListTransfersRequest) String() string { return proto.CompactTextString(m) }
func (*ListTransfersRequest) ProtoMessage()    {}
func (*ListTransfersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{40}
}

func (m *ListTransfersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransfersRequest.Unmarshal(m, b)
}
func (m *ListTransfersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransfersRequest.Marshal(b, m, deterministic)
}
func (m *ListTransfersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransfersRequest.Merge(m, src)
}
func (m *ListTransfersRequest) XXX_Size() int {
	return xxx_messageInfo_ListTransfersRequest.Size(m)
}
func (m *ListTransfersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransfersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransfersRequest proto.InternalMessageInfo

func (m *ListTransfersRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *ListTransfersRequest) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTransfersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListTransfersResponse struct {
	Transfers            []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListTransfersResponse) Reset()         { *m = ListTransfersResponse{} }
func (m *ListTransfersResponse) String() string { return proto.CompactTextString(m) }
func (*ListTransfersResponse) ProtoMessage()    {}
func (*ListTransfersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{41}
}

func (m *ListTransfersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransfersResponse.Unmarshal(m, b)
}
func (m *ListTransfersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransfersResponse.Marshal(b, m, deterministic)
}
func (m *ListTransfersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransfersResponse.Merge(m, src)
}
func (m *ListTransfersResponse) XXX_Size() int {
	return xxx_messageInfo_ListTransfersResponse.Size(m)
}
func (m *ListTransfersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransfersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransfersResponse proto.InternalMessageInfo

func (m *ListTransfersResponse) GetTransfers() []*Transfer {
	if m != nil {
		return m.Transfers
	}
	return nil
}

func (m *ListTransfersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetRateSnapshotRequest struct {
	RateSnapshotId       string   `protobuf:"bytes,1,opt,name=rate_snapshot_id,json=rateSnapshotId,proto3" json:"rate_snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRateSnapshotRequest) Reset()         { *m = GetRateSnapshotRequest{} }
func (m *GetRateSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*GetRateSnapshotRequest) ProtoMessage()    {}
func (*GetRateSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{42}
}

func (m *GetRateSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRateSnapshotRequest.Unmarshal(m, b)
}
func (m *GetRateSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRateSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *GetRateSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRateSnapshotRequest.Merge(m, src)
}
func (m *GetRateSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_GetRateSnapshotRequest.Size(m)
}
func (m *GetRateSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRateSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRateSnapshotRequest proto.InternalMessageInfo

func (m *GetRateSnapshotRequest) GetRateSnapshotId() string {
	if m != nil {
		return m.RateSnapshotId
	}
	return ""
}

type GetLatestRateSnapshotRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLatestRateSnapshotRequest) Reset()         { *m = GetLatestRateSnapshotRequest{} }
func (m *GetLatestRateSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*GetLatestRateSnapshotRequest) ProtoMessage()    {}
func (*GetLatestRateSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{43}
}

func (m *GetLatestRateSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLatestRateSnapshotRequest.Unmarshal(m, b)
}
func (m *GetLatestRateSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLatestRateSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *GetLatestRateSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLatestRateSnapshotRequest.Merge(m, src)
}
func (m *GetLatestRateSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_GetLatestRateSnapshotRequest.Size(m)
}
func (m *GetLatestRateSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLatestRateSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLatestRateSnapshotRequest proto.InternalMessageInfo

type SetRatesRequest struct {
	Rates                []*RequestRate `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SetRatesRequest) Reset()         { *m = SetRatesRequest{} }
func (m *SetRatesRequest) String() string { return proto.CompactTextString(m) }
func (*SetRatesRequest) ProtoMessage()    {}
func (*SetRatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{44}
}

func (m *SetRatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRatesRequest.Unmarshal(m, b)
}
func (m *SetRatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRatesRequest.Marshal(b, m, deterministic)
}
func (m *SetRatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRatesRequest.Merge(m, src)
}
func (m *SetRatesRequest) XXX_Size() int {
	return xxx_messageInfo_SetRatesRequest.Size(m)
}
func (m *SetRatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetRatesRequest proto.InternalMessageInfo

func (m *SetRatesRequest) GetRates() []*RequestRate {
	if m != nil {
		return m.Rates
	}
	return nil
}

type SetRatesResponse struct {
	RateSnapshotId       string   `protobuf:"bytes,1,opt,name=rate_snapshot_id,json=rateSnapshotId,proto3" json:"rate_snapshot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetRatesResponse) Reset()         { *m = SetRatesResponse{} }
func (m *SetRatesResponse) String() string { return proto.CompactTextString(m) }
func (*SetRatesResponse) ProtoMessage()    {}
func (*SetRatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{45}
}

func (m *SetRatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetRatesResponse.Unmarshal(m, b)
}
func (m *SetRatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetRatesResponse.Marshal(b, m, deterministic)
}
func (m *SetRatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetRatesResponse.Merge(m, src)
}
func (m *SetRatesResponse) XXX_Size() int {
	return xxx_messageInfo_SetRatesResponse.Size(m)
}
func (m *SetRatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetRatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetRatesResponse proto.InternalMessageInfo

func (m *SetRatesResponse) GetRateSnapshotId() string {
	if m != nil {
		return m.RateSnapshotId
	}
	return ""
}

type GetSpendableBalanceRequest struct {
	WalletId             string   `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpendableBalanceRequest) Reset()         { *m = GetSpendableBalanceRequest{} }
func (m *GetSpendableBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpendableBalanceRequest) ProtoMessage()    {}
func (*GetSpendableBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{46}
}

func (m *GetSpendableBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpendableBalanceRequest.Unmarshal(m, b)
}
func (m *GetSpendableBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpendableBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetSpendableBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpendableBalanceRequest.Merge(m, src)
}
func (m *GetSpendableBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpendableBalanceRequest.Size(m)
}
func (m *GetSpendableBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpendableBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpendableBalanceRequest proto.InternalMessageInfo

func (m *GetSpendableBalanceRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

type GetSpendableBalanceResponse struct {
	TotalSpendableBalance         float64  `protobuf:"fixed64,1,opt,name=total_spendable_balance,json=totalSpendableBalance,proto3" json:"total_spendable_balance,omitempty"`
	StringTotalSpendableBalance   string   `protobuf:"bytes,2,opt,name=string_total_spendable_balance,json=stringTotalSpendableBalance,proto3" json:"string_total_spendable_balance,omitempty"`
	DailySpendableBalance         float64  `protobuf:"fixed64,3,opt,name=daily_spendable_balance,json=dailySpendableBalance,proto3" json:"daily_spendable_balance,omitempty"`
	StringDailySpendableBalance   string   `protobuf:"bytes,4,opt,name=string_daily_spendable_balance,json=stringDailySpendableBalance,proto3" json:"string_daily_spendable_balance,omitempty"`
	HourlySpendableBalance        float64  `protobuf:"fixed64,5,opt,name=hourly_spendable_balance,json=hourlySpendableBalance,proto3" json:"hourly_spendable_balance,omitempty"`
	StringHourlySpendableBalance  string   `protobuf:"bytes,6,opt,name=string_hourly_spendable_balance,json=stringHourlySpendableBalance,proto3" json:"string_hourly_spendable_balance,omitempty"`
	OneTimeSpendableBalance       float64  `protobuf:"fixed64,7,opt,name=one_time_spendable_balance,json=oneTimeSpendableBalance,proto3" json:"one_time_spendable_balance,omitempty"`
	StringOneTimeSpendableBalance string   `protobuf:"bytes,8,opt,name=string_one_time_spendable_balance,json=stringOneTimeSpendableBalance,proto3" json:"string_one_time_spendable_balance,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *GetSpendableBalanceResponse) Reset()         { *m = GetSpendableBalanceResponse{} }
func (m *GetSpendableBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetSpendableBalanceResponse) ProtoMessage()    {}
func (*GetSpendableBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{47}
}

func (m *GetSpendableBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpendableBalanceResponse.Unmarshal(m, b)
}
func (m *GetSpendableBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpendableBalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetSpendableBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpendableBalanceResponse.Merge(m, src)
}
func (m *GetSpendableBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetSpendableBalanceResponse.Size(m)
}
func (m *GetSpendableBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpendableBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpendableBalanceResponse proto.InternalMessageInfo

func (m *GetSpendableBalanceResponse) GetTotalSpendableBalance() float64 {
	if m != nil {
		return m.TotalSpendableBalance
	}
	return 0
}

func (m *GetSpendableBalanceResponse) GetStringTotalSpendableBalance() string {
	if m != nil {
		return m.StringTotalSpendableBalance
	}
	return ""
}

func (m *GetSpendableBalanceResponse) GetDailySpendableBalance() float64 {
	if m != nil {
		return m.DailySpendableBalance
	}
	return 0
}

func (m *GetSpendableBalanceResponse) GetStringDailySpendableBalance() string {
	if m != nil {
		return m.StringDailySpendableBalance
	}
	return ""
}

func (m *GetSpendableBalanceResponse) GetHourlySpendableBalance() float64 {
	if m != nil {
		return m.HourlySpendableBalance
	}
	return 0
}

func (m *GetSpendableBalanceResponse) GetStringHourlySpendableBalance() string {
	if m != nil {
		return m.StringHourlySpendableBalance
	}
	return ""
}

func (m *GetSpendableBalanceResponse) GetOneTimeSpendableBalance() float64 {
	if m != nil {
		return m.OneTimeSpendableBalance
	}
	return 0
}

func (m *GetSpendableBalanceResponse) GetStringOneTimeSpendableBalance() string {
	if m != nil {
		return m.StringOneTimeSpendableBalance
	}
	return ""
}

type CalculateFeeRequest struct {
	WalletId             string             `protobuf:"bytes,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	FeeRate              uint64             `protobuf:"varint,2,opt,name=fee_rate,json=feeRate,proto3" json:"fee_rate,omitempty"`
	TxOutputs            []*RequestTxOutput `protobuf:"bytes,3,rep,name=tx_outputs,json=txOutputs,proto3" json:"tx_outputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CalculateFeeRequest) Reset()         { *m = CalculateFeeRequest{} }
func (m *CalculateFeeRequest) String() string { return proto.CompactTextString(m) }
func (*CalculateFeeRequest) ProtoMessage()    {}
func (*CalculateFeeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{48}
}

func (m *CalculateFeeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateFeeRequest.Unmarshal(m, b)
}
func (m *CalculateFeeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateFeeRequest.Marshal(b, m, deterministic)
}
func (m *CalculateFeeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateFeeRequest.Merge(m, src)
}
func (m *CalculateFeeRequest) XXX_Size() int {
	return xxx_messageInfo_CalculateFeeRequest.Size(m)
}
func (m *CalculateFeeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateFeeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateFeeRequest proto.InternalMessageInfo

func (m *CalculateFeeRequest) GetWalletId() string {
	if m != nil {
		return m.WalletId
	}
	return ""
}

func (m *CalculateFeeRequest) GetFeeRate() uint64 {
	if m != nil {
		return m.FeeRate
	}
	return 0
}

func (m *CalculateFeeRequest) GetTxOutputs() []*RequestTxOutput {
	if m != nil {
		return m.TxOutputs
	}
	return nil
}

type CalculateFeeResponse struct {
	Fee                  float64  `protobuf:"fixed64,1,opt,name=fee,proto3" json:"fee,omitempty"`
	StringFee            string   `protobuf:"bytes,2,opt,name=string_fee,json=stringFee,proto3" json:"string_fee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CalculateFeeResponse) Reset()         { *m = CalculateFeeResponse{} }
func (m *CalculateFeeResponse) String() string { return proto.CompactTextString(m) }
func (*CalculateFeeResponse) ProtoMessage()    {}
func (*CalculateFeeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{49}
}

func (m *CalculateFeeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalculateFeeResponse.Unmarshal(m, b)
}
func (m *CalculateFeeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalculateFeeResponse.Marshal(b, m, deterministic)
}
func (m *CalculateFeeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalculateFeeResponse.Merge(m, src)
}
func (m *CalculateFeeResponse) XXX_Size() int {
	return xxx_messageInfo_CalculateFeeResponse.Size(m)
}
func (m *CalculateFeeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CalculateFeeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CalculateFeeResponse proto.InternalMessageInfo

func (m *CalculateFeeResponse) GetFee() float64 {
	if m != nil {
		return m.Fee
	}
	return 0
}

func (m *CalculateFeeResponse) GetStringFee() string {
	if m != nil {
		return m.StringFee
	}
	return ""
}

type GetMembersDeactivatabilitiesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMembersDeactivatabilitiesRequest) Reset()         { *m = GetMembersDeactivatabilitiesRequest{} }
func (m *GetMembersDeactivatabilitiesRequest) String() string { return proto.CompactTextString(m) }
func (*GetMembersDeactivatabilitiesRequest) ProtoMessage()    {}
func (*GetMembersDeactivatabilitiesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{50}
}

func (m *GetMembersDeactivatabilitiesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMembersDeactivatabilitiesRequest.Unmarshal(m, b)
}
func (m *GetMembersDeactivatabilitiesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMembersDeactivatabilitiesRequest.Marshal(b, m, deterministic)
}
func (m *GetMembersDeactivatabilitiesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembersDeactivatabilitiesRequest.Merge(m, src)
}
func (m *GetMembersDeactivatabilitiesRequest) XXX_Size() int {
	return xxx_messageInfo_GetMembersDeactivatabilitiesRequest.Size(m)
}
func (m *GetMembersDeactivatabilitiesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembersDeactivatabilitiesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembersDeactivatabilitiesRequest proto.InternalMessageInfo

type GetMembersDeactivatabilitiesResponse struct {
	Deactivatabilities   []*Deactivatability `protobuf:"bytes,1,rep,name=deactivatabilities,proto3" json:"deactivatabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetMembersDeactivatabilitiesResponse) Reset()         { *m = GetMembersDeactivatabilitiesResponse{} }
func (m *GetMembersDeactivatabilitiesResponse) String() string { return proto.CompactTextString(m) }
func (*GetMembersDeactivatabilitiesResponse) ProtoMessage()    {}
func (*GetMembersDeactivatabilitiesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{51}
}

func (m *GetMembersDeactivatabilitiesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMembersDeactivatabilitiesResponse.Unmarshal(m, b)
}
func (m *GetMembersDeactivatabilitiesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMembersDeactivatabilitiesResponse.Marshal(b, m, deterministic)
}
func (m *GetMembersDeactivatabilitiesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMembersDeactivatabilitiesResponse.Merge(m, src)
}
func (m *GetMembersDeactivatabilitiesResponse) XXX_Size() int {
	return xxx_messageInfo_GetMembersDeactivatabilitiesResponse.Size(m)
}
func (m *GetMembersDeactivatabilitiesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMembersDeactivatabilitiesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMembersDeactivatabilitiesResponse proto.InternalMessageInfo

func (m *GetMembersDeactivatabilitiesResponse) GetDeactivatabilities() []*Deactivatability {
	if m != nil {
		return m.Deactivatabilities
	}
	return nil
}

type CreateLabeledAddressRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,2,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateLabeledAddressRequest) Reset()         { *m = CreateLabeledAddressRequest{} }
func (m *CreateLabeledAddressRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLabeledAddressRequest) ProtoMessage()    {}
func (*CreateLabeledAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{52}
}

func (m *CreateLabeledAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLabeledAddressRequest.Unmarshal(m, b)
}
func (m *CreateLabeledAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLabeledAddressRequest.Marshal(b, m, deterministic)
}
func (m *CreateLabeledAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLabeledAddressRequest.Merge(m, src)
}
func (m *CreateLabeledAddressRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLabeledAddressRequest.Size(m)
}
func (m *CreateLabeledAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLabeledAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLabeledAddressRequest proto.InternalMessageInfo

func (m *CreateLabeledAddressRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLabeledAddressRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *CreateLabeledAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CreateLabeledAddressResponse struct {
	LabeledAddressId     string   `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLabeledAddressResponse) Reset()         { *m = CreateLabeledAddressResponse{} }
func (m *CreateLabeledAddressResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLabeledAddressResponse) ProtoMessage()    {}
func (*CreateLabeledAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{53}
}

func (m *CreateLabeledAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLabeledAddressResponse.Unmarshal(m, b)
}
func (m *CreateLabeledAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLabeledAddressResponse.Marshal(b, m, deterministic)
}
func (m *CreateLabeledAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLabeledAddressResponse.Merge(m, src)
}
func (m *CreateLabeledAddressResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLabeledAddressResponse.Size(m)
}
func (m *CreateLabeledAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLabeledAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLabeledAddressResponse proto.InternalMessageInfo

func (m *CreateLabeledAddressResponse) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

type UpdateLabeledAddressRequest struct {
	LabeledAddressId     string                `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Address              string                `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateLabeledAddressRequest) Reset()         { *m = UpdateLabeledAddressRequest{} }
func (m *UpdateLabeledAddressRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLabeledAddressRequest) ProtoMessage()    {}
func (*UpdateLabeledAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{54}
}

func (m *UpdateLabeledAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLabeledAddressRequest.Unmarshal(m, b)
}
func (m *UpdateLabeledAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLabeledAddressRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLabeledAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLabeledAddressRequest.Merge(m, src)
}
func (m *UpdateLabeledAddressRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLabeledAddressRequest.Size(m)
}
func (m *UpdateLabeledAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLabeledAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLabeledAddressRequest proto.InternalMessageInfo

func (m *UpdateLabeledAddressRequest) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

func (m *UpdateLabeledAddressRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateLabeledAddressRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *UpdateLabeledAddressRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type GetLabeledAddressRequest struct {
	LabeledAddressId     string   `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	ContainsArchived     bool     `protobuf:"varint,2,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLabeledAddressRequest) Reset()         { *m = GetLabeledAddressRequest{} }
func (m *GetLabeledAddressRequest) String() string { return proto.CompactTextString(m) }
func (*GetLabeledAddressRequest) ProtoMessage()    {}
func (*GetLabeledAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{55}
}

func (m *GetLabeledAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLabeledAddressRequest.Unmarshal(m, b)
}
func (m *GetLabeledAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLabeledAddressRequest.Marshal(b, m, deterministic)
}
func (m *GetLabeledAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLabeledAddressRequest.Merge(m, src)
}
func (m *GetLabeledAddressRequest) XXX_Size() int {
	return xxx_messageInfo_GetLabeledAddressRequest.Size(m)
}
func (m *GetLabeledAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLabeledAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLabeledAddressRequest proto.InternalMessageInfo

func (m *GetLabeledAddressRequest) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

func (m *GetLabeledAddressRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListLabeledAddressesRequest struct {
	ContainsArchived     bool     `protobuf:"varint,1,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListLabeledAddressesRequest) Reset()         { *m = ListLabeledAddressesRequest{} }
func (m *ListLabeledAddressesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLabeledAddressesRequest) ProtoMessage()    {}
func (*ListLabeledAddressesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{56}
}

func (m *ListLabeledAddressesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLabeledAddressesRequest.Unmarshal(m, b)
}
func (m *ListLabeledAddressesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLabeledAddressesRequest.Marshal(b, m, deterministic)
}
func (m *ListLabeledAddressesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLabeledAddressesRequest.Merge(m, src)
}
func (m *ListLabeledAddressesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLabeledAddressesRequest.Size(m)
}
func (m *ListLabeledAddressesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLabeledAddressesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLabeledAddressesRequest proto.InternalMessageInfo

func (m *ListLabeledAddressesRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListLabeledAddressesResponse struct {
	Addresses            []*LabeledAddress `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListLabeledAddressesResponse) Reset()         { *m = ListLabeledAddressesResponse{} }
func (m *ListLabeledAddressesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLabeledAddressesResponse) ProtoMessage()    {}
func (*ListLabeledAddressesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{57}
}

func (m *ListLabeledAddressesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLabeledAddressesResponse.Unmarshal(m, b)
}
func (m *ListLabeledAddressesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLabeledAddressesResponse.Marshal(b, m, deterministic)
}
func (m *ListLabeledAddressesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLabeledAddressesResponse.Merge(m, src)
}
func (m *ListLabeledAddressesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLabeledAddressesResponse.Size(m)
}
func (m *ListLabeledAddressesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLabeledAddressesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLabeledAddressesResponse proto.InternalMessageInfo

func (m *ListLabeledAddressesResponse) GetAddresses() []*LabeledAddress {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type ArchiveLabeledAddressRequest struct {
	LabeledAddressId     string   `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveLabeledAddressRequest) Reset()         { *m = ArchiveLabeledAddressRequest{} }
func (m *ArchiveLabeledAddressRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveLabeledAddressRequest) ProtoMessage()    {}
func (*ArchiveLabeledAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{58}
}

func (m *ArchiveLabeledAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveLabeledAddressRequest.Unmarshal(m, b)
}
func (m *ArchiveLabeledAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveLabeledAddressRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveLabeledAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveLabeledAddressRequest.Merge(m, src)
}
func (m *ArchiveLabeledAddressRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveLabeledAddressRequest.Size(m)
}
func (m *ArchiveLabeledAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveLabeledAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveLabeledAddressRequest proto.InternalMessageInfo

func (m *ArchiveLabeledAddressRequest) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

type ReviewLabeledAddressProposalRequest struct {
	LabeledAddressId     string   `protobuf:"bytes,1,opt,name=labeled_address_id,json=labeledAddressId,proto3" json:"labeled_address_id,omitempty"`
	Approve              bool     `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewLabeledAddressProposalRequest) Reset()         { *m = ReviewLabeledAddressProposalRequest{} }
func (m *ReviewLabeledAddressProposalRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewLabeledAddressProposalRequest) ProtoMessage()    {}
func (*ReviewLabeledAddressProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{59}
}

func (m *ReviewLabeledAddressProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewLabeledAddressProposalRequest.Unmarshal(m, b)
}
func (m *ReviewLabeledAddressProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewLabeledAddressProposalRequest.Marshal(b, m, deterministic)
}
func (m *ReviewLabeledAddressProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewLabeledAddressProposalRequest.Merge(m, src)
}
func (m *ReviewLabeledAddressProposalRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewLabeledAddressProposalRequest.Size(m)
}
func (m *ReviewLabeledAddressProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewLabeledAddressProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewLabeledAddressProposalRequest proto.InternalMessageInfo

func (m *ReviewLabeledAddressProposalRequest) GetLabeledAddressId() string {
	if m != nil {
		return m.LabeledAddressId
	}
	return ""
}

func (m *ReviewLabeledAddressProposalRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type CreateWhitelistRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,2,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	AddressIds           []string              `protobuf:"bytes,3,rep,name=address_ids,json=addressIds,proto3" json:"address_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreateWhitelistRequest) Reset()         { *m = CreateWhitelistRequest{} }
func (m *CreateWhitelistRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWhitelistRequest) ProtoMessage()    {}
func (*CreateWhitelistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{60}
}

func (m *CreateWhitelistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWhitelistRequest.Unmarshal(m, b)
}
func (m *CreateWhitelistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWhitelistRequest.Marshal(b, m, deterministic)
}
func (m *CreateWhitelistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWhitelistRequest.Merge(m, src)
}
func (m *CreateWhitelistRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWhitelistRequest.Size(m)
}
func (m *CreateWhitelistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWhitelistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWhitelistRequest proto.InternalMessageInfo

func (m *CreateWhitelistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateWhitelistRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *CreateWhitelistRequest) GetAddressIds() []string {
	if m != nil {
		return m.AddressIds
	}
	return nil
}

type CreateWhitelistResponse struct {
	WhitelistId          string   `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWhitelistResponse) Reset()         { *m = CreateWhitelistResponse{} }
func (m *CreateWhitelistResponse) String() string { return proto.CompactTextString(m) }
func (*CreateWhitelistResponse) ProtoMessage()    {}
func (*CreateWhitelistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{61}
}

func (m *CreateWhitelistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWhitelistResponse.Unmarshal(m, b)
}
func (m *CreateWhitelistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWhitelistResponse.Marshal(b, m, deterministic)
}
func (m *CreateWhitelistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWhitelistResponse.Merge(m, src)
}
func (m *CreateWhitelistResponse) XXX_Size() int {
	return xxx_messageInfo_CreateWhitelistResponse.Size(m)
}
func (m *CreateWhitelistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWhitelistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWhitelistResponse proto.InternalMessageInfo

func (m *CreateWhitelistResponse) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

type GetWhitelistRequest struct {
	WhitelistId          string   `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	ContainsArchived     bool     `protobuf:"varint,2,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWhitelistRequest) Reset()         { *m = GetWhitelistRequest{} }
func (m *GetWhitelistRequest) String() string { return proto.CompactTextString(m) }
func (*GetWhitelistRequest) ProtoMessage()    {}
func (*GetWhitelistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{62}
}

func (m *GetWhitelistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWhitelistRequest.Unmarshal(m, b)
}
func (m *GetWhitelistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWhitelistRequest.Marshal(b, m, deterministic)
}
func (m *GetWhitelistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWhitelistRequest.Merge(m, src)
}
func (m *GetWhitelistRequest) XXX_Size() int {
	return xxx_messageInfo_GetWhitelistRequest.Size(m)
}
func (m *GetWhitelistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWhitelistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWhitelistRequest proto.InternalMessageInfo

func (m *GetWhitelistRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *GetWhitelistRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListWhitelistsRequest struct {
	ContainsArchived     bool     `protobuf:"varint,1,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWhitelistsRequest) Reset()         { *m = ListWhitelistsRequest{} }
func (m *ListWhitelistsRequest) String() string { return proto.CompactTextString(m) }
func (*ListWhitelistsRequest) ProtoMessage()    {}
func (*ListWhitelistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{63}
}

func (m *ListWhitelistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWhitelistsRequest.Unmarshal(m, b)
}
func (m *ListWhitelistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWhitelistsRequest.Marshal(b, m, deterministic)
}
func (m *ListWhitelistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWhitelistsRequest.Merge(m, src)
}
func (m *ListWhitelistsRequest) XXX_Size() int {
	return xxx_messageInfo_ListWhitelistsRequest.Size(m)
}
func (m *ListWhitelistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWhitelistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWhitelistsRequest proto.InternalMessageInfo

func (m *ListWhitelistsRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListWhitelistsResponse struct {
	Whitelists           []*Whitelist `protobuf:"bytes,1,rep,name=whitelists,proto3" json:"whitelists,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListWhitelistsResponse) Reset()         { *m = ListWhitelistsResponse{} }
func (m *ListWhitelistsResponse) String() string { return proto.CompactTextString(m) }
func (*ListWhitelistsResponse) ProtoMessage()    {}
func (*ListWhitelistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{64}
}

func (m *ListWhitelistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWhitelistsResponse.Unmarshal(m, b)
}
func (m *ListWhitelistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWhitelistsResponse.Marshal(b, m, deterministic)
}
func (m *ListWhitelistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWhitelistsResponse.Merge(m, src)
}
func (m *ListWhitelistsResponse) XXX_Size() int {
	return xxx_messageInfo_ListWhitelistsResponse.Size(m)
}
func (m *ListWhitelistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWhitelistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWhitelistsResponse proto.InternalMessageInfo

func (m *ListWhitelistsResponse) GetWhitelists() []*Whitelist {
	if m != nil {
		return m.Whitelists
	}
	return nil
}

type UpdateWhitelistRequest struct {
	WhitelistId          string                `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	Name                 string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	AddressIds           []string              `protobuf:"bytes,4,rep,name=address_ids,json=addressIds,proto3" json:"address_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateWhitelistRequest) Reset()         { *m = UpdateWhitelistRequest{} }
func (m *UpdateWhitelistRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWhitelistRequest) ProtoMessage()    {}
func (*UpdateWhitelistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{65}
}

func (m *UpdateWhitelistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWhitelistRequest.Unmarshal(m, b)
}
func (m *UpdateWhitelistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWhitelistRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWhitelistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWhitelistRequest.Merge(m, src)
}
func (m *UpdateWhitelistRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWhitelistRequest.Size(m)
}
func (m *UpdateWhitelistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWhitelistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWhitelistRequest proto.InternalMessageInfo

func (m *UpdateWhitelistRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *UpdateWhitelistRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateWhitelistRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *UpdateWhitelistRequest) GetAddressIds() []string {
	if m != nil {
		return m.AddressIds
	}
	return nil
}

type UpdateWhitelistAddressesRequest struct {
	WhitelistId          string   `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	AddressIds           []string `protobuf:"bytes,2,rep,name=address_ids,json=addressIds,proto3" json:"address_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWhitelistAddressesRequest) Reset()         { *m = UpdateWhitelistAddressesRequest{} }
func (m *UpdateWhitelistAddressesRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWhitelistAddressesRequest) ProtoMessage()    {}
func (*UpdateWhitelistAddressesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{66}
}

func (m *UpdateWhitelistAddressesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWhitelistAddressesRequest.Unmarshal(m, b)
}
func (m *UpdateWhitelistAddressesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWhitelistAddressesRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWhitelistAddressesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWhitelistAddressesRequest.Merge(m, src)
}
func (m *UpdateWhitelistAddressesRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWhitelistAddressesRequest.Size(m)
}
func (m *UpdateWhitelistAddressesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWhitelistAddressesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWhitelistAddressesRequest proto.InternalMessageInfo

func (m *UpdateWhitelistAddressesRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *UpdateWhitelistAddressesRequest) GetAddressIds() []string {
	if m != nil {
		return m.AddressIds
	}
	return nil
}

type ArchiveWhitelistRequest struct {
	WhitelistId          string   `protobuf:"bytes,1,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveWhitelistRequest) Reset()         { *m = ArchiveWhitelistRequest{} }
func (m *ArchiveWhitelistRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveWhitelistRequest) ProtoMessage()    {}
func (*ArchiveWhitelistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{67}
}

func (m *ArchiveWhitelistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveWhitelistRequest.Unmarshal(m, b)
}
func (m *ArchiveWhitelistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveWhitelistRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveWhitelistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveWhitelistRequest.Merge(m, src)
}
func (m *ArchiveWhitelistRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveWhitelistRequest.Size(m)
}
func (m *ArchiveWhitelistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveWhitelistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveWhitelistRequest proto.InternalMessageInfo

func (m *ArchiveWhitelistRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

type CreateTransferLimitRequest struct {
	Name                 string                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin        `protobuf:"varint,2,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	TransferLimits       []*RequestTransferLimitEntry `protobuf:"bytes,3,rep,name=transfer_limits,json=transferLimits,proto3" json:"transfer_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *CreateTransferLimitRequest) Reset()         { *m = CreateTransferLimitRequest{} }
func (m *CreateTransferLimitRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTransferLimitRequest) ProtoMessage()    {}
func (*CreateTransferLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{68}
}

func (m *CreateTransferLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransferLimitRequest.Unmarshal(m, b)
}
func (m *CreateTransferLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransferLimitRequest.Marshal(b, m, deterministic)
}
func (m *CreateTransferLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransferLimitRequest.Merge(m, src)
}
func (m *CreateTransferLimitRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTransferLimitRequest.Size(m)
}
func (m *CreateTransferLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransferLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransferLimitRequest proto.InternalMessageInfo

func (m *CreateTransferLimitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTransferLimitRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *CreateTransferLimitRequest) GetTransferLimits() []*RequestTransferLimitEntry {
	if m != nil {
		return m.TransferLimits
	}
	return nil
}

type CreateTransferLimitResponse struct {
	TransferLimitId      string   `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTransferLimitResponse) Reset()         { *m = CreateTransferLimitResponse{} }
func (m *CreateTransferLimitResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTransferLimitResponse) ProtoMessage()    {}
func (*CreateTransferLimitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{69}
}

func (m *CreateTransferLimitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTransferLimitResponse.Unmarshal(m, b)
}
func (m *CreateTransferLimitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTransferLimitResponse.Marshal(b, m, deterministic)
}
func (m *CreateTransferLimitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTransferLimitResponse.Merge(m, src)
}
func (m *CreateTransferLimitResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTransferLimitResponse.Size(m)
}
func (m *CreateTransferLimitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTransferLimitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTransferLimitResponse proto.InternalMessageInfo

func (m *CreateTransferLimitResponse) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

type GetTransferLimitRequest struct {
	TransferLimitId      string   `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	ContainsArchived     bool     `protobuf:"varint,2,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransferLimitRequest) Reset()         { *m = GetTransferLimitRequest{} }
func (m *GetTransferLimitRequest) String() string { return proto.CompactTextString(m) }
func (*GetTransferLimitRequest) ProtoMessage()    {}
func (*GetTransferLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{70}
}

func (m *GetTransferLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTransferLimitRequest.Unmarshal(m, b)
}
func (m *GetTransferLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTransferLimitRequest.Marshal(b, m, deterministic)
}
func (m *GetTransferLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransferLimitRequest.Merge(m, src)
}
func (m *GetTransferLimitRequest) XXX_Size() int {
	return xxx_messageInfo_GetTransferLimitRequest.Size(m)
}
func (m *GetTransferLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransferLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransferLimitRequest proto.InternalMessageInfo

func (m *GetTransferLimitRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *GetTransferLimitRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListTransferLimitsRequest struct {
	ContainsArchived     bool     `protobuf:"varint,1,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTransferLimitsRequest) Reset()         { *m = ListTransferLimitsRequest{} }
func (m *ListTransferLimitsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTransferLimitsRequest) ProtoMessage()    {}
func (*ListTransferLimitsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{71}
}

func (m *ListTransferLimitsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransferLimitsRequest.Unmarshal(m, b)
}
func (m *ListTransferLimitsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransferLimitsRequest.Marshal(b, m, deterministic)
}
func (m *ListTransferLimitsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransferLimitsRequest.Merge(m, src)
}
func (m *ListTransferLimitsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTransferLimitsRequest.Size(m)
}
func (m *ListTransferLimitsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransferLimitsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransferLimitsRequest proto.InternalMessageInfo

func (m *ListTransferLimitsRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListTransferLimitsResponse struct {
	TransferLimits       []*TransferLimit `protobuf:"bytes,1,rep,name=transfer_limits,json=transferLimits,proto3" json:"transfer_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListTransferLimitsResponse) Reset()         { *m = ListTransferLimitsResponse{} }
func (m *ListTransferLimitsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTransferLimitsResponse) ProtoMessage()    {}
func (*ListTransferLimitsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{72}
}

func (m *ListTransferLimitsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTransferLimitsResponse.Unmarshal(m, b)
}
func (m *ListTransferLimitsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTransferLimitsResponse.Marshal(b, m, deterministic)
}
func (m *ListTransferLimitsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTransferLimitsResponse.Merge(m, src)
}
func (m *ListTransferLimitsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTransferLimitsResponse.Size(m)
}
func (m *ListTransferLimitsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTransferLimitsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTransferLimitsResponse proto.InternalMessageInfo

func (m *ListTransferLimitsResponse) GetTransferLimits() []*TransferLimit {
	if m != nil {
		return m.TransferLimits
	}
	return nil
}

type UpdateTransferLimitRequest struct {
	TransferLimitId      string                       `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	TransferLimits       []*RequestTransferLimitEntry `protobuf:"bytes,2,rep,name=transfer_limits,json=transferLimits,proto3" json:"transfer_limits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *UpdateTransferLimitRequest) Reset()         { *m = UpdateTransferLimitRequest{} }
func (m *UpdateTransferLimitRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTransferLimitRequest) ProtoMessage()    {}
func (*UpdateTransferLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{73}
}

func (m *UpdateTransferLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTransferLimitRequest.Unmarshal(m, b)
}
func (m *UpdateTransferLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTransferLimitRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTransferLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTransferLimitRequest.Merge(m, src)
}
func (m *UpdateTransferLimitRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTransferLimitRequest.Size(m)
}
func (m *UpdateTransferLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTransferLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTransferLimitRequest proto.InternalMessageInfo

func (m *UpdateTransferLimitRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *UpdateTransferLimitRequest) GetTransferLimits() []*RequestTransferLimitEntry {
	if m != nil {
		return m.TransferLimits
	}
	return nil
}

type UpdateTransferLimitNameRequest struct {
	TransferLimitId      string   `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTransferLimitNameRequest) Reset()         { *m = UpdateTransferLimitNameRequest{} }
func (m *UpdateTransferLimitNameRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTransferLimitNameRequest) ProtoMessage()    {}
func (*UpdateTransferLimitNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{74}
}

func (m *UpdateTransferLimitNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTransferLimitNameRequest.Unmarshal(m, b)
}
func (m *UpdateTransferLimitNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTransferLimitNameRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTransferLimitNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTransferLimitNameRequest.Merge(m, src)
}
func (m *UpdateTransferLimitNameRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTransferLimitNameRequest.Size(m)
}
func (m *UpdateTransferLimitNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTransferLimitNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTransferLimitNameRequest proto.InternalMessageInfo

func (m *UpdateTransferLimitNameRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *UpdateTransferLimitNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ArchiveTransferLimitRequest struct {
	TransferLimitId      string   `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchiveTransferLimitRequest) Reset()         { *m = ArchiveTransferLimitRequest{} }
func (m *ArchiveTransferLimitRequest) String() string { return proto.CompactTextString(m) }
func (*ArchiveTransferLimitRequest) ProtoMessage()    {}
func (*ArchiveTransferLimitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{75}
}

func (m *ArchiveTransferLimitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchiveTransferLimitRequest.Unmarshal(m, b)
}
func (m *ArchiveTransferLimitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchiveTransferLimitRequest.Marshal(b, m, deterministic)
}
func (m *ArchiveTransferLimitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchiveTransferLimitRequest.Merge(m, src)
}
func (m *ArchiveTransferLimitRequest) XXX_Size() int {
	return xxx_messageInfo_ArchiveTransferLimitRequest.Size(m)
}
func (m *ArchiveTransferLimitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchiveTransferLimitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchiveTransferLimitRequest proto.InternalMessageInfo

func (m *ArchiveTransferLimitRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

type ReviewTransferLimitProposalRequest struct {
	TransferLimitId      string   `protobuf:"bytes,1,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	Approve              bool     `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewTransferLimitProposalRequest) Reset()         { *m = ReviewTransferLimitProposalRequest{} }
func (m *ReviewTransferLimitProposalRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewTransferLimitProposalRequest) ProtoMessage()    {}
func (*ReviewTransferLimitProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{76}
}

func (m *ReviewTransferLimitProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewTransferLimitProposalRequest.Unmarshal(m, b)
}
func (m *ReviewTransferLimitProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewTransferLimitProposalRequest.Marshal(b, m, deterministic)
}
func (m *ReviewTransferLimitProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewTransferLimitProposalRequest.Merge(m, src)
}
func (m *ReviewTransferLimitProposalRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewTransferLimitProposalRequest.Size(m)
}
func (m *ReviewTransferLimitProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewTransferLimitProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewTransferLimitProposalRequest proto.InternalMessageInfo

func (m *ReviewTransferLimitProposalRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

func (m *ReviewTransferLimitProposalRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

type CreatePolicyRequest struct {
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Coin                 gincoincglobalv1.Coin `protobuf:"varint,3,opt,name=coin,proto3,enum=gincoinc.global.v1.Coin" json:"coin,omitempty"`
	Type                 PolicyType            `protobuf:"varint,4,opt,name=type,proto3,enum=adamant.global.v1.PolicyType" json:"type,omitempty"`
	WhitelistId          string                `protobuf:"bytes,5,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	TransferLimitId      string                `protobuf:"bytes,6,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CreatePolicyRequest) Reset()         { *m = CreatePolicyRequest{} }
func (m *CreatePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePolicyRequest) ProtoMessage()    {}
func (*CreatePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{77}
}

func (m *CreatePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePolicyRequest.Unmarshal(m, b)
}
func (m *CreatePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePolicyRequest.Marshal(b, m, deterministic)
}
func (m *CreatePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePolicyRequest.Merge(m, src)
}
func (m *CreatePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePolicyRequest.Size(m)
}
func (m *CreatePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePolicyRequest proto.InternalMessageInfo

func (m *CreatePolicyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreatePolicyRequest) GetCoin() gincoincglobalv1.Coin {
	if m != nil {
		return m.Coin
	}
	return gincoincglobalv1.Coin_COIN_INVALID
}

func (m *CreatePolicyRequest) GetType() PolicyType {
	if m != nil {
		return m.Type
	}
	return PolicyType_POLICY_TYPE_INVALID
}

func (m *CreatePolicyRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *CreatePolicyRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

type CreatePolicyResponse struct {
	PolicyId             string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePolicyResponse) Reset()         { *m = CreatePolicyResponse{} }
func (m *CreatePolicyResponse) String() string { return proto.CompactTextString(m) }
func (*CreatePolicyResponse) ProtoMessage()    {}
func (*CreatePolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{78}
}

func (m *CreatePolicyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePolicyResponse.Unmarshal(m, b)
}
func (m *CreatePolicyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePolicyResponse.Marshal(b, m, deterministic)
}
func (m *CreatePolicyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePolicyResponse.Merge(m, src)
}
func (m *CreatePolicyResponse) XXX_Size() int {
	return xxx_messageInfo_CreatePolicyResponse.Size(m)
}
func (m *CreatePolicyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePolicyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePolicyResponse proto.InternalMessageInfo

func (m *CreatePolicyResponse) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

type GetPolicyRequest struct {
	PolicyId             string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	ContainsArchived     bool     `protobuf:"varint,2,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPolicyRequest) Reset()         { *m = GetPolicyRequest{} }
func (m *GetPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*GetPolicyRequest) ProtoMessage()    {}
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{79}
}

func (m *GetPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPolicyRequest.Unmarshal(m, b)
}
func (m *GetPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPolicyRequest.Marshal(b, m, deterministic)
}
func (m *GetPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPolicyRequest.Merge(m, src)
}
func (m *GetPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_GetPolicyRequest.Size(m)
}
func (m *GetPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPolicyRequest proto.InternalMessageInfo

func (m *GetPolicyRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *GetPolicyRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListPoliciesRequest struct {
	ContainsArchived     bool     `protobuf:"varint,1,opt,name=contains_archived,json=containsArchived,proto3" json:"contains_archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPoliciesRequest) Reset()         { *m = ListPoliciesRequest{} }
func (m *ListPoliciesRequest) String() string { return proto.CompactTextString(m) }
func (*ListPoliciesRequest) ProtoMessage()    {}
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{80}
}

func (m *ListPoliciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoliciesRequest.Unmarshal(m, b)
}
func (m *ListPoliciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoliciesRequest.Marshal(b, m, deterministic)
}
func (m *ListPoliciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoliciesRequest.Merge(m, src)
}
func (m *ListPoliciesRequest) XXX_Size() int {
	return xxx_messageInfo_ListPoliciesRequest.Size(m)
}
func (m *ListPoliciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoliciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoliciesRequest proto.InternalMessageInfo

func (m *ListPoliciesRequest) GetContainsArchived() bool {
	if m != nil {
		return m.ContainsArchived
	}
	return false
}

type ListPoliciesResponse struct {
	Policies             []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListPoliciesResponse) Reset()         { *m = ListPoliciesResponse{} }
func (m *ListPoliciesResponse) String() string { return proto.CompactTextString(m) }
func (*ListPoliciesResponse) ProtoMessage()    {}
func (*ListPoliciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{81}
}

func (m *ListPoliciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPoliciesResponse.Unmarshal(m, b)
}
func (m *ListPoliciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPoliciesResponse.Marshal(b, m, deterministic)
}
func (m *ListPoliciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPoliciesResponse.Merge(m, src)
}
func (m *ListPoliciesResponse) XXX_Size() int {
	return xxx_messageInfo_ListPoliciesResponse.Size(m)
}
func (m *ListPoliciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPoliciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListPoliciesResponse proto.InternalMessageInfo

func (m *ListPoliciesResponse) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type UpdatePolicyRequest struct {
	PolicyId             string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	WhitelistId          string   `protobuf:"bytes,3,opt,name=whitelist_id,json=whitelistId,proto3" json:"whitelist_id,omitempty"`
	TransferLimitId      string   `protobuf:"bytes,4,opt,name=transfer_limit_id,json=transferLimitId,proto3" json:"transfer_limit_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePolicyRequest) Reset()         { *m = UpdatePolicyRequest{} }
func (m *UpdatePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePolicyRequest) ProtoMessage()    {}
func (*UpdatePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{82}
}

func (m *UpdatePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePolicyRequest.Unmarshal(m, b)
}
func (m *UpdatePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePolicyRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePolicyRequest.Merge(m, src)
}
func (m *UpdatePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePolicyRequest.Size(m)
}
func (m *UpdatePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePolicyRequest proto.InternalMessageInfo

func (m *UpdatePolicyRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *UpdatePolicyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdatePolicyRequest) GetWhitelistId() string {
	if m != nil {
		return m.WhitelistId
	}
	return ""
}

func (m *UpdatePolicyRequest) GetTransferLimitId() string {
	if m != nil {
		return m.TransferLimitId
	}
	return ""
}

type ArchivePolicyRequest struct {
	PolicyId             string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArchivePolicyRequest) Reset()         { *m = ArchivePolicyRequest{} }
func (m *ArchivePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*ArchivePolicyRequest) ProtoMessage()    {}
func (*ArchivePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{83}
}

func (m *ArchivePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArchivePolicyRequest.Unmarshal(m, b)
}
func (m *ArchivePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArchivePolicyRequest.Marshal(b, m, deterministic)
}
func (m *ArchivePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArchivePolicyRequest.Merge(m, src)
}
func (m *ArchivePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_ArchivePolicyRequest.Size(m)
}
func (m *ArchivePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ArchivePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ArchivePolicyRequest proto.InternalMessageInfo

func (m *ArchivePolicyRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

type ReviewPolicyProposalRequest struct {
	PolicyId             string   `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	Approve              bool     `protobuf:"varint,2,opt,name=approve,proto3" json:"approve,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReviewPolicyProposalRequest) Reset()         { *m = ReviewPolicyProposalRequest{} }
func (m *ReviewPolicyProposalRequest) String() string { return proto.CompactTextString(m) }
func (*ReviewPolicyProposalRequest) ProtoMessage()    {}
func (*ReviewPolicyProposalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67b639143ce6ddc1, []int{84}
}

func (m *ReviewPolicyProposalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReviewPolicyProposalRequest.Unmarshal(m, b)
}
func (m *ReviewPolicyProposalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReviewPolicyProposalRequest.Marshal(b, m, deterministic)
}
func (m *ReviewPolicyProposalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReviewPolicyProposalRequest.Merge(m, src)
}
func (m *ReviewPolicyProposalRequest) XXX_Size() int {
	return xxx_messageInfo_ReviewPolicyProposalRequest.Size(m)
}
func (m *ReviewPolicyProposalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReviewPolicyProposalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReviewPolicyProposalRequest proto.InternalMessageInfo

func (m *ReviewPolicyProposalRequest) GetPolicyId() string {
	if m != nil {
		return m.PolicyId
	}
	return ""
}

func (m *ReviewPolicyProposalRequest) GetApprove() bool {
	if m != nil {
		return m.Approve
	}
	return false
}

func init() {
	proto.RegisterType((*ApproveWalletRequest)(nil), "adamant.global.v1.ApproveWalletRequest")
	proto.RegisterType((*ApproveTransactionRequest)(nil), "adamant.global.v1.ApproveTransactionRequest")
	proto.RegisterType((*CreateWalletRequest)(nil), "adamant.global.v1.CreateWalletRequest")
	proto.RegisterType((*CreateWalletResponse)(nil), "adamant.global.v1.CreateWalletResponse")
	proto.RegisterType((*GetWalletRequest)(nil), "adamant.global.v1.GetWalletRequest")
	proto.RegisterType((*CancelWalletRequest)(nil), "adamant.global.v1.CancelWalletRequest")
	proto.RegisterType((*ArchiveWalletRequest)(nil), "adamant.global.v1.ArchiveWalletRequest")
	proto.RegisterType((*UnArchiveWalletRequest)(nil), "adamant.global.v1.UnArchiveWalletRequest")
	proto.RegisterType((*ListWalletsRequest)(nil), "adamant.global.v1.ListWalletsRequest")
	proto.RegisterType((*ListWalletsResponse)(nil), "adamant.global.v1.ListWalletsResponse")
	proto.RegisterType((*UpdateWalletPolicyRequest)(nil), "adamant.global.v1.UpdateWalletPolicyRequest")
	proto.RegisterType((*ReviewWalletProposalRequest)(nil), "adamant.global.v1.ReviewWalletProposalRequest")
	proto.RegisterType((*RegisterKeyRequest)(nil), "adamant.global.v1.RegisterKeyRequest")
	proto.RegisterType((*RegisterKeyResponse)(nil), "adamant.global.v1.RegisterKeyResponse")
	proto.RegisterType((*CreateAddressRequest)(nil), "adamant.global.v1.CreateAddressRequest")
	proto.RegisterType((*CreateAddressResponse)(nil), "adamant.global.v1.CreateAddressResponse")
	proto.RegisterType((*GetAddressRequest)(nil), "adamant.global.v1.GetAddressRequest")
	proto.RegisterType((*GetAddressByAddressRequest)(nil), "adamant.global.v1.GetAddressByAddressRequest")
	proto.RegisterType((*ListAddressesRequest)(nil), "adamant.global.v1.ListAddressesRequest")
	proto.RegisterType((*ListAddressesResponse)(nil), "adamant.global.v1.ListAddressesResponse")
	proto.RegisterType((*GetEthereumFeeAddressRequest)(nil), "adamant.global.v1.GetEthereumFeeAddressRequest")
	proto.RegisterType((*CreateTransactionRequest)(nil), "adamant.global.v1.CreateTransactionRequest")
	proto.RegisterType((*CreateTransactionResponse)(nil), "adamant.global.v1.CreateTransactionResponse")
	proto.RegisterType((*CreateXRPInitTransactionsRequest)(nil), "adamant.global.v1.CreateXRPInitTransactionsRequest")
	proto.RegisterType((*SignTransactionRequest)(nil), "adamant.global.v1.SignTransactionRequest")
	proto.RegisterType((*SignXRPInitTransactionsRequest)(nil), "adamant.global.v1.SignXRPInitTransactionsRequest")
	proto.RegisterType((*SendTransactionRequest)(nil), "adamant.global.v1.SendTransactionRequest")
	proto.RegisterType((*SendTransactionResponse)(nil), "adamant.global.v1.SendTransactionResponse")
	proto.RegisterType((*SendXRPInitTransactionsRequest)(nil), "adamant.global.v1.SendXRPInitTransactionsRequest")
	proto.RegisterType((*SendXRPInitTransactionsResponse)(nil), "adamant.global.v1.SendXRPInitTransactionsResponse")
	proto.RegisterType((*CancelTransactionRequest)(nil), "adamant.global.v1.CancelTransactionRequest")
	proto.RegisterType((*GetTransactionRequest)(nil), "adamant.global.v1.GetTransactionRequest")
	proto.RegisterType((*GetTransactionByTxIDRequest)(nil), "adamant.global.v1.GetTransactionByTxIDRequest")
	proto.RegisterType((*ListTransactionsRequest)(nil), "adamant.global.v1.ListTransactionsRequest")
	proto.RegisterType((*ListTransactionsResponse)(nil), "adamant.global.v1.ListTransactionsResponse")
	proto.RegisterType((*GetSignInfoRequest)(nil), "adamant.global.v1.GetSignInfoRequest")
	proto.RegisterType((*ListSignInfoRequest)(nil), "adamant.global.v1.ListSignInfoRequest")
	proto.RegisterType((*ListSignInfoResponse)(nil), "adamant.global.v1.ListSignInfoResponse")
	proto.RegisterType((*ListXRPInitSignInfoRequest)(nil), "adamant.global.v1.ListXRPInitSignInfoRequest")
	proto.RegisterType((*ListXRPInitSignInfoResponse)(nil), "adamant.global.v1.ListXRPInitSignInfoResponse")
	proto.RegisterType((*ListTransfersRequest)(nil), "adamant.global.v1.ListTransfersRequest")
	proto.RegisterType((*ListTransfersResponse)(nil), "adamant.global.v1.ListTransfersResponse")
	proto.RegisterType((*GetRateSnapshotRequest)(nil), "adamant.global.v1.GetRateSnapshotRequest")
	proto.RegisterType((*GetLatestRateSnapshotRequest)(nil), "adamant.global.v1.GetLatestRateSnapshotRequest")
	proto.RegisterType((*SetRatesRequest)(nil), "adamant.global.v1.SetRatesRequest")
	proto.RegisterType((*SetRatesResponse)(nil), "adamant.global.v1.SetRatesResponse")
	proto.RegisterType((*GetSpendableBalanceRequest)(nil), "adamant.global.v1.GetSpendableBalanceRequest")
	proto.RegisterType((*GetSpendableBalanceResponse)(nil), "adamant.global.v1.GetSpendableBalanceResponse")
	proto.RegisterType((*CalculateFeeRequest)(nil), "adamant.global.v1.CalculateFeeRequest")
	proto.RegisterType((*CalculateFeeResponse)(nil), "adamant.global.v1.CalculateFeeResponse")
	proto.RegisterType((*GetMembersDeactivatabilitiesRequest)(nil), "adamant.global.v1.GetMembersDeactivatabilitiesRequest")
	proto.RegisterType((*GetMembersDeactivatabilitiesResponse)(nil), "adamant.global.v1.GetMembersDeactivatabilitiesResponse")
	proto.RegisterType((*CreateLabeledAddressRequest)(nil), "adamant.global.v1.CreateLabeledAddressRequest")
	proto.RegisterType((*CreateLabeledAddressResponse)(nil), "adamant.global.v1.CreateLabeledAddressResponse")
	proto.RegisterType((*UpdateLabeledAddressRequest)(nil), "adamant.global.v1.UpdateLabeledAddressRequest")
	proto.RegisterType((*GetLabeledAddressRequest)(nil), "adamant.global.v1.GetLabeledAddressRequest")
	proto.RegisterType((*ListLabeledAddressesRequest)(nil), "adamant.global.v1.ListLabeledAddressesRequest")
	proto.RegisterType((*ListLabeledAddressesResponse)(nil), "adamant.global.v1.ListLabeledAddressesResponse")
	proto.RegisterType((*ArchiveLabeledAddressRequest)(nil), "adamant.global.v1.ArchiveLabeledAddressRequest")
	proto.RegisterType((*ReviewLabeledAddressProposalRequest)(nil), "adamant.global.v1.ReviewLabeledAddressProposalRequest")
	proto.RegisterType((*CreateWhitelistRequest)(nil), "adamant.global.v1.CreateWhitelistRequest")
	proto.RegisterType((*CreateWhitelistResponse)(nil), "adamant.global.v1.CreateWhitelistResponse")
	proto.RegisterType((*GetWhitelistRequest)(nil), "adamant.global.v1.GetWhitelistRequest")
	proto.RegisterType((*ListWhitelistsRequest)(nil), "adamant.global.v1.ListWhitelistsRequest")
	proto.RegisterType((*ListWhitelistsResponse)(nil), "adamant.global.v1.ListWhitelistsResponse")
	proto.RegisterType((*UpdateWhitelistRequest)(nil), "adamant.global.v1.UpdateWhitelistRequest")
	proto.RegisterType((*UpdateWhitelistAddressesRequest)(nil), "adamant.global.v1.UpdateWhitelistAddressesRequest")
	proto.RegisterType((*ArchiveWhitelistRequest)(nil), "adamant.global.v1.ArchiveWhitelistRequest")
	proto.RegisterType((*CreateTransferLimitRequest)(nil), "adamant.global.v1.CreateTransferLimitRequest")
	proto.RegisterType((*CreateTransferLimitResponse)(nil), "adamant.global.v1.CreateTransferLimitResponse")
	proto.RegisterType((*GetTransferLimitRequest)(nil), "adamant.global.v1.GetTransferLimitRequest")
	proto.RegisterType((*ListTransferLimitsRequest)(nil), "adamant.global.v1.ListTransferLimitsRequest")
	proto.RegisterType((*ListTransferLimitsResponse)(nil), "adamant.global.v1.ListTransferLimitsResponse")
	proto.RegisterType((*UpdateTransferLimitRequest)(nil), "adamant.global.v1.UpdateTransferLimitRequest")
	proto.RegisterType((*UpdateTransferLimitNameRequest)(nil), "adamant.global.v1.UpdateTransferLimitNameRequest")
	proto.RegisterType((*ArchiveTransferLimitRequest)(nil), "adamant.global.v1.ArchiveTransferLimitRequest")
	proto.RegisterType((*ReviewTransferLimitProposalRequest)(nil), "adamant.global.v1.ReviewTransferLimitProposalRequest")
	proto.RegisterType((*CreatePolicyRequest)(nil), "adamant.global.v1.CreatePolicyRequest")
	proto.RegisterType((*CreatePolicyResponse)(nil), "adamant.global.v1.CreatePolicyResponse")
	proto.RegisterType((*GetPolicyRequest)(nil), "adamant.global.v1.GetPolicyRequest")
	proto.RegisterType((*ListPoliciesRequest)(nil), "adamant.global.v1.ListPoliciesRequest")
	proto.RegisterType((*ListPoliciesResponse)(nil), "adamant.global.v1.ListPoliciesResponse")
	proto.RegisterType((*UpdatePolicyRequest)(nil), "adamant.global.v1.UpdatePolicyRequest")
	proto.RegisterType((*ArchivePolicyRequest)(nil), "adamant.global.v1.ArchivePolicyRequest")
	proto.RegisterType((*ReviewPolicyProposalRequest)(nil), "adamant.global.v1.ReviewPolicyProposalRequest")
}

func init() {
	proto.RegisterFile("gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto", fileDescriptor_67b639143ce6ddc1)
}

var fileDescriptor_67b639143ce6ddc1 = []byte{
	// 3513 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x1c, 0x6b, 0x6f, 0x1b, 0xc7,
	0x51, 0x4b, 0x52, 0x96, 0x34, 0x92, 0x25, 0x79, 0x2d, 0x4b, 0xd4, 0xc9, 0x0f, 0xf9, 0xac, 0xc4,
	0xb2, 0x6c, 0x51, 0x31, 0x6d, 0x2b, 0x0e, 0x92, 0x22, 0x15, 0xfd, 0x90, 0x19, 0x3f, 0x73, 0x92,
	0x9d, 0x87, 0x63, 0x33, 0x27, 0xdd, 0x4a, 0xba, 0x98, 0x3c, 0x32, 0xbc, 0x93, 0x22, 0xda, 0x35,
	0xd0, 0xa6, 0x40, 0x03, 0xb8, 0x08, 0xd0, 0x06, 0x28, 0xfa, 0x0a, 0x50, 0xb4, 0x1f, 0xf3, 0xb5,
	0x5f, 0x5a, 0xa4, 0x05, 0x0a, 0xf4, 0x3f, 0xf4, 0x6b, 0x7f, 0x40, 0x3f, 0x05, 0x68, 0x91, 0x42,
	0x40, 0x81, 0xe2, 0x6e, 0xf7, 0xde, 0xbb, 0x47, 0xca, 0x91, 0x4c, 0x03, 0xfe, 0x64, 0x6a, 0x6f,
	0x76, 0x76, 0x66, 0x76, 0x1e, 0xbb, 0x33, 0xb3, 0x86, 0xd7, 0x57, 0x75, 0x63, 0xb9, 0xaa, 0x1b,
	0xcb, 0x33, 0xaa, 0xa6, 0x56, 0x54, 0xc3, 0x9a, 0x59, 0x2d, 0x57, 0x97, 0xd4, 0xf2, 0xcc, 0xc6,
	0x69, 0x77, 0x84, 0x0e, 0x6c, 0x9c, 0x66, 0x5f, 0x4a, 0x6a, 0x4d, 0xcf, 0xd5, 0xea, 0x55, 0xab,
	0x8a, 0xf7, 0x31, 0x88, 0x1c, 0xfd, 0x92, 0xdb, 0x38, 0x2d, 0x8d, 0xad, 0x56, 0xab, 0xab, 0x65,
	0x32, 0xe3, 0x00, 0x2c, 0xad, 0xaf, 0xcc, 0x90, 0x4a, 0xcd, 0x6a, 0x50, 0x78, 0x69, 0x64, 0x43,
	0x2d, 0xeb, 0x9a, 0x6a, 0x91, 0x19, 0xf7, 0x07, 0xfb, 0x90, 0xf3, 0xa8, 0xf0, 0x57, 0x77, 0x87,
	0xbc, 0xe5, 0x89, 0xb1, 0x5e, 0x61, 0xf0, 0xe7, 0xb6, 0x41, 0x75, 0x60, 0xda, 0xec, 0x36, 0xa6,
	0x55, 0xaa, 0x1a, 0x29, 0xd3, 0x79, 0xf2, 0x19, 0x18, 0x9a, 0xab, 0xd5, 0xea, 0xd5, 0x0d, 0xf2,
	0x8e, 0x5a, 0x2e, 0x13, 0x4b, 0x21, 0x1f, 0xaf, 0x13, 0xd3, 0xc2, 0x63, 0xd0, 0xf3, 0x89, 0x33,
	0x50, 0xd2, 0xb5, 0x2c, 0x1a, 0x47, 0x93, 0x3d, 0x4a, 0x37, 0x1d, 0x28, 0x6a, 0x72, 0x09, 0x46,
	0xd9, 0xa4, 0xc5, 0xba, 0x6a, 0x98, 0xea, 0xb2, 0xa5, 0x57, 0x8d, 0x56, 0x66, 0xe2, 0x97, 0xa0,
	0xdf, 0xf2, 0xa7, 0xd8, 0x10, 0x29, 0x07, 0x62, 0x6f, 0x60, 0xb4, 0xa8, 0xc9, 0x5f, 0xa4, 0x61,
	0xff, 0x85, 0x3a, 0x51, 0xad, 0x08, 0x55, 0x53, 0xd0, 0xcb, 0x70, 0x1b, 0x6a, 0x85, 0x50, 0xec,
	0x85, 0x9e, 0xad, 0xc2, 0x9e, 0x7a, 0x66, 0x10, 0x65, 0x87, 0x14, 0xa0, 0x5f, 0x6f, 0xa8, 0x15,
	0x82, 0xcf, 0x43, 0xc6, 0x16, 0x88, 0xb3, 0x40, 0x7f, 0x3e, 0xeb, 0xed, 0x83, 0xbf, 0xa3, 0xb9,
	0x0b, 0x55, 0xdd, 0x28, 0xc0, 0x56, 0xa1, 0xeb, 0x53, 0x94, 0x19, 0x44, 0xe3, 0x1d, 0x8a, 0x33,
	0x03, 0xbf, 0xe5, 0xad, 0x62, 0x35, 0x6a, 0x24, 0x9b, 0x76, 0x10, 0x1c, 0xca, 0xc5, 0x34, 0x22,
	0x47, 0x89, 0x5b, 0x6c, 0xd4, 0x48, 0x08, 0x0b, 0xa3, 0xc2, 0x1e, 0xc7, 0x37, 0xa0, 0x4f, 0xd5,
	0xb4, 0x3a, 0x31, 0x4d, 0x8a, 0x2c, 0xe3, 0x20, 0x3b, 0xc2, 0xa3, 0x66, 0x8e, 0xc2, 0xc5, 0xd0,
	0xf5, 0xaa, 0xfe, 0x07, 0x3c, 0x02, 0xa8, 0x92, 0xed, 0x1c, 0x47, 0x93, 0x7b, 0x1d, 0xbe, 0xa7,
	0x32, 0xd9, 0xf4, 0x24, 0x52, 0x50, 0xc5, 0xfe, 0x60, 0x64, 0xf7, 0xc4, 0x3e, 0x18, 0x78, 0x0a,
	0xba, 0x2a, 0xa4, 0xb2, 0x44, 0xea, 0x66, 0xb6, 0x6b, 0x3c, 0x3d, 0xd9, 0x53, 0x18, 0xdc, 0x2a,
	0x74, 0x7e, 0x81, 0x52, 0xdd, 0x88, 0xfe, 0x9b, 0x45, 0x8a, 0x0b, 0x60, 0xef, 0x5d, 0xad, 0x5a,
	0xd6, 0x97, 0x1b, 0xf6, 0xce, 0x74, 0xd3, 0xbd, 0xa3, 0x03, 0x45, 0xcd, 0x56, 0x95, 0xf0, 0x9e,
	0x98, 0xb5, 0xaa, 0x61, 0x92, 0x64, 0x55, 0x79, 0x0c, 0x83, 0xf3, 0xc4, 0x0a, 0xef, 0xa2, 0x1e,
	0x9b, 0x50, 0xb8, 0xb6, 0x55, 0x28, 0xd6, 0xe7, 0xf3, 0x97, 0xee, 0xdf, 0x7d, 0x65, 0xfa, 0x35,
	0x75, 0x7a, 0xe5, 0xde, 0xa3, 0xf3, 0x8f, 0xa7, 0xbd, 0xdf, 0x67, 0x1f, 0x4f, 0x9f, 0xf5, 0xfe,
	0x38, 0xf3, 0x78, 0xfa, 0xee, 0xf9, 0xd7, 0xd4, 0xa5, 0x7b, 0xa1, 0x11, 0xf7, 0xf7, 0xe9, 0xfc,
	0xe3, 0x89, 0xc0, 0xf2, 0x3f, 0x44, 0xb0, 0xff, 0x82, 0x6a, 0x2c, 0x93, 0x72, 0xdb, 0x48, 0xf8,
	0x11, 0x82, 0xa1, 0xb9, 0xfa, 0xf2, 0x9a, 0x1e, 0x35, 0xb1, 0x67, 0x48, 0xc3, 0x8f, 0x11, 0x0c,
	0xdf, 0x36, 0xda, 0x4d, 0xc5, 0xe7, 0x08, 0xf0, 0x35, 0xdd, 0x64, 0xda, 0x60, 0xba, 0x14, 0x4c,
	0x40, 0x4f, 0x4d, 0x5d, 0x25, 0x25, 0x53, 0x7f, 0x48, 0x4d, 0x7a, 0x6f, 0xa1, 0x6b, 0xab, 0x90,
	0x99, 0x4a, 0x65, 0x35, 0xa5, 0xdb, 0xfe, 0xb2, 0xa0, 0x3f, 0x24, 0xf8, 0x6d, 0x00, 0x07, 0xca,
	0xaa, 0x3e, 0x20, 0xd4, 0xa8, 0x7b, 0x0a, 0xf9, 0xad, 0xc2, 0x4c, 0x7d, 0x3a, 0x7f, 0xf2, 0xfe,
	0xc4, 0x0f, 0xee, 0xdf, 0x9d, 0x2b, 0x5c, 0xb8, 0x78, 0xe9, 0xf2, 0xfc, 0x95, 0xe2, 0x5b, 0x57,
	0xaf, 0x5d, 0xbf, 0x71, 0xf3, 0xd6, 0xdb, 0xca, 0xc2, 0xe2, 0xed, 0x3b, 0xef, 0xbc, 0xfb, 0xde,
	0xfb, 0xf9, 0x33, 0x67, 0xcf, 0xcd, 0xbe, 0x7a, 0xef, 0xd1, 0xe9, 0xd9, 0xc7, 0x13, 0x8a, 0xb3,
	0xd6, 0xa2, 0x8d, 0x44, 0xae, 0xc3, 0xfe, 0x10, 0x39, 0x4c, 0x9f, 0xcf, 0x40, 0x17, 0x25, 0xd9,
	0xcc, 0xa2, 0xf1, 0xf4, 0x64, 0x6f, 0x7e, 0x54, 0x68, 0xfa, 0x8a, 0x0b, 0x89, 0x5f, 0x86, 0x01,
	0x83, 0x6c, 0x5a, 0xa5, 0x28, 0x8d, 0xca, 0x5e, 0x7b, 0xf8, 0x96, 0xb7, 0xe6, 0x37, 0x08, 0x46,
	0x6f, 0xd7, 0x34, 0xcf, 0x8a, 0x6e, 0x39, 0xd6, 0xf5, 0xec, 0x37, 0xc3, 0x5e, 0xca, 0x37, 0xf5,
	0xd4, 0x6e, 0x2c, 0xe5, 0x39, 0x8e, 0x3f, 0x20, 0x18, 0x53, 0xc8, 0x86, 0x4e, 0x3e, 0x61, 0x3c,
	0xd7, 0xab, 0xb5, 0xaa, 0xa9, 0x96, 0xdb, 0xc0, 0x75, 0x16, 0xba, 0x54, 0x1a, 0xb9, 0x1c, 0x9e,
	0xbb, 0x15, 0xf7, 0x4f, 0xf9, 0xf7, 0x08, 0xb0, 0x42, 0x56, 0x75, 0xd3, 0x22, 0xf5, 0xab, 0xa4,
	0x1d, 0x3b, 0x32, 0x0e, 0x5d, 0xb5, 0xf5, 0xa5, 0xd2, 0x03, 0xd2, 0x60, 0xfb, 0x61, 0x5b, 0x41,
	0x3d, 0x35, 0xf8, 0x7d, 0x65, 0x4f, 0x6d, 0x7d, 0xe9, 0x2a, 0x69, 0xc8, 0xa7, 0x60, 0x7f, 0x88,
	0x44, 0xa6, 0xb0, 0x07, 0x60, 0xcf, 0x03, 0xd2, 0xf0, 0xbd, 0x6f, 0xe7, 0x03, 0x62, 0x8b, 0xfd,
	0x4b, 0xe4, 0x3a, 0x6c, 0x16, 0x59, 0xda, 0xc0, 0xd3, 0x28, 0x74, 0xaf, 0x10, 0x52, 0xaa, 0xab,
	0x16, 0x15, 0x78, 0x46, 0xe9, 0x5a, 0x21, 0x44, 0x51, 0x2d, 0x22, 0xcf, 0xc2, 0x81, 0x08, 0x75,
	0x8c, 0x9d, 0x43, 0x00, 0x6e, 0xc8, 0xf4, 0x58, 0xea, 0x61, 0x23, 0x45, 0x4d, 0xfe, 0x17, 0x82,
	0x7d, 0xf3, 0xc4, 0x6a, 0x1f, 0x4f, 0x0f, 0x42, 0xf4, 0xed, 0x86, 0xe9, 0x04, 0xb8, 0xfd, 0x0a,
	0x81, 0xe4, 0x73, 0x5b, 0x68, 0xb4, 0x8f, 0xed, 0xa3, 0xd0, 0xc5, 0xc8, 0x0a, 0xab, 0xe7, 0xa8,
	0xe2, 0x8e, 0xcb, 0xbf, 0x4d, 0xc1, 0x90, 0xed, 0x51, 0x19, 0x91, 0xa4, 0x1d, 0x64, 0x1e, 0x81,
	0xde, 0x6a, 0x45, 0xb7, 0x4a, 0xcb, 0x6b, 0xaa, 0xb1, 0xea, 0x5a, 0x39, 0xd8, 0x43, 0x17, 0x9c,
	0x91, 0x70, 0xb8, 0x49, 0xb7, 0x16, 0x6e, 0x32, 0x3b, 0x11, 0x6e, 0x1a, 0x70, 0x20, 0x22, 0x1c,
	0xa6, 0xf0, 0xe7, 0xc1, 0xdd, 0x70, 0xe2, 0x86, 0x1c, 0x89, 0x13, 0x72, 0xdc, 0xad, 0xf7, 0x81,
	0x5b, 0x8e, 0x3a, 0x87, 0xe1, 0xe0, 0x3c, 0xb1, 0x2e, 0x59, 0x6b, 0xa4, 0x4e, 0xd6, 0x2b, 0x97,
	0x49, 0xc4, 0x23, 0xc8, 0xff, 0x4c, 0x41, 0x96, 0x1a, 0x23, 0xe7, 0x40, 0xff, 0x5c, 0xb8, 0x0b,
	0x3c, 0x07, 0x60, 0x6d, 0x96, 0xaa, 0xeb, 0x56, 0x6d, 0xdd, 0x32, 0xb3, 0x69, 0x47, 0x4a, 0x32,
	0x47, 0x4a, 0x8c, 0xea, 0xc5, 0xcd, 0x9b, 0x0e, 0xa8, 0xd2, 0x63, 0xb1, 0x5f, 0xa6, 0xe3, 0xfc,
	0x99, 0x06, 0x3b, 0x1b, 0xea, 0x29, 0x2e, 0x3e, 0x0e, 0x03, 0x1a, 0x31, 0x2d, 0xdd, 0x50, 0x9d,
	0x6b, 0x89, 0xa5, 0xae, 0xd2, 0x33, 0xb6, 0xd2, 0x1f, 0x18, 0x5e, 0x54, 0x57, 0xf1, 0x10, 0x74,
	0x6e, 0xa8, 0xe5, 0x75, 0xe2, 0x9c, 0xb4, 0x91, 0x42, 0xff, 0xc0, 0x47, 0xa1, 0xcf, 0xb4, 0xea,
	0xba, 0xb1, 0x5a, 0xa2, 0x1f, 0xbb, 0x1c, 0xec, 0xbd, 0x74, 0xec, 0x8e, 0x3d, 0x24, 0x17, 0x60,
	0x94, 0x23, 0x60, 0xa6, 0x00, 0xf1, 0x5b, 0x11, 0xe2, 0xdd, 0x8a, 0x3e, 0x47, 0x30, 0x4e, 0x91,
	0xbc, 0xab, 0xdc, 0x2a, 0x1a, 0xba, 0x15, 0xc0, 0xd5, 0x06, 0x53, 0x93, 0xbf, 0x4d, 0xc1, 0xf0,
	0x82, 0xbe, 0x6a, 0xb4, 0x57, 0x67, 0x4c, 0xfe, 0x95, 0x72, 0x87, 0xd7, 0x0b, 0x6f, 0x05, 0x3e,
	0xe5, 0x85, 0xdc, 0xb4, 0xb3, 0xd8, 0x81, 0xad, 0x02, 0xae, 0x0f, 0xe6, 0xfb, 0x9d, 0xc5, 0xe6,
	0xa6, 0x2f, 0xdf, 0x7b, 0x34, 0x7b, 0xf6, 0xf1, 0x04, 0x8b, 0xc4, 0xf8, 0x26, 0xf4, 0x9a, 0xfa,
	0xaa, 0x41, 0xb4, 0x92, 0x6e, 0xac, 0x54, 0x1d, 0xe5, 0xeb, 0xcd, 0x4f, 0x88, 0x95, 0x77, 0xc1,
	0x01, 0x2e, 0x1a, 0x2b, 0xd5, 0x42, 0xf7, 0x56, 0xa1, 0xf3, 0x09, 0x4a, 0x0d, 0x22, 0x05, 0x4c,
	0x6f, 0x54, 0x7e, 0x92, 0x82, 0xc3, 0x36, 0xd0, 0x73, 0xa1, 0x07, 0x01, 0x61, 0xa4, 0x9e, 0x46,
	0x18, 0xe9, 0x6d, 0x09, 0xc3, 0xb9, 0xb9, 0x86, 0x84, 0xf1, 0x5f, 0x04, 0xc3, 0x0b, 0xc4, 0xd0,
	0x5e, 0x3c, 0x35, 0x94, 0x73, 0x30, 0x12, 0xe3, 0x9c, 0xf9, 0x94, 0xfd, 0xd0, 0x69, 0x6d, 0xfa,
	0xae, 0x24, 0x63, 0x6d, 0x16, 0x35, 0xf9, 0xa7, 0x08, 0x0e, 0xdb, 0x13, 0x9e, 0x0f, 0xff, 0x71,
	0x1e, 0x8e, 0x08, 0x89, 0xf1, 0x8f, 0xb6, 0x0e, 0x17, 0x34, 0x2e, 0xf6, 0x28, 0x9d, 0x36, 0x1b,
	0xa6, 0xbc, 0x85, 0x20, 0x4b, 0xaf, 0xf5, 0x2f, 0xe0, 0xa6, 0x7f, 0x8b, 0xe0, 0xc0, 0x3c, 0xb1,
	0x5e, 0x40, 0xce, 0xff, 0x82, 0x60, 0x2c, 0xcc, 0x79, 0xa1, 0xb1, 0xb8, 0x59, 0xbc, 0xd8, 0x06,
	0xfe, 0xf3, 0xae, 0x79, 0x51, 0xb6, 0x0f, 0x6d, 0x15, 0xa4, 0x7a, 0x36, 0x3f, 0x7c, 0x7f, 0xf2,
	0x95, 0xcd, 0x13, 0x6f, 0xb2, 0x49, 0xbe, 0xeb, 0xa3, 0xd6, 0xf7, 0x3f, 0x04, 0x23, 0xf6, 0x09,
	0xb0, 0xcd, 0xee, 0x3a, 0x74, 0x00, 0x4e, 0xb5, 0x76, 0x00, 0x4e, 0xef, 0xc4, 0x01, 0xf8, 0x27,
	0x08, 0xb2, 0x71, 0xfe, 0x99, 0xa5, 0x17, 0xa0, 0x2f, 0xb0, 0xd9, 0xee, 0x39, 0xf8, 0x30, 0x27,
	0x2e, 0x04, 0x15, 0x3f, 0x34, 0xa7, 0xe5, 0xe3, 0xf0, 0xbf, 0x11, 0xe0, 0x79, 0xe2, 0x44, 0x16,
	0x3b, 0x82, 0xbc, 0x28, 0xe6, 0xf3, 0x1f, 0x44, 0x13, 0x5e, 0x2f, 0x1a, 0xdf, 0xef, 0xd1, 0x5b,
	0xa9, 0xcf, 0x36, 0x53, 0xb9, 0x39, 0xe8, 0xb7, 0x8f, 0x11, 0xce, 0x39, 0xa4, 0x54, 0xd6, 0x4d,
	0x8b, 0x29, 0xdd, 0x18, 0x47, 0xe9, 0xbc, 0xc9, 0x7d, 0x26, 0xfb, 0x65, 0xa3, 0x94, 0x3f, 0x43,
	0x20, 0xd9, 0x3f, 0x58, 0x0c, 0x6b, 0x9f, 0x64, 0xe5, 0x0f, 0x61, 0x8c, 0x4b, 0xc8, 0xce, 0xf1,
	0xba, 0x85, 0xa8, 0x1c, 0x1d, 0xfb, 0x5b, 0x21, 0xf5, 0x17, 0xca, 0x77, 0x3d, 0xa4, 0x97, 0xf7,
	0x00, 0xef, 0x4c, 0xb0, 0xaf, 0x41, 0x8f, 0xe5, 0x0e, 0x26, 0xc8, 0xd4, 0x9d, 0xa8, 0xf8, 0xd0,
	0x2d, 0xbb, 0xab, 0x9f, 0x21, 0x18, 0x9e, 0x27, 0x96, 0x7d, 0x0d, 0x5e, 0x30, 0xd4, 0x9a, 0xb9,
	0x56, 0xf5, 0xb2, 0xf7, 0x1b, 0x30, 0x68, 0x5f, 0x96, 0x4b, 0x26, 0x1b, 0xdf, 0xad, 0x1d, 0xe8,
	0xaf, 0x07, 0x16, 0x2f, 0x6a, 0x2c, 0xa1, 0x70, 0x4d, 0xb5, 0x88, 0xc9, 0xa3, 0x4b, 0x9e, 0x87,
	0x81, 0x05, 0x4a, 0xb1, 0xa7, 0x25, 0x67, 0xa1, 0xd3, 0x46, 0x92, 0xe4, 0xd9, 0x19, 0xa8, 0x3d,
	0x4d, 0xa1, 0xc0, 0xf2, 0x1b, 0x30, 0xe8, 0x23, 0x62, 0x22, 0x9f, 0x14, 0x31, 0x1d, 0x23, 0xf3,
	0x33, 0x9a, 0x3d, 0x5b, 0xa8, 0x11, 0x43, 0x53, 0x97, 0xca, 0xa4, 0xa0, 0x96, 0xed, 0x53, 0x63,
	0x1b, 0xcc, 0xf3, 0x77, 0x19, 0xe7, 0xe8, 0x12, 0xa7, 0x84, 0xf1, 0x34, 0x0b, 0x23, 0x56, 0xd5,
	0x52, 0xcb, 0x25, 0xd3, 0x85, 0x28, 0x2d, 0x51, 0x10, 0x87, 0x30, 0xa4, 0x1c, 0x70, 0x3e, 0x47,
	0xe7, 0xe3, 0x0b, 0x70, 0x98, 0xa5, 0x1e, 0x44, 0xd3, 0xa9, 0x4a, 0x8d, 0x51, 0xa8, 0x45, 0x2e,
	0x92, 0x59, 0x18, 0xd1, 0x54, 0xbd, 0xdc, 0xe0, 0xcc, 0x4e, 0xd3, 0xc5, 0x9d, 0xcf, 0x09, 0x8b,
	0x8b, 0xa6, 0x67, 0x82, 0x8b, 0x5f, 0xe4, 0x22, 0x39, 0x0f, 0xd9, 0xb5, 0xea, 0x7a, 0x9d, 0x3b,
	0xbd, 0xd3, 0x59, 0x7d, 0x98, 0x7e, 0x8f, 0xcd, 0xbc, 0x04, 0x47, 0xd8, 0xf2, 0x42, 0x04, 0x7b,
	0x9c, 0xf5, 0x0f, 0x52, 0xb0, 0x2b, 0x7c, 0x34, 0xaf, 0x83, 0x54, 0x35, 0x48, 0xc9, 0xd2, 0x2b,
	0x84, 0x83, 0xa1, 0xcb, 0x21, 0x61, 0xa4, 0x6a, 0x90, 0x45, 0xbd, 0x42, 0x62, 0x93, 0xaf, 0xc0,
	0x51, 0x46, 0x43, 0x02, 0x0e, 0x5a, 0x49, 0x3d, 0x44, 0x01, 0x6f, 0xf2, 0x31, 0xc9, 0xdf, 0x38,
	0xa5, 0xca, 0xf2, 0xf2, 0x7a, 0x59, 0xb5, 0xc8, 0x65, 0xd2, 0x06, 0x25, 0xc5, 0x72, 0x34, 0xfd,
	0xe6, 0x38, 0xd7, 0x7c, 0x6a, 0x12, 0xf9, 0x79, 0xb8, 0xab, 0x4f, 0x97, 0x87, 0x0b, 0xdc, 0xdd,
	0xfd, 0x8c, 0x9c, 0x3c, 0x0f, 0x43, 0x61, 0x96, 0x99, 0x35, 0x0c, 0x42, 0x7a, 0x85, 0xb8, 0x9a,
	0x6f, 0xff, 0xc4, 0x87, 0x00, 0x98, 0x9c, 0xed, 0x0f, 0x54, 0xa7, 0x7b, 0xe8, 0xc8, 0x65, 0x42,
	0xe4, 0x97, 0xe0, 0xd8, 0x3c, 0xb1, 0xae, 0xd3, 0x32, 0xf6, 0x45, 0x62, 0x87, 0xfe, 0x0d, 0xd5,
	0x52, 0x97, 0xf4, 0xb2, 0x6e, 0xe9, 0x9e, 0x0f, 0x92, 0x1f, 0xc1, 0x44, 0x32, 0x18, 0x5b, 0x7f,
	0x01, 0xb0, 0x16, 0xfb, 0xca, 0x1c, 0xd7, 0x31, 0x0e, 0xb3, 0x11, 0x54, 0x0d, 0x85, 0x33, 0x5d,
	0xfe, 0x35, 0x82, 0x31, 0x9a, 0xbe, 0xbb, 0xa6, 0x2e, 0x91, 0x32, 0xd1, 0x22, 0xb9, 0xfc, 0x43,
	0x90, 0xe1, 0x77, 0x35, 0x38, 0xc3, 0xdf, 0xa1, 0x9f, 0x21, 0x90, 0xb9, 0x4f, 0x0b, 0x32, 0xf7,
	0xd7, 0xe0, 0x20, 0x9f, 0x34, 0x26, 0x90, 0x53, 0x80, 0xcb, 0xf4, 0x4b, 0x29, 0x56, 0x9b, 0x19,
	0x2c, 0x87, 0xe6, 0x14, 0x35, 0xf9, 0x17, 0x29, 0x18, 0xa3, 0x45, 0x4e, 0x3e, 0xa7, 0x0f, 0xc5,
	0xd8, 0x76, 0x58, 0xb7, 0x63, 0xb4, 0x79, 0x52, 0x4e, 0x25, 0x4b, 0x39, 0xfd, 0x5d, 0xa4, 0x9c,
	0x11, 0x48, 0xf9, 0xef, 0x08, 0xb2, 0x4e, 0xd8, 0x7c, 0xde, 0x84, 0x72, 0x12, 0xf6, 0x2d, 0x57,
	0x0d, 0x4b, 0xd5, 0x0d, 0xb3, 0xa4, 0xd2, 0x2e, 0x01, 0x8d, 0x95, 0x4e, 0x06, 0xdd, 0x0f, 0xac,
	0x7b, 0x40, 0x93, 0xdf, 0xa2, 0x27, 0xcd, 0x30, 0x17, 0x7e, 0x9c, 0xe7, 0xe2, 0x42, 0x02, 0x5c,
	0x25, 0x38, 0xc8, 0xc7, 0xc5, 0xf4, 0xee, 0xcd, 0x78, 0x69, 0xe4, 0x28, 0xc7, 0xfe, 0x22, 0x12,
	0xf5, 0xe7, 0xc8, 0xbf, 0x41, 0x70, 0x90, 0xad, 0xf6, 0xdc, 0x89, 0x5d, 0xfe, 0x1a, 0xc1, 0x31,
	0x5a, 0x18, 0x0f, 0xd3, 0x16, 0x2d, 0x90, 0xb7, 0x53, 0x35, 0xc4, 0x15, 0xf3, 0x2f, 0x11, 0x0c,
	0xb3, 0x86, 0xa0, 0x35, 0xdd, 0x22, 0xf6, 0xa5, 0x62, 0xd7, 0x5d, 0xd9, 0x09, 0xe8, 0xf5, 0x25,
	0x40, 0xc3, 0x4f, 0x8f, 0x1b, 0x5a, 0xb2, 0x48, 0x01, 0xaf, 0x70, 0x6a, 0x9f, 0x1c, 0x47, 0x62,
	0xd4, 0x31, 0xad, 0x3a, 0x0a, 0x7d, 0x9f, 0xb8, 0x83, 0xbe, 0x1f, 0xeb, 0xf5, 0xc6, 0x8a, 0x9a,
	0xfc, 0x47, 0x04, 0xfb, 0xe7, 0x89, 0x15, 0xe3, 0xac, 0xca, 0x9b, 0xba, 0xc3, 0x9b, 0x10, 0x24,
	0x64, 0x7b, 0xa6, 0x79, 0x91, 0xde, 0x52, 0x3c, 0xaa, 0x9f, 0xce, 0x28, 0xef, 0xc0, 0x70, 0x14,
	0x0b, 0x13, 0xdc, 0x1b, 0x00, 0x1e, 0x6d, 0xae, 0x3d, 0x1e, 0xe4, 0x75, 0xc7, 0x78, 0x62, 0x0b,
	0xc0, 0xcb, 0x9f, 0xa7, 0x60, 0x98, 0xf5, 0xbe, 0xb4, 0x5d, 0xac, 0xbb, 0x16, 0x06, 0x22, 0x1a,
	0x9a, 0x49, 0xd0, 0xd0, 0xbf, 0x22, 0x38, 0x12, 0x91, 0x47, 0xcc, 0x9b, 0x3e, 0x73, 0xc1, 0x44,
	0xe8, 0x4f, 0x25, 0xd0, 0xff, 0x04, 0xc1, 0x88, 0xdb, 0x53, 0xd6, 0xee, 0x0d, 0x95, 0xff, 0x81,
	0x40, 0x0a, 0x54, 0x58, 0x57, 0x48, 0xfd, 0x9a, 0x5e, 0xd1, 0x77, 0xdf, 0x23, 0x95, 0x60, 0xc0,
	0xbd, 0xd1, 0x97, 0xca, 0xf6, 0x8a, 0xee, 0xa1, 0xf8, 0x54, 0xc2, 0xa1, 0x38, 0x48, 0xe1, 0x25,
	0xc3, 0xaa, 0x37, 0x02, 0xc7, 0xe3, 0x7e, 0x2b, 0xf8, 0xd5, 0x94, 0x8b, 0xee, 0xa9, 0x31, 0xc2,
	0x17, 0x33, 0xc9, 0x29, 0xd8, 0x17, 0x5e, 0xdf, 0x77, 0x68, 0x03, 0x21, 0x4c, 0x45, 0x4d, 0xfe,
	0x1b, 0x82, 0x11, 0x37, 0x7f, 0x1e, 0x15, 0xd0, 0xa6, 0x10, 0xcf, 0x0e, 0xef, 0x5a, 0x94, 0xaa,
	0xed, 0x79, 0xb8, 0x2b, 0x30, 0x1a, 0xcc, 0xc3, 0x50, 0x19, 0x3d, 0x95, 0x97, 0x5b, 0xa5, 0x99,
	0xbb, 0x28, 0x26, 0x26, 0xd6, 0x62, 0x7c, 0x5b, 0xa9, 0xbb, 0x1b, 0x4f, 0x48, 0xee, 0x50, 0x81,
	0x46, 0x37, 0xf0, 0x5b, 0x04, 0x12, 0x35, 0xf3, 0xe7, 0x4c, 0xf0, 0x1c, 0xd5, 0x4d, 0xed, 0xa8,
	0xea, 0xfe, 0x19, 0xc1, 0x61, 0x0e, 0xe7, 0x37, 0xd4, 0x0a, 0x69, 0x3f, 0xf7, 0xc9, 0x11, 0x40,
	0xfe, 0x25, 0x82, 0x31, 0xa6, 0x2b, 0xcf, 0xd7, 0xb6, 0xc9, 0x7f, 0x42, 0x20, 0xd3, 0x53, 0x63,
	0x88, 0xb0, 0xe8, 0xa1, 0xb1, 0x7d, 0x92, 0x15, 0x1f, 0x19, 0x7f, 0xe5, 0xf5, 0xf5, 0x87, 0xfb,
	0x5e, 0x5b, 0xf4, 0xce, 0xdb, 0x8f, 0xc6, 0xdf, 0x83, 0x4c, 0xa0, 0xed, 0x9e, 0xd7, 0xc3, 0x4f,
	0x09, 0x89, 0x35, 0xdd, 0x3b, 0xd3, 0x62, 0x51, 0xac, 0x73, 0xb7, 0xa3, 0x2f, 0x77, 0xd3, 0xf6,
	0x3c, 0x0b, 0xad, 0xf2, 0xba, 0xfb, 0xdd, 0x9d, 0xf1, 0xbb, 0xfb, 0xfd, 0x3e, 0x61, 0x14, 0x79,
	0x12, 0xf0, 0x15, 0x72, 0xda, 0xfb, 0x63, 0x4d, 0xcc, 0x91, 0x19, 0xbb, 0xd5, 0x59, 0xbc, 0xbd,
	0xd0, 0x51, 0xa0, 0xd5, 0x2f, 0x87, 0x58, 0xfd, 0x29, 0xef, 0xab, 0xd7, 0x69, 0x09, 0xc4, 0xc7,
	0xc1, 0xa4, 0x74, 0x0e, 0x28, 0x51, 0x7e, 0x9a, 0x68, 0x54, 0xa8, 0x6b, 0x8a, 0x07, 0x2a, 0x3f,
	0x49, 0xc3, 0x7e, 0xea, 0x20, 0xdb, 0x26, 0xc2, 0x26, 0x07, 0xe1, 0xa8, 0x05, 0xa4, 0xdb, 0x62,
	0x01, 0x99, 0x67, 0x61, 0x01, 0x81, 0x87, 0x1a, 0xed, 0xda, 0x8d, 0x40, 0xab, 0x3c, 0x25, 0x81,
	0xd3, 0x2a, 0xff, 0xac, 0x14, 0x43, 0xe8, 0xc5, 0xf3, 0x5f, 0xbf, 0x02, 0x3d, 0xf3, 0x8e, 0x52,
	0xcf, 0xdd, 0x2a, 0x62, 0x15, 0xfa, 0x82, 0xcf, 0x82, 0xf0, 0xcb, 0x1c, 0xc5, 0xe7, 0xbc, 0xe5,
	0x92, 0x8e, 0x37, 0x85, 0xa3, 0xb6, 0x25, 0x77, 0xe0, 0xeb, 0xd0, 0xe3, 0x3d, 0x22, 0xc2, 0xbc,
	0xfc, 0x6b, 0xf4, 0x89, 0x91, 0x24, 0x7e, 0xb2, 0x21, 0x77, 0xe0, 0x5b, 0xd0, 0x17, 0x7c, 0x13,
	0xc4, 0xa7, 0x38, 0xfe, 0x68, 0x48, 0x1a, 0xce, 0xd1, 0x17, 0x80, 0x39, 0xf7, 0x05, 0x60, 0xee,
	0x52, 0xa5, 0x66, 0x35, 0xe4, 0x0e, 0xac, 0xc0, 0xde, 0xd0, 0xe3, 0x1a, 0xcc, 0x63, 0x8e, 0xf7,
	0xfc, 0x26, 0x01, 0xe7, 0x1d, 0x18, 0x88, 0x3c, 0xd9, 0xc1, 0x27, 0x38, 0x58, 0xf9, 0xcf, 0x7a,
	0x12, 0xf0, 0xde, 0x87, 0xde, 0xc0, 0xab, 0x17, 0xfc, 0x12, 0x2f, 0x9d, 0x16, 0x7b, 0xa4, 0x23,
	0xbd, 0xdc, 0x0c, 0xcc, 0xdb, 0xac, 0x0f, 0x00, 0xc7, 0x1f, 0xb8, 0x60, 0xde, 0x91, 0x52, 0xf8,
	0x0e, 0x26, 0x81, 0xfa, 0x0f, 0x61, 0x88, 0xf7, 0x94, 0x04, 0xe7, 0xb8, 0x47, 0x56, 0xe1, 0x9b,
	0x93, 0x26, 0x7b, 0x19, 0x7c, 0x11, 0xc9, 0xdf, 0x4b, 0xce, 0x9b, 0xc9, 0x04, 0x9c, 0x1f, 0x00,
	0x8e, 0x3f, 0x98, 0xe4, 0xca, 0x44, 0xf8, 0xae, 0x32, 0x01, 0xbb, 0x06, 0x7b, 0x43, 0x2f, 0x29,
	0xb0, 0xd8, 0xb4, 0xc2, 0xc9, 0x4f, 0x69, 0xb2, 0x39, 0xa0, 0xb7, 0xaf, 0xb7, 0x00, 0xfc, 0x87,
	0x08, 0x78, 0x82, 0x6f, 0x85, 0x11, 0xfc, 0x09, 0x6d, 0xec, 0x72, 0x07, 0x5e, 0x72, 0x52, 0x6c,
	0xd1, 0xa7, 0x0d, 0x78, 0x3a, 0x11, 0x75, 0xf4, 0x09, 0x44, 0x93, 0x35, 0x34, 0xd8, 0x1b, 0x6a,
	0xba, 0xe7, 0xca, 0x86, 0xf7, 0x66, 0x81, 0x2b, 0x1b, 0x6e, 0xff, 0xbe, 0xdc, 0x81, 0x3f, 0x76,
	0x3a, 0xf2, 0xe2, 0xfd, 0xf5, 0x78, 0x86, 0xcf, 0x8b, 0xb0, 0x13, 0x5f, 0xe2, 0x99, 0x63, 0x1c,
	0x9a, 0x9a, 0x71, 0xe0, 0x2d, 0x10, 0xd7, 0x8c, 0xe3, 0xcf, 0x99, 0xb8, 0x66, 0xcc, 0x79, 0x52,
	0x24, 0x77, 0xe0, 0x1a, 0xec, 0x8b, 0x35, 0xac, 0xe3, 0x93, 0x42, 0x7d, 0xe1, 0x28, 0xec, 0xa9,
	0xd6, 0x80, 0xbd, 0x15, 0x3f, 0x72, 0x5b, 0xe4, 0x39, 0x0d, 0xa1, 0xf8, 0x8c, 0x10, 0x99, 0xb8,
	0x97, 0x35, 0xd9, 0xb9, 0x46, 0x3a, 0xd7, 0xb9, 0xce, 0x95, 0xdf, 0xdd, 0x9e, 0x80, 0x77, 0x05,
	0x46, 0x04, 0x7d, 0xd9, 0xf8, 0xb4, 0x00, 0xff, 0x53, 0xd1, 0xff, 0x11, 0x0c, 0x44, 0x1a, 0x7f,
	0xf9, 0xf4, 0x73, 0xdb, 0xa2, 0xa5, 0xa9, 0x56, 0x40, 0xbd, 0x7d, 0xf9, 0x14, 0xd1, 0x2e, 0xe3,
	0x96, 0x99, 0x4a, 0x6c, 0x30, 0x96, 0xf2, 0xdb, 0x99, 0xe2, 0x11, 0xf1, 0x3e, 0xec, 0x8b, 0x35,
	0xfc, 0xf2, 0xd5, 0x51, 0xd0, 0x16, 0x9c, 0xe8, 0x9d, 0xfb, 0xc3, 0x5d, 0xa5, 0x78, 0x92, 0x6f,
	0xb6, 0x1c, 0xac, 0x4d, 0x1a, 0x14, 0xe5, 0x0e, 0xbc, 0x06, 0x43, 0xbc, 0x9e, 0x55, 0x6e, 0xc4,
	0x4a, 0x68, 0x6e, 0x6d, 0x61, 0xa5, 0x0a, 0x0c, 0x46, 0xdb, 0x2b, 0xf1, 0x94, 0xc0, 0x8b, 0xf1,
	0x76, 0xe6, 0x64, 0x4b, 0xb0, 0xde, 0x96, 0x2c, 0x40, 0x6f, 0xa0, 0x89, 0x92, 0xeb, 0x81, 0xe2,
	0x4d, 0x96, 0x52, 0x52, 0xc3, 0x99, 0xdc, 0x61, 0x9f, 0x26, 0x83, 0xbd, 0x7a, 0x58, 0x74, 0xee,
	0x88, 0xa2, 0x3d, 0xde, 0x14, 0xce, 0xa3, 0x7b, 0x83, 0xde, 0x03, 0x23, 0x9d, 0x72, 0xdc, 0xb0,
	0x23, 0x6e, 0xed, 0x93, 0x72, 0xad, 0x82, 0x7b, 0xeb, 0xb2, 0x50, 0xe4, 0xb5, 0x90, 0x09, 0x43,
	0x51, 0xb4, 0xc1, 0x4e, 0x18, 0x8a, 0x62, 0xdd, 0x68, 0x72, 0x07, 0x2e, 0xc1, 0x40, 0xa4, 0x57,
	0x8c, 0xeb, 0x19, 0xf8, 0xfd, 0x64, 0xd2, 0x11, 0x5e, 0x7c, 0x08, 0xc0, 0xc9, 0x1d, 0xf8, 0x81,
	0x13, 0xeb, 0xe2, 0xad, 0x5f, 0xa2, 0x58, 0x27, 0x6c, 0x12, 0x6b, 0x65, 0xb1, 0xdb, 0xd0, 0xed,
	0xb6, 0x7f, 0x61, 0x99, 0xeb, 0x38, 0x42, 0x4d, 0x66, 0xd2, 0xb1, 0x44, 0x18, 0x4f, 0x48, 0x0d,
	0x37, 0xd9, 0x11, 0xae, 0xbb, 0x72, 0x6d, 0x32, 0xa1, 0x65, 0x43, 0x9a, 0x69, 0x19, 0xde, 0x5b,
	0x9a, 0x38, 0xaf, 0x57, 0x23, 0xeb, 0x9e, 0x14, 0x89, 0x8e, 0xb7, 0x68, 0xf3, 0x02, 0x38, 0xe5,
	0x90, 0x57, 0x58, 0xc7, 0x22, 0xb5, 0x15, 0x54, 0xf3, 0xb9, 0x1c, 0x26, 0x55, 0xec, 0x1d, 0x05,
	0x19, 0xe2, 0x35, 0x7f, 0x70, 0x97, 0x4e, 0xe8, 0x12, 0x69, 0x8d, 0xcf, 0xbb, 0xd0, 0xcf, 0xee,
	0x3f, 0x49, 0x47, 0xae, 0xa4, 0x0e, 0x80, 0x84, 0xc0, 0x50, 0x83, 0x83, 0x49, 0xe5, 0x79, 0x3c,
	0x2b, 0xbc, 0x74, 0x24, 0xd6, 0xf3, 0x93, 0xe3, 0x7a, 0xa4, 0x68, 0xcd, 0xb5, 0x5e, 0x7e, 0xd9,
	0x9d, 0x1b, 0xd7, 0x05, 0x35, 0x70, 0xe7, 0x0c, 0xd4, 0x17, 0xac, 0x70, 0x73, 0x5d, 0x2d, 0xa7,
	0x04, 0x2e, 0x25, 0x16, 0x7c, 0xe5, 0x0e, 0xbc, 0x0a, 0xfd, 0xe1, 0xf2, 0x31, 0x16, 0xf9, 0xaf,
	0x58, 0x9d, 0x5a, 0x3a, 0xd1, 0x02, 0x64, 0xe0, 0xa6, 0x39, 0x10, 0x29, 0x9f, 0xf2, 0x6f, 0xc8,
	0xdc, 0x92, 0x73, 0x53, 0x36, 0x0c, 0xc8, 0x8a, 0x8a, 0xb3, 0x38, 0xdf, 0x7c, 0x99, 0x98, 0x25,
	0x35, 0x5b, 0xef, 0x5d, 0x18, 0x8c, 0x16, 0x53, 0xb9, 0xd1, 0x5b, 0x50, 0x71, 0x4d, 0x50, 0xaa,
	0x0d, 0x37, 0xe9, 0x1e, 0xaa, 0x17, 0x70, 0x03, 0x9e, 0xb8, 0x82, 0x2a, 0xe5, 0x5a, 0x05, 0xf7,
	0xf6, 0x67, 0xc9, 0x49, 0x0e, 0x87, 0x17, 0x9d, 0x4a, 0x38, 0xf5, 0x44, 0x57, 0x6c, 0x5a, 0x6a,
	0x93, 0x3b, 0xb0, 0x49, 0xff, 0x4b, 0x91, 0x70, 0x15, 0x8f, 0x7b, 0xb3, 0x16, 0x96, 0x0d, 0xa5,
	0xe9, 0x16, 0xa1, 0x3d, 0xc6, 0xd6, 0xdc, 0xac, 0x6d, 0x73, 0x81, 0x8a, 0x0b, 0x7f, 0x2d, 0xb1,
	0x57, 0x83, 0x11, 0x41, 0x01, 0x8d, 0x7b, 0xf4, 0x4e, 0x2e, 0xb6, 0xb5, 0xb4, 0xe2, 0x87, 0x5e,
	0x12, 0x34, 0xcc, 0x5c, 0x4e, 0xac, 0x8a, 0x5c, 0xee, 0xc4, 0xea, 0x68, 0xb8, 0x29, 0x4e, 0x6e,
	0xf9, 0x0a, 0x9f, 0x13, 0x3a, 0xd5, 0xa4, 0x72, 0x57, 0xc2, 0x7a, 0x5e, 0x82, 0x92, 0xa5, 0xa2,
	0xc4, 0x09, 0xca, 0x70, 0x12, 0xea, 0x78, 0x53, 0xb8, 0x48, 0x82, 0x92, 0xe1, 0x17, 0x24, 0x28,
	0xc3, 0xc8, 0xc5, 0xe5, 0x01, 0xff, 0x10, 0xec, 0x56, 0x19, 0x84, 0x87, 0xe0, 0x48, 0x29, 0x43,
	0x78, 0x08, 0x8e, 0x96, 0x2b, 0x9c, 0xc3, 0x7b, 0x5f, 0xb0, 0xf0, 0xc0, 0x5d, 0x82, 0x53, 0x99,
	0x48, 0xa6, 0xdb, 0x4f, 0x83, 0x32, 0xac, 0x09, 0x69, 0xd0, 0x6d, 0x27, 0xfc, 0xc2, 0x09, 0xf1,
	0x84, 0x84, 0x1f, 0x37, 0x73, 0x9e, 0xec, 0x1e, 0x39, 0x9d, 0xf9, 0xa2, 0x34, 0x94, 0xe0, 0x2d,
	0x81, 0x94, 0x6b, 0x15, 0xdc, 0xdb, 0x02, 0x5b, 0x2f, 0x03, 0xcd, 0xcf, 0x82, 0x34, 0x74, 0xac,
	0x21, 0x9c, 0xaf, 0x97, 0x9c, 0x2e, 0x6a, 0xb9, 0x03, 0xff, 0x1c, 0x39, 0xef, 0x34, 0x84, 0x0d,
	0xcf, 0xdc, 0x13, 0x4c, 0x0b, 0x8d, 0xd4, 0xd2, 0xab, 0xdb, 0x9e, 0xe7, 0xd2, 0x54, 0xd8, 0xf7,
	0xfe, 0x40, 0xe4, 0x3f, 0xa4, 0x5b, 0xda, 0xe3, 0xec, 0xc9, 0x99, 0xff, 0x07, 0x00, 0x00, 0xff,
	0xff, 0x63, 0x90, 0xcf, 0xb9, 0xb2, 0x4f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GlobalAPIClient is the client API for GlobalAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GlobalAPIClient interface {
	// Wallet
	CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error)
	GetWallet(ctx context.Context, in *GetWalletRequest, opts ...grpc.CallOption) (*Wallet, error)
	CancelWallet(ctx context.Context, in *CancelWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ArchiveWallet(ctx context.Context, in *ArchiveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	UnArchiveWallet(ctx context.Context, in *UnArchiveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ListWallets(ctx context.Context, in *ListWalletsRequest, opts ...grpc.CallOption) (*ListWalletsResponse, error)
	UpdateWalletPolicy(ctx context.Context, in *UpdateWalletPolicyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReviewWalletProposal(ctx context.Context, in *ReviewWalletProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Review
	ApproveWallet(ctx context.Context, in *ApproveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ApproveTransaction(ctx context.Context, in *ApproveTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Address
	CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error)
	GetAddress(ctx context.Context, in *GetAddressRequest, opts ...grpc.CallOption) (*Address, error)
	GetAddressByAddress(ctx context.Context, in *GetAddressByAddressRequest, opts ...grpc.CallOption) (*Address, error)
	ListAddresses(ctx context.Context, in *ListAddressesRequest, opts ...grpc.CallOption) (*ListAddressesResponse, error)
	GetEthereumFeeAddress(ctx context.Context, in *GetEthereumFeeAddressRequest, opts ...grpc.CallOption) (*EthereumFeeAddress, error)
	// RegisterKey
	RegisterKey(ctx context.Context, in *RegisterKeyRequest, opts ...grpc.CallOption) (*RegisterKeyResponse, error)
	// Transaction
	CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionResponse, error)
	CreateXRPInitTransactions(ctx context.Context, in *CreateXRPInitTransactionsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SignXRPInitTransactions(ctx context.Context, in *SignXRPInitTransactionsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	SendXRPInitTransactions(ctx context.Context, in *SendXRPInitTransactionsRequest, opts ...grpc.CallOption) (*SendXRPInitTransactionsResponse, error)
	CancelTransaction(ctx context.Context, in *CancelTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*Transaction, error)
	GetTransactionByTxID(ctx context.Context, in *GetTransactionByTxIDRequest, opts ...grpc.CallOption) (*Transaction, error)
	ListTransactions(ctx context.Context, in *ListTransactionsRequest, opts ...grpc.CallOption) (*ListTransactionsResponse, error)
	// SignInfo
	GetSignInfo(ctx context.Context, in *GetSignInfoRequest, opts ...grpc.CallOption) (*SignInfo, error)
	ListSignInfo(ctx context.Context, in *ListSignInfoRequest, opts ...grpc.CallOption) (*ListSignInfoResponse, error)
	ListXRPInitSignInfo(ctx context.Context, in *ListXRPInitSignInfoRequest, opts ...grpc.CallOption) (*ListXRPInitSignInfoResponse, error)
	// Transfer
	ListTransfers(ctx context.Context, in *ListTransfersRequest, opts ...grpc.CallOption) (*ListTransfersResponse, error)
	// Rate
	GetRateSnapshot(ctx context.Context, in *GetRateSnapshotRequest, opts ...grpc.CallOption) (*RateSnapshot, error)
	GetLatestRateSnapshot(ctx context.Context, in *GetLatestRateSnapshotRequest, opts ...grpc.CallOption) (*RateSnapshot, error)
	SetRates(ctx context.Context, in *SetRatesRequest, opts ...grpc.CallOption) (*SetRatesResponse, error)
	// policy
	CreateLabeledAddress(ctx context.Context, in *CreateLabeledAddressRequest, opts ...grpc.CallOption) (*CreateLabeledAddressResponse, error)
	GetLabeledAddress(ctx context.Context, in *GetLabeledAddressRequest, opts ...grpc.CallOption) (*LabeledAddress, error)
	ListLabeledAddresses(ctx context.Context, in *ListLabeledAddressesRequest, opts ...grpc.CallOption) (*ListLabeledAddressesResponse, error)
	UpdateLabeledAddress(ctx context.Context, in *UpdateLabeledAddressRequest, opts ...grpc.CallOption) (*LabeledAddress, error)
	ArchiveAddress(ctx context.Context, in *ArchiveLabeledAddressRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReviewLabeledAddressProposal(ctx context.Context, in *ReviewLabeledAddressProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateWhitelist(ctx context.Context, in *CreateWhitelistRequest, opts ...grpc.CallOption) (*CreateWhitelistResponse, error)
	GetWhitelist(ctx context.Context, in *GetWhitelistRequest, opts ...grpc.CallOption) (*Whitelist, error)
	ListWhitelists(ctx context.Context, in *ListWhitelistsRequest, opts ...grpc.CallOption) (*ListWhitelistsResponse, error)
	UpdateWhitelist(ctx context.Context, in *UpdateWhitelistRequest, opts ...grpc.CallOption) (*Whitelist, error)
	UpdateWhitelistAddresses(ctx context.Context, in *UpdateWhitelistAddressesRequest, opts ...grpc.CallOption) (*Whitelist, error)
	ArchiveWhitelist(ctx context.Context, in *ArchiveWhitelistRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateTransferLimit(ctx context.Context, in *CreateTransferLimitRequest, opts ...grpc.CallOption) (*CreateTransferLimitResponse, error)
	GetTransferLimit(ctx context.Context, in *GetTransferLimitRequest, opts ...grpc.CallOption) (*TransferLimit, error)
	ListTransferLimits(ctx context.Context, in *ListTransferLimitsRequest, opts ...grpc.CallOption) (*ListTransferLimitsResponse, error)
	UpdateTransferLimit(ctx context.Context, in *UpdateTransferLimitRequest, opts ...grpc.CallOption) (*TransferLimit, error)
	UpdateTransferLimitName(ctx context.Context, in *UpdateTransferLimitNameRequest, opts ...grpc.CallOption) (*TransferLimit, error)
	ArchiveTransferLimit(ctx context.Context, in *ArchiveTransferLimitRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReviewTransferLimitProposal(ctx context.Context, in *ReviewTransferLimitProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	CreatePolicy(ctx context.Context, in *CreatePolicyRequest, opts ...grpc.CallOption) (*CreatePolicyResponse, error)
	GetPolicy(ctx context.Context, in *GetPolicyRequest, opts ...grpc.CallOption) (*Policy, error)
	ListPolicies(ctx context.Context, in *ListPoliciesRequest, opts ...grpc.CallOption) (*ListPoliciesResponse, error)
	UpdatePolicy(ctx context.Context, in *UpdatePolicyRequest, opts ...grpc.CallOption) (*Policy, error)
	ArchivePolicy(ctx context.Context, in *ArchivePolicyRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReviewPolicyProposal(ctx context.Context, in *ReviewPolicyProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Utility
	GetSpendableBalance(ctx context.Context, in *GetSpendableBalanceRequest, opts ...grpc.CallOption) (*GetSpendableBalanceResponse, error)
	CalculateFee(ctx context.Context, in *CalculateFeeRequest, opts ...grpc.CallOption) (*CalculateFeeResponse, error)
	GetMembersDeactivatabilities(ctx context.Context, in *GetMembersDeactivatabilitiesRequest, opts ...grpc.CallOption) (*GetMembersDeactivatabilitiesResponse, error)
}

type globalAPIClient struct {
	cc *grpc.ClientConn
}

func NewGlobalAPIClient(cc *grpc.ClientConn) GlobalAPIClient {
	return &globalAPIClient{cc}
}

func (c *globalAPIClient) CreateWallet(ctx context.Context, in *CreateWalletRequest, opts ...grpc.CallOption) (*CreateWalletResponse, error) {
	out := new(CreateWalletResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetWallet(ctx context.Context, in *GetWalletRequest, opts ...grpc.CallOption) (*Wallet, error) {
	out := new(Wallet)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CancelWallet(ctx context.Context, in *CancelWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CancelWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ArchiveWallet(ctx context.Context, in *ArchiveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ArchiveWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UnArchiveWallet(ctx context.Context, in *UnArchiveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UnArchiveWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListWallets(ctx context.Context, in *ListWalletsRequest, opts ...grpc.CallOption) (*ListWalletsResponse, error) {
	out := new(ListWalletsResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListWallets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateWalletPolicy(ctx context.Context, in *UpdateWalletPolicyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateWalletPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ReviewWalletProposal(ctx context.Context, in *ReviewWalletProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ReviewWalletProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ApproveWallet(ctx context.Context, in *ApproveWalletRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ApproveWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ApproveTransaction(ctx context.Context, in *ApproveTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ApproveTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateAddress(ctx context.Context, in *CreateAddressRequest, opts ...grpc.CallOption) (*CreateAddressResponse, error) {
	out := new(CreateAddressResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetAddress(ctx context.Context, in *GetAddressRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetAddressByAddress(ctx context.Context, in *GetAddressByAddressRequest, opts ...grpc.CallOption) (*Address, error) {
	out := new(Address)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetAddressByAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListAddresses(ctx context.Context, in *ListAddressesRequest, opts ...grpc.CallOption) (*ListAddressesResponse, error) {
	out := new(ListAddressesResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetEthereumFeeAddress(ctx context.Context, in *GetEthereumFeeAddressRequest, opts ...grpc.CallOption) (*EthereumFeeAddress, error) {
	out := new(EthereumFeeAddress)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetEthereumFeeAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) RegisterKey(ctx context.Context, in *RegisterKeyRequest, opts ...grpc.CallOption) (*RegisterKeyResponse, error) {
	out := new(RegisterKeyResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/RegisterKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateTransaction(ctx context.Context, in *CreateTransactionRequest, opts ...grpc.CallOption) (*CreateTransactionResponse, error) {
	out := new(CreateTransactionResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateXRPInitTransactions(ctx context.Context, in *CreateXRPInitTransactionsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateXRPInitTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) SignTransaction(ctx context.Context, in *SignTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/SignTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) SignXRPInitTransactions(ctx context.Context, in *SignXRPInitTransactionsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/SignXRPInitTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) SendTransaction(ctx context.Context, in *SendTransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) SendXRPInitTransactions(ctx context.Context, in *SendXRPInitTransactionsRequest, opts ...grpc.CallOption) (*SendXRPInitTransactionsResponse, error) {
	out := new(SendXRPInitTransactionsResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/SendXRPInitTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CancelTransaction(ctx context.Context, in *CancelTransactionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CancelTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetTransaction(ctx context.Context, in *GetTransactionRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetTransactionByTxID(ctx context.Context, in *GetTransactionByTxIDRequest, opts ...grpc.CallOption) (*Transaction, error) {
	out := new(Transaction)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetTransactionByTxID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListTransactions(ctx context.Context, in *ListTransactionsRequest, opts ...grpc.CallOption) (*ListTransactionsResponse, error) {
	out := new(ListTransactionsResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetSignInfo(ctx context.Context, in *GetSignInfoRequest, opts ...grpc.CallOption) (*SignInfo, error) {
	out := new(SignInfo)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetSignInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListSignInfo(ctx context.Context, in *ListSignInfoRequest, opts ...grpc.CallOption) (*ListSignInfoResponse, error) {
	out := new(ListSignInfoResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListSignInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListXRPInitSignInfo(ctx context.Context, in *ListXRPInitSignInfoRequest, opts ...grpc.CallOption) (*ListXRPInitSignInfoResponse, error) {
	out := new(ListXRPInitSignInfoResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListXRPInitSignInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListTransfers(ctx context.Context, in *ListTransfersRequest, opts ...grpc.CallOption) (*ListTransfersResponse, error) {
	out := new(ListTransfersResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListTransfers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetRateSnapshot(ctx context.Context, in *GetRateSnapshotRequest, opts ...grpc.CallOption) (*RateSnapshot, error) {
	out := new(RateSnapshot)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetRateSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetLatestRateSnapshot(ctx context.Context, in *GetLatestRateSnapshotRequest, opts ...grpc.CallOption) (*RateSnapshot, error) {
	out := new(RateSnapshot)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetLatestRateSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) SetRates(ctx context.Context, in *SetRatesRequest, opts ...grpc.CallOption) (*SetRatesResponse, error) {
	out := new(SetRatesResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/SetRates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateLabeledAddress(ctx context.Context, in *CreateLabeledAddressRequest, opts ...grpc.CallOption) (*CreateLabeledAddressResponse, error) {
	out := new(CreateLabeledAddressResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateLabeledAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetLabeledAddress(ctx context.Context, in *GetLabeledAddressRequest, opts ...grpc.CallOption) (*LabeledAddress, error) {
	out := new(LabeledAddress)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetLabeledAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListLabeledAddresses(ctx context.Context, in *ListLabeledAddressesRequest, opts ...grpc.CallOption) (*ListLabeledAddressesResponse, error) {
	out := new(ListLabeledAddressesResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListLabeledAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateLabeledAddress(ctx context.Context, in *UpdateLabeledAddressRequest, opts ...grpc.CallOption) (*LabeledAddress, error) {
	out := new(LabeledAddress)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateLabeledAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ArchiveAddress(ctx context.Context, in *ArchiveLabeledAddressRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ArchiveAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ReviewLabeledAddressProposal(ctx context.Context, in *ReviewLabeledAddressProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ReviewLabeledAddressProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateWhitelist(ctx context.Context, in *CreateWhitelistRequest, opts ...grpc.CallOption) (*CreateWhitelistResponse, error) {
	out := new(CreateWhitelistResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetWhitelist(ctx context.Context, in *GetWhitelistRequest, opts ...grpc.CallOption) (*Whitelist, error) {
	out := new(Whitelist)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListWhitelists(ctx context.Context, in *ListWhitelistsRequest, opts ...grpc.CallOption) (*ListWhitelistsResponse, error) {
	out := new(ListWhitelistsResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListWhitelists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateWhitelist(ctx context.Context, in *UpdateWhitelistRequest, opts ...grpc.CallOption) (*Whitelist, error) {
	out := new(Whitelist)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateWhitelistAddresses(ctx context.Context, in *UpdateWhitelistAddressesRequest, opts ...grpc.CallOption) (*Whitelist, error) {
	out := new(Whitelist)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateWhitelistAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ArchiveWhitelist(ctx context.Context, in *ArchiveWhitelistRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ArchiveWhitelist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreateTransferLimit(ctx context.Context, in *CreateTransferLimitRequest, opts ...grpc.CallOption) (*CreateTransferLimitResponse, error) {
	out := new(CreateTransferLimitResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreateTransferLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetTransferLimit(ctx context.Context, in *GetTransferLimitRequest, opts ...grpc.CallOption) (*TransferLimit, error) {
	out := new(TransferLimit)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetTransferLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListTransferLimits(ctx context.Context, in *ListTransferLimitsRequest, opts ...grpc.CallOption) (*ListTransferLimitsResponse, error) {
	out := new(ListTransferLimitsResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListTransferLimits", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateTransferLimit(ctx context.Context, in *UpdateTransferLimitRequest, opts ...grpc.CallOption) (*TransferLimit, error) {
	out := new(TransferLimit)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateTransferLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdateTransferLimitName(ctx context.Context, in *UpdateTransferLimitNameRequest, opts ...grpc.CallOption) (*TransferLimit, error) {
	out := new(TransferLimit)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdateTransferLimitName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ArchiveTransferLimit(ctx context.Context, in *ArchiveTransferLimitRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ArchiveTransferLimit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ReviewTransferLimitProposal(ctx context.Context, in *ReviewTransferLimitProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ReviewTransferLimitProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CreatePolicy(ctx context.Context, in *CreatePolicyRequest, opts ...grpc.CallOption) (*CreatePolicyResponse, error) {
	out := new(CreatePolicyResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CreatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetPolicy(ctx context.Context, in *GetPolicyRequest, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ListPolicies(ctx context.Context, in *ListPoliciesRequest, opts ...grpc.CallOption) (*ListPoliciesResponse, error) {
	out := new(ListPoliciesResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ListPolicies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) UpdatePolicy(ctx context.Context, in *UpdatePolicyRequest, opts ...grpc.CallOption) (*Policy, error) {
	out := new(Policy)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/UpdatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ArchivePolicy(ctx context.Context, in *ArchivePolicyRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ArchivePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) ReviewPolicyProposal(ctx context.Context, in *ReviewPolicyProposalRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/ReviewPolicyProposal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetSpendableBalance(ctx context.Context, in *GetSpendableBalanceRequest, opts ...grpc.CallOption) (*GetSpendableBalanceResponse, error) {
	out := new(GetSpendableBalanceResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetSpendableBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) CalculateFee(ctx context.Context, in *CalculateFeeRequest, opts ...grpc.CallOption) (*CalculateFeeResponse, error) {
	out := new(CalculateFeeResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/CalculateFee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalAPIClient) GetMembersDeactivatabilities(ctx context.Context, in *GetMembersDeactivatabilitiesRequest, opts ...grpc.CallOption) (*GetMembersDeactivatabilitiesResponse, error) {
	out := new(GetMembersDeactivatabilitiesResponse)
	err := c.cc.Invoke(ctx, "/adamant.global.v1.GlobalAPI/GetMembersDeactivatabilities", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GlobalAPIServer is the server API for GlobalAPI service.
type GlobalAPIServer interface {
	// Wallet
	CreateWallet(context.Context, *CreateWalletRequest) (*CreateWalletResponse, error)
	GetWallet(context.Context, *GetWalletRequest) (*Wallet, error)
	CancelWallet(context.Context, *CancelWalletRequest) (*empty.Empty, error)
	ArchiveWallet(context.Context, *ArchiveWalletRequest) (*empty.Empty, error)
	UnArchiveWallet(context.Context, *UnArchiveWalletRequest) (*empty.Empty, error)
	ListWallets(context.Context, *ListWalletsRequest) (*ListWalletsResponse, error)
	UpdateWalletPolicy(context.Context, *UpdateWalletPolicyRequest) (*empty.Empty, error)
	ReviewWalletProposal(context.Context, *ReviewWalletProposalRequest) (*empty.Empty, error)
	// Review
	ApproveWallet(context.Context, *ApproveWalletRequest) (*empty.Empty, error)
	ApproveTransaction(context.Context, *ApproveTransactionRequest) (*empty.Empty, error)
	// Address
	CreateAddress(context.Context, *CreateAddressRequest) (*CreateAddressResponse, error)
	GetAddress(context.Context, *GetAddressRequest) (*Address, error)
	GetAddressByAddress(context.Context, *GetAddressByAddressRequest) (*Address, error)
	ListAddresses(context.Context, *ListAddressesRequest) (*ListAddressesResponse, error)
	GetEthereumFeeAddress(context.Context, *GetEthereumFeeAddressRequest) (*EthereumFeeAddress, error)
	// RegisterKey
	RegisterKey(context.Context, *RegisterKeyRequest) (*RegisterKeyResponse, error)
	// Transaction
	CreateTransaction(context.Context, *CreateTransactionRequest) (*CreateTransactionResponse, error)
	CreateXRPInitTransactions(context.Context, *CreateXRPInitTransactionsRequest) (*empty.Empty, error)
	SignTransaction(context.Context, *SignTransactionRequest) (*empty.Empty, error)
	SignXRPInitTransactions(context.Context, *SignXRPInitTransactionsRequest) (*empty.Empty, error)
	SendTransaction(context.Context, *SendTransactionRequest) (*SendTransactionResponse, error)
	SendXRPInitTransactions(context.Context, *SendXRPInitTransactionsRequest) (*SendXRPInitTransactionsResponse, error)
	CancelTransaction(context.Context, *CancelTransactionRequest) (*empty.Empty, error)
	GetTransaction(context.Context, *GetTransactionRequest) (*Transaction, error)
	GetTransactionByTxID(context.Context, *GetTransactionByTxIDRequest) (*Transaction, error)
	ListTransactions(context.Context, *ListTransactionsRequest) (*ListTransactionsResponse, error)
	// SignInfo
	GetSignInfo(context.Context, *GetSignInfoRequest) (*SignInfo, error)
	ListSignInfo(context.Context, *ListSignInfoRequest) (*ListSignInfoResponse, error)
	ListXRPInitSignInfo(context.Context, *ListXRPInitSignInfoRequest) (*ListXRPInitSignInfoResponse, error)
	// Transfer
	ListTransfers(context.Context, *ListTransfersRequest) (*ListTransfersResponse, error)
	// Rate
	GetRateSnapshot(context.Context, *GetRateSnapshotRequest) (*RateSnapshot, error)
	GetLatestRateSnapshot(context.Context, *GetLatestRateSnapshotRequest) (*RateSnapshot, error)
	SetRates(context.Context, *SetRatesRequest) (*SetRatesResponse, error)
	// policy
	CreateLabeledAddress(context.Context, *CreateLabeledAddressRequest) (*CreateLabeledAddressResponse, error)
	GetLabeledAddress(context.Context, *GetLabeledAddressRequest) (*LabeledAddress, error)
	ListLabeledAddresses(context.Context, *ListLabeledAddressesRequest) (*ListLabeledAddressesResponse, error)
	UpdateLabeledAddress(context.Context, *UpdateLabeledAddressRequest) (*LabeledAddress, error)
	ArchiveAddress(context.Context, *ArchiveLabeledAddressRequest) (*empty.Empty, error)
	ReviewLabeledAddressProposal(context.Context, *ReviewLabeledAddressProposalRequest) (*empty.Empty, error)
	CreateWhitelist(context.Context, *CreateWhitelistRequest) (*CreateWhitelistResponse, error)
	GetWhitelist(context.Context, *GetWhitelistRequest) (*Whitelist, error)
	ListWhitelists(context.Context, *ListWhitelistsRequest) (*ListWhitelistsResponse, error)
	UpdateWhitelist(context.Context, *UpdateWhitelistRequest) (*Whitelist, error)
	UpdateWhitelistAddresses(context.Context, *UpdateWhitelistAddressesRequest) (*Whitelist, error)
	ArchiveWhitelist(context.Context, *ArchiveWhitelistRequest) (*empty.Empty, error)
	CreateTransferLimit(context.Context, *CreateTransferLimitRequest) (*CreateTransferLimitResponse, error)
	GetTransferLimit(context.Context, *GetTransferLimitRequest) (*TransferLimit, error)
	ListTransferLimits(context.Context, *ListTransferLimitsRequest) (*ListTransferLimitsResponse, error)
	UpdateTransferLimit(context.Context, *UpdateTransferLimitRequest) (*TransferLimit, error)
	UpdateTransferLimitName(context.Context, *UpdateTransferLimitNameRequest) (*TransferLimit, error)
	ArchiveTransferLimit(context.Context, *ArchiveTransferLimitRequest) (*empty.Empty, error)
	ReviewTransferLimitProposal(context.Context, *ReviewTransferLimitProposalRequest) (*empty.Empty, error)
	CreatePolicy(context.Context, *CreatePolicyRequest) (*CreatePolicyResponse, error)
	GetPolicy(context.Context, *GetPolicyRequest) (*Policy, error)
	ListPolicies(context.Context, *ListPoliciesRequest) (*ListPoliciesResponse, error)
	UpdatePolicy(context.Context, *UpdatePolicyRequest) (*Policy, error)
	ArchivePolicy(context.Context, *ArchivePolicyRequest) (*empty.Empty, error)
	ReviewPolicyProposal(context.Context, *ReviewPolicyProposalRequest) (*empty.Empty, error)
	// Utility
	GetSpendableBalance(context.Context, *GetSpendableBalanceRequest) (*GetSpendableBalanceResponse, error)
	CalculateFee(context.Context, *CalculateFeeRequest) (*CalculateFeeResponse, error)
	GetMembersDeactivatabilities(context.Context, *GetMembersDeactivatabilitiesRequest) (*GetMembersDeactivatabilitiesResponse, error)
}

// UnimplementedGlobalAPIServer can be embedded to have forward compatible implementations.
type UnimplementedGlobalAPIServer struct {
}

func (*UnimplementedGlobalAPIServer) CreateWallet(ctx context.Context, req *CreateWalletRequest) (*CreateWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) GetWallet(ctx context.Context, req *GetWalletRequest) (*Wallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) CancelWallet(ctx context.Context, req *CancelWalletRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) ArchiveWallet(ctx context.Context, req *ArchiveWalletRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) UnArchiveWallet(ctx context.Context, req *UnArchiveWalletRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnArchiveWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) ListWallets(ctx context.Context, req *ListWalletsRequest) (*ListWalletsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWallets not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateWalletPolicy(ctx context.Context, req *UpdateWalletPolicyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWalletPolicy not implemented")
}
func (*UnimplementedGlobalAPIServer) ReviewWalletProposal(ctx context.Context, req *ReviewWalletProposalRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReviewWalletProposal not implemented")
}
func (*UnimplementedGlobalAPIServer) ApproveWallet(ctx context.Context, req *ApproveWalletRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveWallet not implemented")
}
func (*UnimplementedGlobalAPIServer) ApproveTransaction(ctx context.Context, req *ApproveTransactionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateAddress(ctx context.Context, req *CreateAddressRequest) (*CreateAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) GetAddress(ctx context.Context, req *GetAddressRequest) (*Address, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) GetAddressByAddress(ctx context.Context, req *GetAddressByAddressRequest) (*Address, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddressByAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) ListAddresses(ctx context.Context, req *ListAddressesRequest) (*ListAddressesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAddresses not implemented")
}
func (*UnimplementedGlobalAPIServer) GetEthereumFeeAddress(ctx context.Context, req *GetEthereumFeeAddressRequest) (*EthereumFeeAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEthereumFeeAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) RegisterKey(ctx context.Context, req *RegisterKeyRequest) (*RegisterKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterKey not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateTransaction(ctx context.Context, req *CreateTransactionRequest) (*CreateTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateXRPInitTransactions(ctx context.Context, req *CreateXRPInitTransactionsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateXRPInitTransactions not implemented")
}
func (*UnimplementedGlobalAPIServer) SignTransaction(ctx context.Context, req *SignTransactionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) SignXRPInitTransactions(ctx context.Context, req *SignXRPInitTransactionsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignXRPInitTransactions not implemented")
}
func (*UnimplementedGlobalAPIServer) SendTransaction(ctx context.Context, req *SendTransactionRequest) (*SendTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) SendXRPInitTransactions(ctx context.Context, req *SendXRPInitTransactionsRequest) (*SendXRPInitTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendXRPInitTransactions not implemented")
}
func (*UnimplementedGlobalAPIServer) CancelTransaction(ctx context.Context, req *CancelTransactionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) GetTransaction(ctx context.Context, req *GetTransactionRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransaction not implemented")
}
func (*UnimplementedGlobalAPIServer) GetTransactionByTxID(ctx context.Context, req *GetTransactionByTxIDRequest) (*Transaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactionByTxID not implemented")
}
func (*UnimplementedGlobalAPIServer) ListTransactions(ctx context.Context, req *ListTransactionsRequest) (*ListTransactionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTransactions not implemented")
}
func (*UnimplementedGlobalAPIServer) GetSignInfo(ctx context.Context, req *GetSignInfoRequest) (*SignInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSignInfo not implemented")
}
func (*UnimplementedGlobalAPIServer) ListSignInfo(ctx context.Context, req *ListSignInfoRequest) (*ListSignInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSignInfo not implemented")
}
func (*UnimplementedGlobalAPIServer) ListXRPInitSignInfo(ctx context.Context, req *ListXRPInitSignInfoRequest) (*ListXRPInitSignInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListXRPInitSignInfo not implemented")
}
func (*UnimplementedGlobalAPIServer) ListTransfers(ctx context.Context, req *ListTransfersRequest) (*ListTransfersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTransfers not implemented")
}
func (*UnimplementedGlobalAPIServer) GetRateSnapshot(ctx context.Context, req *GetRateSnapshotRequest) (*RateSnapshot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRateSnapshot not implemented")
}
func (*UnimplementedGlobalAPIServer) GetLatestRateSnapshot(ctx context.Context, req *GetLatestRateSnapshotRequest) (*RateSnapshot, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatestRateSnapshot not implemented")
}
func (*UnimplementedGlobalAPIServer) SetRates(ctx context.Context, req *SetRatesRequest) (*SetRatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRates not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateLabeledAddress(ctx context.Context, req *CreateLabeledAddressRequest) (*CreateLabeledAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLabeledAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) GetLabeledAddress(ctx context.Context, req *GetLabeledAddressRequest) (*LabeledAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLabeledAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) ListLabeledAddresses(ctx context.Context, req *ListLabeledAddressesRequest) (*ListLabeledAddressesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListLabeledAddresses not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateLabeledAddress(ctx context.Context, req *UpdateLabeledAddressRequest) (*LabeledAddress, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLabeledAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) ArchiveAddress(ctx context.Context, req *ArchiveLabeledAddressRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveAddress not implemented")
}
func (*UnimplementedGlobalAPIServer) ReviewLabeledAddressProposal(ctx context.Context, req *ReviewLabeledAddressProposalRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReviewLabeledAddressProposal not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateWhitelist(ctx context.Context, req *CreateWhitelistRequest) (*CreateWhitelistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWhitelist not implemented")
}
func (*UnimplementedGlobalAPIServer) GetWhitelist(ctx context.Context, req *GetWhitelistRequest) (*Whitelist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWhitelist not implemented")
}
func (*UnimplementedGlobalAPIServer) ListWhitelists(ctx context.Context, req *ListWhitelistsRequest) (*ListWhitelistsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWhitelists not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateWhitelist(ctx context.Context, req *UpdateWhitelistRequest) (*Whitelist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWhitelist not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateWhitelistAddresses(ctx context.Context, req *UpdateWhitelistAddressesRequest) (*Whitelist, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWhitelistAddresses not implemented")
}
func (*UnimplementedGlobalAPIServer) ArchiveWhitelist(ctx context.Context, req *ArchiveWhitelistRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveWhitelist not implemented")
}
func (*UnimplementedGlobalAPIServer) CreateTransferLimit(ctx context.Context, req *CreateTransferLimitRequest) (*CreateTransferLimitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransferLimit not implemented")
}
func (*UnimplementedGlobalAPIServer) GetTransferLimit(ctx context.Context, req *GetTransferLimitRequest) (*TransferLimit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransferLimit not implemented")
}
func (*UnimplementedGlobalAPIServer) ListTransferLimits(ctx context.Context, req *ListTransferLimitsRequest) (*ListTransferLimitsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTransferLimits not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateTransferLimit(ctx context.Context, req *UpdateTransferLimitRequest) (*TransferLimit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransferLimit not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdateTransferLimitName(ctx context.Context, req *UpdateTransferLimitNameRequest) (*TransferLimit, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransferLimitName not implemented")
}
func (*UnimplementedGlobalAPIServer) ArchiveTransferLimit(ctx context.Context, req *ArchiveTransferLimitRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveTransferLimit not implemented")
}
func (*UnimplementedGlobalAPIServer) ReviewTransferLimitProposal(ctx context.Context, req *ReviewTransferLimitProposalRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReviewTransferLimitProposal not implemented")
}
func (*UnimplementedGlobalAPIServer) CreatePolicy(ctx context.Context, req *CreatePolicyRequest) (*CreatePolicyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePolicy not implemented")
}
func (*UnimplementedGlobalAPIServer) GetPolicy(ctx context.Context, req *GetPolicyRequest) (*Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicy not implemented")
}
func (*UnimplementedGlobalAPIServer) ListPolicies(ctx context.Context, req *ListPoliciesRequest) (*ListPoliciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPolicies not implemented")
}
func (*UnimplementedGlobalAPIServer) UpdatePolicy(ctx context.Context, req *UpdatePolicyRequest) (*Policy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePolicy not implemented")
}
func (*UnimplementedGlobalAPIServer) ArchivePolicy(ctx context.Context, req *ArchivePolicyRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchivePolicy not implemented")
}
func (*UnimplementedGlobalAPIServer) ReviewPolicyProposal(ctx context.Context, req *ReviewPolicyProposalRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReviewPolicyProposal not implemented")
}
func (*UnimplementedGlobalAPIServer) GetSpendableBalance(ctx context.Context, req *GetSpendableBalanceRequest) (*GetSpendableBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpendableBalance not implemented")
}
func (*UnimplementedGlobalAPIServer) CalculateFee(ctx context.Context, req *CalculateFeeRequest) (*CalculateFeeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateFee not implemented")
}
func (*UnimplementedGlobalAPIServer) GetMembersDeactivatabilities(ctx context.Context, req *GetMembersDeactivatabilitiesRequest) (*GetMembersDeactivatabilitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMembersDeactivatabilities not implemented")
}

func RegisterGlobalAPIServer(s *grpc.Server, srv GlobalAPIServer) {
	s.RegisterService(&_GlobalAPI_serviceDesc, srv)
}

func _GlobalAPI_CreateWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateWallet(ctx, req.(*CreateWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetWallet(ctx, req.(*GetWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CancelWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CancelWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CancelWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CancelWallet(ctx, req.(*CancelWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ArchiveWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ArchiveWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ArchiveWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ArchiveWallet(ctx, req.(*ArchiveWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UnArchiveWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnArchiveWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UnArchiveWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UnArchiveWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UnArchiveWallet(ctx, req.(*UnArchiveWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListWallets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWalletsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListWallets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListWallets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListWallets(ctx, req.(*ListWalletsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateWalletPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWalletPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateWalletPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateWalletPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateWalletPolicy(ctx, req.(*UpdateWalletPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ReviewWalletProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewWalletProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ReviewWalletProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ReviewWalletProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ReviewWalletProposal(ctx, req.(*ReviewWalletProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ApproveWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ApproveWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ApproveWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ApproveWallet(ctx, req.(*ApproveWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ApproveTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApproveTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ApproveTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ApproveTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ApproveTransaction(ctx, req.(*ApproveTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateAddress(ctx, req.(*CreateAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetAddress(ctx, req.(*GetAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetAddressByAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAddressByAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetAddressByAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetAddressByAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetAddressByAddress(ctx, req.(*GetAddressByAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAddressesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListAddresses(ctx, req.(*ListAddressesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetEthereumFeeAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEthereumFeeAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetEthereumFeeAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetEthereumFeeAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetEthereumFeeAddress(ctx, req.(*GetEthereumFeeAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_RegisterKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).RegisterKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/RegisterKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).RegisterKey(ctx, req.(*RegisterKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateTransaction(ctx, req.(*CreateTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateXRPInitTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateXRPInitTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateXRPInitTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateXRPInitTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateXRPInitTransactions(ctx, req.(*CreateXRPInitTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_SignTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).SignTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/SignTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).SignTransaction(ctx, req.(*SignTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_SignXRPInitTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignXRPInitTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).SignXRPInitTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/SignXRPInitTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).SignXRPInitTransactions(ctx, req.(*SignXRPInitTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).SendTransaction(ctx, req.(*SendTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_SendXRPInitTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendXRPInitTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).SendXRPInitTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/SendXRPInitTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).SendXRPInitTransactions(ctx, req.(*SendXRPInitTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CancelTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CancelTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CancelTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CancelTransaction(ctx, req.(*CancelTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetTransaction(ctx, req.(*GetTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetTransactionByTxID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransactionByTxIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetTransactionByTxID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetTransactionByTxID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetTransactionByTxID(ctx, req.(*GetTransactionByTxIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransactionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListTransactions(ctx, req.(*ListTransactionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetSignInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSignInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetSignInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetSignInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetSignInfo(ctx, req.(*GetSignInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListSignInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSignInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListSignInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListSignInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListSignInfo(ctx, req.(*ListSignInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListXRPInitSignInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListXRPInitSignInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListXRPInitSignInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListXRPInitSignInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListXRPInitSignInfo(ctx, req.(*ListXRPInitSignInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListTransfers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransfersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListTransfers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListTransfers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListTransfers(ctx, req.(*ListTransfersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetRateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRateSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetRateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetRateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetRateSnapshot(ctx, req.(*GetRateSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetLatestRateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLatestRateSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetLatestRateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetLatestRateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetLatestRateSnapshot(ctx, req.(*GetLatestRateSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_SetRates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).SetRates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/SetRates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).SetRates(ctx, req.(*SetRatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateLabeledAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLabeledAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateLabeledAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateLabeledAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateLabeledAddress(ctx, req.(*CreateLabeledAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetLabeledAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabeledAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetLabeledAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetLabeledAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetLabeledAddress(ctx, req.(*GetLabeledAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListLabeledAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLabeledAddressesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListLabeledAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListLabeledAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListLabeledAddresses(ctx, req.(*ListLabeledAddressesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateLabeledAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLabeledAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateLabeledAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateLabeledAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateLabeledAddress(ctx, req.(*UpdateLabeledAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ArchiveAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveLabeledAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ArchiveAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ArchiveAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ArchiveAddress(ctx, req.(*ArchiveLabeledAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ReviewLabeledAddressProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewLabeledAddressProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ReviewLabeledAddressProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ReviewLabeledAddressProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ReviewLabeledAddressProposal(ctx, req.(*ReviewLabeledAddressProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWhitelistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateWhitelist(ctx, req.(*CreateWhitelistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWhitelistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetWhitelist(ctx, req.(*GetWhitelistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListWhitelists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWhitelistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListWhitelists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListWhitelists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListWhitelists(ctx, req.(*ListWhitelistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWhitelistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateWhitelist(ctx, req.(*UpdateWhitelistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateWhitelistAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWhitelistAddressesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateWhitelistAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateWhitelistAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateWhitelistAddresses(ctx, req.(*UpdateWhitelistAddressesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ArchiveWhitelist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveWhitelistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ArchiveWhitelist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ArchiveWhitelist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ArchiveWhitelist(ctx, req.(*ArchiveWhitelistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreateTransferLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTransferLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreateTransferLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreateTransferLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreateTransferLimit(ctx, req.(*CreateTransferLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetTransferLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTransferLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetTransferLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetTransferLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetTransferLimit(ctx, req.(*GetTransferLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListTransferLimits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTransferLimitsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListTransferLimits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListTransferLimits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListTransferLimits(ctx, req.(*ListTransferLimitsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateTransferLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTransferLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateTransferLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateTransferLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateTransferLimit(ctx, req.(*UpdateTransferLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdateTransferLimitName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTransferLimitNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdateTransferLimitName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdateTransferLimitName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdateTransferLimitName(ctx, req.(*UpdateTransferLimitNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ArchiveTransferLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveTransferLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ArchiveTransferLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ArchiveTransferLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ArchiveTransferLimit(ctx, req.(*ArchiveTransferLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ReviewTransferLimitProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewTransferLimitProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ReviewTransferLimitProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ReviewTransferLimitProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ReviewTransferLimitProposal(ctx, req.(*ReviewTransferLimitProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CreatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CreatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CreatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CreatePolicy(ctx, req.(*CreatePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetPolicy(ctx, req.(*GetPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ListPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPoliciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ListPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ListPolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ListPolicies(ctx, req.(*ListPoliciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_UpdatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).UpdatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/UpdatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).UpdatePolicy(ctx, req.(*UpdatePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ArchivePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchivePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ArchivePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ArchivePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ArchivePolicy(ctx, req.(*ArchivePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_ReviewPolicyProposal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReviewPolicyProposalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).ReviewPolicyProposal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/ReviewPolicyProposal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).ReviewPolicyProposal(ctx, req.(*ReviewPolicyProposalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetSpendableBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpendableBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetSpendableBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetSpendableBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetSpendableBalance(ctx, req.(*GetSpendableBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_CalculateFee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateFeeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).CalculateFee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/CalculateFee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).CalculateFee(ctx, req.(*CalculateFeeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalAPI_GetMembersDeactivatabilities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMembersDeactivatabilitiesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalAPIServer).GetMembersDeactivatabilities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/adamant.global.v1.GlobalAPI/GetMembersDeactivatabilities",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalAPIServer).GetMembersDeactivatabilities(ctx, req.(*GetMembersDeactivatabilitiesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GlobalAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "adamant.global.v1.GlobalAPI",
	HandlerType: (*GlobalAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWallet",
			Handler:    _GlobalAPI_CreateWallet_Handler,
		},
		{
			MethodName: "GetWallet",
			Handler:    _GlobalAPI_GetWallet_Handler,
		},
		{
			MethodName: "CancelWallet",
			Handler:    _GlobalAPI_CancelWallet_Handler,
		},
		{
			MethodName: "ArchiveWallet",
			Handler:    _GlobalAPI_ArchiveWallet_Handler,
		},
		{
			MethodName: "UnArchiveWallet",
			Handler:    _GlobalAPI_UnArchiveWallet_Handler,
		},
		{
			MethodName: "ListWallets",
			Handler:    _GlobalAPI_ListWallets_Handler,
		},
		{
			MethodName: "UpdateWalletPolicy",
			Handler:    _GlobalAPI_UpdateWalletPolicy_Handler,
		},
		{
			MethodName: "ReviewWalletProposal",
			Handler:    _GlobalAPI_ReviewWalletProposal_Handler,
		},
		{
			MethodName: "ApproveWallet",
			Handler:    _GlobalAPI_ApproveWallet_Handler,
		},
		{
			MethodName: "ApproveTransaction",
			Handler:    _GlobalAPI_ApproveTransaction_Handler,
		},
		{
			MethodName: "CreateAddress",
			Handler:    _GlobalAPI_CreateAddress_Handler,
		},
		{
			MethodName: "GetAddress",
			Handler:    _GlobalAPI_GetAddress_Handler,
		},
		{
			MethodName: "GetAddressByAddress",
			Handler:    _GlobalAPI_GetAddressByAddress_Handler,
		},
		{
			MethodName: "ListAddresses",
			Handler:    _GlobalAPI_ListAddresses_Handler,
		},
		{
			MethodName: "GetEthereumFeeAddress",
			Handler:    _GlobalAPI_GetEthereumFeeAddress_Handler,
		},
		{
			MethodName: "RegisterKey",
			Handler:    _GlobalAPI_RegisterKey_Handler,
		},
		{
			MethodName: "CreateTransaction",
			Handler:    _GlobalAPI_CreateTransaction_Handler,
		},
		{
			MethodName: "CreateXRPInitTransactions",
			Handler:    _GlobalAPI_CreateXRPInitTransactions_Handler,
		},
		{
			MethodName: "SignTransaction",
			Handler:    _GlobalAPI_SignTransaction_Handler,
		},
		{
			MethodName: "SignXRPInitTransactions",
			Handler:    _GlobalAPI_SignXRPInitTransactions_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _GlobalAPI_SendTransaction_Handler,
		},
		{
			MethodName: "SendXRPInitTransactions",
			Handler:    _GlobalAPI_SendXRPInitTransactions_Handler,
		},
		{
			MethodName: "CancelTransaction",
			Handler:    _GlobalAPI_CancelTransaction_Handler,
		},
		{
			MethodName: "GetTransaction",
			Handler:    _GlobalAPI_GetTransaction_Handler,
		},
		{
			MethodName: "GetTransactionByTxID",
			Handler:    _GlobalAPI_GetTransactionByTxID_Handler,
		},
		{
			MethodName: "ListTransactions",
			Handler:    _GlobalAPI_ListTransactions_Handler,
		},
		{
			MethodName: "GetSignInfo",
			Handler:    _GlobalAPI_GetSignInfo_Handler,
		},
		{
			MethodName: "ListSignInfo",
			Handler:    _GlobalAPI_ListSignInfo_Handler,
		},
		{
			MethodName: "ListXRPInitSignInfo",
			Handler:    _GlobalAPI_ListXRPInitSignInfo_Handler,
		},
		{
			MethodName: "ListTransfers",
			Handler:    _GlobalAPI_ListTransfers_Handler,
		},
		{
			MethodName: "GetRateSnapshot",
			Handler:    _GlobalAPI_GetRateSnapshot_Handler,
		},
		{
			MethodName: "GetLatestRateSnapshot",
			Handler:    _GlobalAPI_GetLatestRateSnapshot_Handler,
		},
		{
			MethodName: "SetRates",
			Handler:    _GlobalAPI_SetRates_Handler,
		},
		{
			MethodName: "CreateLabeledAddress",
			Handler:    _GlobalAPI_CreateLabeledAddress_Handler,
		},
		{
			MethodName: "GetLabeledAddress",
			Handler:    _GlobalAPI_GetLabeledAddress_Handler,
		},
		{
			MethodName: "ListLabeledAddresses",
			Handler:    _GlobalAPI_ListLabeledAddresses_Handler,
		},
		{
			MethodName: "UpdateLabeledAddress",
			Handler:    _GlobalAPI_UpdateLabeledAddress_Handler,
		},
		{
			MethodName: "ArchiveAddress",
			Handler:    _GlobalAPI_ArchiveAddress_Handler,
		},
		{
			MethodName: "ReviewLabeledAddressProposal",
			Handler:    _GlobalAPI_ReviewLabeledAddressProposal_Handler,
		},
		{
			MethodName: "CreateWhitelist",
			Handler:    _GlobalAPI_CreateWhitelist_Handler,
		},
		{
			MethodName: "GetWhitelist",
			Handler:    _GlobalAPI_GetWhitelist_Handler,
		},
		{
			MethodName: "ListWhitelists",
			Handler:    _GlobalAPI_ListWhitelists_Handler,
		},
		{
			MethodName: "UpdateWhitelist",
			Handler:    _GlobalAPI_UpdateWhitelist_Handler,
		},
		{
			MethodName: "UpdateWhitelistAddresses",
			Handler:    _GlobalAPI_UpdateWhitelistAddresses_Handler,
		},
		{
			MethodName: "ArchiveWhitelist",
			Handler:    _GlobalAPI_ArchiveWhitelist_Handler,
		},
		{
			MethodName: "CreateTransferLimit",
			Handler:    _GlobalAPI_CreateTransferLimit_Handler,
		},
		{
			MethodName: "GetTransferLimit",
			Handler:    _GlobalAPI_GetTransferLimit_Handler,
		},
		{
			MethodName: "ListTransferLimits",
			Handler:    _GlobalAPI_ListTransferLimits_Handler,
		},
		{
			MethodName: "UpdateTransferLimit",
			Handler:    _GlobalAPI_UpdateTransferLimit_Handler,
		},
		{
			MethodName: "UpdateTransferLimitName",
			Handler:    _GlobalAPI_UpdateTransferLimitName_Handler,
		},
		{
			MethodName: "ArchiveTransferLimit",
			Handler:    _GlobalAPI_ArchiveTransferLimit_Handler,
		},
		{
			MethodName: "ReviewTransferLimitProposal",
			Handler:    _GlobalAPI_ReviewTransferLimitProposal_Handler,
		},
		{
			MethodName: "CreatePolicy",
			Handler:    _GlobalAPI_CreatePolicy_Handler,
		},
		{
			MethodName: "GetPolicy",
			Handler:    _GlobalAPI_GetPolicy_Handler,
		},
		{
			MethodName: "ListPolicies",
			Handler:    _GlobalAPI_ListPolicies_Handler,
		},
		{
			MethodName: "UpdatePolicy",
			Handler:    _GlobalAPI_UpdatePolicy_Handler,
		},
		{
			MethodName: "ArchivePolicy",
			Handler:    _GlobalAPI_ArchivePolicy_Handler,
		},
		{
			MethodName: "ReviewPolicyProposal",
			Handler:    _GlobalAPI_ReviewPolicyProposal_Handler,
		},
		{
			MethodName: "GetSpendableBalance",
			Handler:    _GlobalAPI_GetSpendableBalance_Handler,
		},
		{
			MethodName: "CalculateFee",
			Handler:    _GlobalAPI_CalculateFee_Handler,
		},
		{
			MethodName: "GetMembersDeactivatabilities",
			Handler:    _GlobalAPI_GetMembersDeactivatabilities_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto",
}
