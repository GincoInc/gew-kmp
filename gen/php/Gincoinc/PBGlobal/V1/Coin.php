<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/global/v1/gincoincglobalv1/enum.proto

namespace Gincoinc\PBGlobal\V1;

use UnexpectedValueException;

/**
 * Coin is a type of crypto asset.
 *
 * Protobuf type <code>gincoinc.global.v1.Coin</code>
 */
class Coin
{
    /**
     * Generated from protobuf enum <code>COIN_INVALID = 0;</code>
     */
    const COIN_INVALID = 0;
    /**
     * Generated from protobuf enum <code>COIN_BTC = 1;</code>
     */
    const COIN_BTC = 1;
    /**
     * Generated from protobuf enum <code>COIN_ETH = 2;</code>
     */
    const COIN_ETH = 2;
    /**
     * Generated from protobuf enum <code>COIN_LTC = 3;</code>
     */
    const COIN_LTC = 3;
    /**
     * Generated from protobuf enum <code>COIN_BCH = 4;</code>
     */
    const COIN_BCH = 4;
    /**
     * Generated from protobuf enum <code>COIN_XRP = 5;</code>
     */
    const COIN_XRP = 5;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_BAT = 6;</code>
     */
    const COIN_ERC20_BAT = 6;
    /**
     * Generated from protobuf enum <code>COIN_TRX = 7;</code>
     */
    const COIN_TRX = 7;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_USDT = 8;</code>
     */
    const COIN_ERC20_USDT = 8;
    /**
     * Generated from protobuf enum <code>COIN_RYO = 9;</code>
     */
    const COIN_RYO = 9;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_JASMY = 10;</code>
     */
    const COIN_ERC20_JASMY = 10;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_ENJ = 11;</code>
     */
    const COIN_ERC20_ENJ = 11;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_OMG = 12;</code>
     */
    const COIN_ERC20_OMG = 12;
    /**
     * Generated from protobuf enum <code>COIN_XLM = 13;</code>
     */
    const COIN_XLM = 13;
    /**
     * Generated from protobuf enum <code>COIN_ADA = 14;</code>
     */
    const COIN_ADA = 14;
    /**
     * Generated from protobuf enum <code>COIN_DOT = 15;</code>
     */
    const COIN_DOT = 15;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_LINK = 16;</code>
     */
    const COIN_ERC20_LINK = 16;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_DEP = 17;</code>
     */
    const COIN_ERC20_DEP = 17;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_USDC = 18;</code>
     */
    const COIN_ERC20_USDC = 18;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_GYEN = 19;</code>
     */
    const COIN_ERC20_GYEN = 19;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_ZAIF = 20;</code>
     */
    const COIN_ERC20_ZAIF = 20;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_FSCC = 21;</code>
     */
    const COIN_ERC20_FSCC = 21;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_CMS = 22;</code>
     */
    const COIN_ERC20_CMS = 22;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_CICC = 23;</code>
     */
    const COIN_ERC20_CICC = 23;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_NCXC = 24;</code>
     */
    const COIN_ERC20_NCXC = 24;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_COT = 25;</code>
     */
    const COIN_ERC20_COT = 25;
    /**
     * Generated from protobuf enum <code>COIN_XEM = 26;</code>
     */
    const COIN_XEM = 26;
    /**
     * Generated from protobuf enum <code>COIN_MONA = 27;</code>
     */
    const COIN_MONA = 27;
    /**
     * Generated from protobuf enum <code>COIN_IOST = 28;</code>
     */
    const COIN_IOST = 28;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_SKEB = 29;</code>
     */
    const COIN_ERC20_SKEB = 29;
    /**
     * Generated from protobuf enum <code>COIN_KLAY = 30;</code>
     */
    const COIN_KLAY = 30;
    /**
     * Generated from protobuf enum <code>COIN_MATIC = 31;</code>
     */
    const COIN_MATIC = 31;
    /**
     * Generated from protobuf enum <code>COIN_XYM = 32;</code>
     */
    const COIN_XYM = 32;
    /**
     * Generated from protobuf enum <code>COIN_AVAX = 33;</code>
     */
    const COIN_AVAX = 33;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_MATIC = 34;</code>
     */
    const COIN_ERC20_MATIC = 34;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_ROND = 35;</code>
     */
    const COIN_ERC20_ROND = 35;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_MV = 36;</code>
     */
    const COIN_ERC20_MV = 36;
    /**
     * Generated from protobuf enum <code>COIN_POLYGON_ERC20_ROND = 37;</code>
     */
    const COIN_POLYGON_ERC20_ROND = 37;
    /**
     * Generated from protobuf enum <code>COIN_POLYGON_ERC20_MV = 38;</code>
     */
    const COIN_POLYGON_ERC20_MV = 38;
    /**
     * Generated from protobuf enum <code>COIN_POLYGON_ERC20_TSUGT = 39;</code>
     */
    const COIN_POLYGON_ERC20_TSUGT = 39;
    /**
     * Generated from protobuf enum <code>COIN_ERC20_GXE = 40;</code>
     */
    const COIN_ERC20_GXE = 40;
    /**
     * For monitoring https://github.com/GincoInc/sre-dev/issues/1312
     *
     * Generated from protobuf enum <code>COIN_ASTR = 10001;</code>
     */
    const COIN_ASTR = 10001;
    /**
     * Generated from protobuf enum <code>COIN_SDN = 10002;</code>
     */
    const COIN_SDN = 10002;

    private static $valueToName = [
        self::COIN_INVALID => 'COIN_INVALID',
        self::COIN_BTC => 'COIN_BTC',
        self::COIN_ETH => 'COIN_ETH',
        self::COIN_LTC => 'COIN_LTC',
        self::COIN_BCH => 'COIN_BCH',
        self::COIN_XRP => 'COIN_XRP',
        self::COIN_ERC20_BAT => 'COIN_ERC20_BAT',
        self::COIN_TRX => 'COIN_TRX',
        self::COIN_ERC20_USDT => 'COIN_ERC20_USDT',
        self::COIN_RYO => 'COIN_RYO',
        self::COIN_ERC20_JASMY => 'COIN_ERC20_JASMY',
        self::COIN_ERC20_ENJ => 'COIN_ERC20_ENJ',
        self::COIN_ERC20_OMG => 'COIN_ERC20_OMG',
        self::COIN_XLM => 'COIN_XLM',
        self::COIN_ADA => 'COIN_ADA',
        self::COIN_DOT => 'COIN_DOT',
        self::COIN_ERC20_LINK => 'COIN_ERC20_LINK',
        self::COIN_ERC20_DEP => 'COIN_ERC20_DEP',
        self::COIN_ERC20_USDC => 'COIN_ERC20_USDC',
        self::COIN_ERC20_GYEN => 'COIN_ERC20_GYEN',
        self::COIN_ERC20_ZAIF => 'COIN_ERC20_ZAIF',
        self::COIN_ERC20_FSCC => 'COIN_ERC20_FSCC',
        self::COIN_ERC20_CMS => 'COIN_ERC20_CMS',
        self::COIN_ERC20_CICC => 'COIN_ERC20_CICC',
        self::COIN_ERC20_NCXC => 'COIN_ERC20_NCXC',
        self::COIN_ERC20_COT => 'COIN_ERC20_COT',
        self::COIN_XEM => 'COIN_XEM',
        self::COIN_MONA => 'COIN_MONA',
        self::COIN_IOST => 'COIN_IOST',
        self::COIN_ERC20_SKEB => 'COIN_ERC20_SKEB',
        self::COIN_KLAY => 'COIN_KLAY',
        self::COIN_MATIC => 'COIN_MATIC',
        self::COIN_XYM => 'COIN_XYM',
        self::COIN_AVAX => 'COIN_AVAX',
        self::COIN_ERC20_MATIC => 'COIN_ERC20_MATIC',
        self::COIN_ERC20_ROND => 'COIN_ERC20_ROND',
        self::COIN_ERC20_MV => 'COIN_ERC20_MV',
        self::COIN_POLYGON_ERC20_ROND => 'COIN_POLYGON_ERC20_ROND',
        self::COIN_POLYGON_ERC20_MV => 'COIN_POLYGON_ERC20_MV',
        self::COIN_POLYGON_ERC20_TSUGT => 'COIN_POLYGON_ERC20_TSUGT',
        self::COIN_ERC20_GXE => 'COIN_ERC20_GXE',
        self::COIN_ASTR => 'COIN_ASTR',
        self::COIN_SDN => 'COIN_SDN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

