<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/global/v1/gincoincglobalv1/enum.proto

namespace Gincoinc\PBGlobal\V1;

use UnexpectedValueException;

/**
 * NemTransactionType is a type of nem transaction.
 *
 * Protobuf type <code>gincoinc.global.v1.NemTransactionType</code>
 */
class NemTransactionType
{
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_INVALID = 0;</code>
     */
    const NEM_TRANSACTION_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_TRANSFER_TYPE = 1;</code>
     */
    const NEM_TRANSACTION_TYPE_TRANSFER_TYPE = 1;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE = 2;</code>
     */
    const NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE = 2;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE = 3;</code>
     */
    const NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE = 3;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE = 4;</code>
     */
    const NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE = 4;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE = 5;</code>
     */
    const NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE = 5;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE = 6;</code>
     */
    const NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE = 6;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE = 7;</code>
     */
    const NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE = 7;
    /**
     * Generated from protobuf enum <code>NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE = 8;</code>
     */
    const NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE = 8;

    private static $valueToName = [
        self::NEM_TRANSACTION_TYPE_INVALID => 'NEM_TRANSACTION_TYPE_INVALID',
        self::NEM_TRANSACTION_TYPE_TRANSFER_TYPE => 'NEM_TRANSACTION_TYPE_TRANSFER_TYPE',
        self::NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE => 'NEM_TRANSACTION_TYPE_IMPORTANCE_TRANSFER_TYPE',
        self::NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE => 'NEM_TRANSACTION_TYPE_MULTISIG_MODIFICATION_TYPE',
        self::NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE => 'NEM_TRANSACTION_TYPE_MULTISIG_SIGNATURE_TYPE',
        self::NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE => 'NEM_TRANSACTION_TYPE_MULTISIG_TRANSACTION_TYPE',
        self::NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE => 'NEM_TRANSACTION_TYPE_PROVISION_NAMESPACE_TYPE',
        self::NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE => 'NEM_TRANSACTION_TYPE_MOSAIC_DEFINITION_TYPE',
        self::NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE => 'NEM_TRANSACTION_TYPE_MOSAIC_SUPPLY_TYPE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

