<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of Avalanche specific fields of CalculateFee
 *
 * Generated from protobuf message <code>adamant.global.v1.CalculateFeeAvalancheSpecific</code>
 */
class CalculateFeeAvalancheSpecific extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.AvalancheTxType tx_type = 1 [json_name = "txType"];</code>
     */
    protected $tx_type = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $tx_type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\GlobalApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.AvalancheTxType tx_type = 1 [json_name = "txType"];</code>
     * @return int
     */
    public function getTxType()
    {
        return isset($this->tx_type) ? $this->tx_type : 0;
    }

    public function hasTxType()
    {
        return isset($this->tx_type);
    }

    public function clearTxType()
    {
        unset($this->tx_type);
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.AvalancheTxType tx_type = 1 [json_name = "txType"];</code>
     * @param int $var
     * @return $this
     */
    public function setTxType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\AvalancheTxType::class);
        $this->tx_type = $var;

        return $this;
    }

}

