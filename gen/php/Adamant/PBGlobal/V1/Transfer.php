<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of transfer
 *
 * Generated from protobuf message <code>adamant.global.v1.Transfer</code>
 */
class Transfer extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     */
    protected $wallet_id = '';
    /**
     * id
     *
     * Generated from protobuf field <code>string transfer_id = 2 [json_name = "transferId"];</code>
     */
    protected $transfer_id = '';
    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 3 [json_name = "coin"];</code>
     */
    protected $coin = 0;
    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 4 [json_name = "txId"];</code>
     */
    protected $tx_id = '';
    /**
     * type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 5 [json_name = "transferType"];</code>
     */
    protected $transfer_type = 0;
    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     */
    protected $value = 0.0;
    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     */
    protected $string_value = '';
    /**
     * The rate of fiat
     *
     * Generated from protobuf field <code>double jpy_rate = 9 [json_name = "jpyRate"];</code>
     */
    protected $jpy_rate = 0.0;
    /**
     * The wallet id to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_wallet_id = 10 [json_name = "partnerWalletId"];</code>
     */
    protected $partner_wallet_id = '';
    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_address = 11 [json_name = "partnerAddress"];</code>
     */
    protected $partner_address = '';
    /**
     * destination tag (only XRP)
     *
     * Generated from protobuf field <code>uint32 destination_tag = 15 [json_name = "destinationTag"];</code>
     */
    protected $destination_tag = 0;
    /**
     * memo id (only XLM)
     *
     * Generated from protobuf field <code>uint64 memo_id = 17 [json_name = "memoId", jstype = JS_STRING];</code>
     */
    protected $memo_id = 0;
    /**
     * message (only NEM)
     *
     * Generated from protobuf field <code>string message = 18 [json_name = "message"];</code>
     */
    protected $message = '';
    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 19 [json_name = "fee"];</code>
     */
    protected $fee = 0.0;
    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 20 [json_name = "stringFee"];</code>
     */
    protected $string_fee = '';
    /**
     * from address
     *
     * Generated from protobuf field <code>string from = 21 [json_name = "from"];</code>
     */
    protected $from = '';
    /**
     * to address
     *
     * Generated from protobuf field <code>string to = 22 [json_name = "to"];</code>
     */
    protected $to = '';
    /**
     * state
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionState state = 12 [json_name = "state"];</code>
     */
    protected $state = 0;
    /**
     * result
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionResult result = 16 [json_name = "result"];</code>
     */
    protected $result = 0;
    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     */
    protected $create_time = null;
    /**
     * the time at which the transfer was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 14 [json_name = "updateTime"];</code>
     */
    protected $update_time = null;
    /**
     * cosmos_specific
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransferCosmosSpecific cosmos_specific = 23 [json_name = "cosmosSpecific"];</code>
     */
    protected $cosmos_specific = null;
    /**
     * staking_event_type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingEventType staking_event_type = 24 [json_name = "stakingEventType"];</code>
     */
    protected $staking_event_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $wallet_id
     *           The id of wallet
     *     @type string $transfer_id
     *           id
     *     @type int $coin
     *           coin
     *     @type string $tx_id
     *           txID
     *     @type int $transfer_type
     *           type
     *     @type float $value
     *           The number-typed amount of transfer
     *     @type string $string_value
     *           The string-typed amount of transfer
     *     @type float $jpy_rate
     *           The rate of fiat
     *     @type string $partner_wallet_id
     *           The wallet id to which the transfer send/receive
     *     @type string $partner_address
     *           The address of wallet to which the transfer send/receive
     *     @type int $destination_tag
     *           destination tag (only XRP)
     *     @type int|string $memo_id
     *           memo id (only XLM)
     *     @type string $message
     *           message (only NEM)
     *     @type float $fee
     *           The number-typed amount of transfer fee
     *     @type string $string_fee
     *           The string-typed amount of transfer fee
     *     @type string $from
     *           from address
     *     @type string $to
     *           to address
     *     @type int $state
     *           state
     *     @type int $result
     *           result
     *     @type \Google\Protobuf\Timestamp $create_time
     *           the time at which the transfer was created
     *     @type \Google\Protobuf\Timestamp $update_time
     *           the time at which the transfer was updated
     *     @type \Adamant\PBGlobal\V1\TransferCosmosSpecific $cosmos_specific
     *           cosmos_specific
     *     @type int $staking_event_type
     *           staking_event_type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transfer_id = 2 [json_name = "transferId"];</code>
     * @return string
     */
    public function getTransferId()
    {
        return $this->transfer_id;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transfer_id = 2 [json_name = "transferId"];</code>
     * @param string $var
     * @return $this
     */
    public function setTransferId($var)
    {
        GPBUtil::checkString($var, True);
        $this->transfer_id = $var;

        return $this;
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 3 [json_name = "coin"];</code>
     * @return int
     */
    public function getCoin()
    {
        return $this->coin;
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 3 [json_name = "coin"];</code>
     * @param int $var
     * @return $this
     */
    public function setCoin($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\Coin::class);
        $this->coin = $var;

        return $this;
    }

    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 4 [json_name = "txId"];</code>
     * @return string
     */
    public function getTxId()
    {
        return $this->tx_id;
    }

    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 4 [json_name = "txId"];</code>
     * @param string $var
     * @return $this
     */
    public function setTxId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tx_id = $var;

        return $this;
    }

    /**
     * type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 5 [json_name = "transferType"];</code>
     * @return int
     */
    public function getTransferType()
    {
        return $this->transfer_type;
    }

    /**
     * type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 5 [json_name = "transferType"];</code>
     * @param int $var
     * @return $this
     */
    public function setTransferType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\TransferType::class);
        $this->transfer_type = $var;

        return $this;
    }

    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->value = $var;

        return $this;
    }

    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     * @return string
     */
    public function getStringValue()
    {
        return $this->string_value;
    }

    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_value = $var;

        return $this;
    }

    /**
     * The rate of fiat
     *
     * Generated from protobuf field <code>double jpy_rate = 9 [json_name = "jpyRate"];</code>
     * @return float
     */
    public function getJpyRate()
    {
        return $this->jpy_rate;
    }

    /**
     * The rate of fiat
     *
     * Generated from protobuf field <code>double jpy_rate = 9 [json_name = "jpyRate"];</code>
     * @param float $var
     * @return $this
     */
    public function setJpyRate($var)
    {
        GPBUtil::checkDouble($var);
        $this->jpy_rate = $var;

        return $this;
    }

    /**
     * The wallet id to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_wallet_id = 10 [json_name = "partnerWalletId"];</code>
     * @return string
     */
    public function getPartnerWalletId()
    {
        return $this->partner_wallet_id;
    }

    /**
     * The wallet id to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_wallet_id = 10 [json_name = "partnerWalletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setPartnerWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_wallet_id = $var;

        return $this;
    }

    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_address = 11 [json_name = "partnerAddress"];</code>
     * @return string
     */
    public function getPartnerAddress()
    {
        return $this->partner_address;
    }

    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string partner_address = 11 [json_name = "partnerAddress"];</code>
     * @param string $var
     * @return $this
     */
    public function setPartnerAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->partner_address = $var;

        return $this;
    }

    /**
     * destination tag (only XRP)
     *
     * Generated from protobuf field <code>uint32 destination_tag = 15 [json_name = "destinationTag"];</code>
     * @return int
     */
    public function getDestinationTag()
    {
        return $this->destination_tag;
    }

    /**
     * destination tag (only XRP)
     *
     * Generated from protobuf field <code>uint32 destination_tag = 15 [json_name = "destinationTag"];</code>
     * @param int $var
     * @return $this
     */
    public function setDestinationTag($var)
    {
        GPBUtil::checkUint32($var);
        $this->destination_tag = $var;

        return $this;
    }

    /**
     * memo id (only XLM)
     *
     * Generated from protobuf field <code>uint64 memo_id = 17 [json_name = "memoId", jstype = JS_STRING];</code>
     * @return int|string
     */
    public function getMemoId()
    {
        return $this->memo_id;
    }

    /**
     * memo id (only XLM)
     *
     * Generated from protobuf field <code>uint64 memo_id = 17 [json_name = "memoId", jstype = JS_STRING];</code>
     * @param int|string $var
     * @return $this
     */
    public function setMemoId($var)
    {
        GPBUtil::checkUint64($var);
        $this->memo_id = $var;

        return $this;
    }

    /**
     * message (only NEM)
     *
     * Generated from protobuf field <code>string message = 18 [json_name = "message"];</code>
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * message (only NEM)
     *
     * Generated from protobuf field <code>string message = 18 [json_name = "message"];</code>
     * @param string $var
     * @return $this
     */
    public function setMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->message = $var;

        return $this;
    }

    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 19 [json_name = "fee"];</code>
     * @return float
     */
    public function getFee()
    {
        return $this->fee;
    }

    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 19 [json_name = "fee"];</code>
     * @param float $var
     * @return $this
     */
    public function setFee($var)
    {
        GPBUtil::checkDouble($var);
        $this->fee = $var;

        return $this;
    }

    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 20 [json_name = "stringFee"];</code>
     * @return string
     */
    public function getStringFee()
    {
        return $this->string_fee;
    }

    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 20 [json_name = "stringFee"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringFee($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_fee = $var;

        return $this;
    }

    /**
     * from address
     *
     * Generated from protobuf field <code>string from = 21 [json_name = "from"];</code>
     * @return string
     */
    public function getFrom()
    {
        return $this->from;
    }

    /**
     * from address
     *
     * Generated from protobuf field <code>string from = 21 [json_name = "from"];</code>
     * @param string $var
     * @return $this
     */
    public function setFrom($var)
    {
        GPBUtil::checkString($var, True);
        $this->from = $var;

        return $this;
    }

    /**
     * to address
     *
     * Generated from protobuf field <code>string to = 22 [json_name = "to"];</code>
     * @return string
     */
    public function getTo()
    {
        return $this->to;
    }

    /**
     * to address
     *
     * Generated from protobuf field <code>string to = 22 [json_name = "to"];</code>
     * @param string $var
     * @return $this
     */
    public function setTo($var)
    {
        GPBUtil::checkString($var, True);
        $this->to = $var;

        return $this;
    }

    /**
     * state
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionState state = 12 [json_name = "state"];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * state
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionState state = 12 [json_name = "state"];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\TransactionState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * result
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionResult result = 16 [json_name = "result"];</code>
     * @return int
     */
    public function getResult()
    {
        return $this->result;
    }

    /**
     * result
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransactionResult result = 16 [json_name = "result"];</code>
     * @param int $var
     * @return $this
     */
    public function setResult($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\TransactionResult::class);
        $this->result = $var;

        return $this;
    }

    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 13 [json_name = "createTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * the time at which the transfer was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 14 [json_name = "updateTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * the time at which the transfer was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 14 [json_name = "updateTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

    /**
     * cosmos_specific
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransferCosmosSpecific cosmos_specific = 23 [json_name = "cosmosSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\TransferCosmosSpecific|null
     */
    public function getCosmosSpecific()
    {
        return $this->cosmos_specific;
    }

    public function hasCosmosSpecific()
    {
        return isset($this->cosmos_specific);
    }

    public function clearCosmosSpecific()
    {
        unset($this->cosmos_specific);
    }

    /**
     * cosmos_specific
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransferCosmosSpecific cosmos_specific = 23 [json_name = "cosmosSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\TransferCosmosSpecific $var
     * @return $this
     */
    public function setCosmosSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\TransferCosmosSpecific::class);
        $this->cosmos_specific = $var;

        return $this;
    }

    /**
     * staking_event_type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingEventType staking_event_type = 24 [json_name = "stakingEventType"];</code>
     * @return int
     */
    public function getStakingEventType()
    {
        return $this->staking_event_type;
    }

    /**
     * staking_event_type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingEventType staking_event_type = 24 [json_name = "stakingEventType"];</code>
     * @param int $var
     * @return $this
     */
    public function setStakingEventType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\StakingEventType::class);
        $this->staking_event_type = $var;

        return $this;
    }

}

