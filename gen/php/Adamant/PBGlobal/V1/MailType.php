<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

namespace Adamant\PBGlobal\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>adamant.global.v1.MailType</code>
 */
class MailType
{
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_INVALID = 0;</code>
     */
    const MAIL_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_USER_INVITED = 1;</code>
     */
    const MAIL_TYPE_USER_INVITED = 1;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_PASSWORD_RESET_REQUEST = 2;</code>
     */
    const MAIL_TYPE_PASSWORD_RESET_REQUEST = 2;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_PASSWORD_UPDATED = 3;</code>
     */
    const MAIL_TYPE_PASSWORD_UPDATED = 3;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_EMAIL_UPDATE_REQUEST = 4;</code>
     */
    const MAIL_TYPE_EMAIL_UPDATE_REQUEST = 4;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_EMAIL_UPDATED = 5;</code>
     */
    const MAIL_TYPE_EMAIL_UPDATED = 5;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED = 6;</code>
     */
    const MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED = 6;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_IMPORT_ADDRESS_COMPLETED = 7;</code>
     */
    const MAIL_TYPE_IMPORT_ADDRESS_COMPLETED = 7;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED = 8;</code>
     */
    const MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED = 8;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS = 9;</code>
     */
    const MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS = 9;
    /**
     * Generated from protobuf enum <code>MAIL_TYPE_DOWNLOAD_RESOURCE = 10;</code>
     */
    const MAIL_TYPE_DOWNLOAD_RESOURCE = 10;

    private static $valueToName = [
        self::MAIL_TYPE_INVALID => 'MAIL_TYPE_INVALID',
        self::MAIL_TYPE_USER_INVITED => 'MAIL_TYPE_USER_INVITED',
        self::MAIL_TYPE_PASSWORD_RESET_REQUEST => 'MAIL_TYPE_PASSWORD_RESET_REQUEST',
        self::MAIL_TYPE_PASSWORD_UPDATED => 'MAIL_TYPE_PASSWORD_UPDATED',
        self::MAIL_TYPE_EMAIL_UPDATE_REQUEST => 'MAIL_TYPE_EMAIL_UPDATE_REQUEST',
        self::MAIL_TYPE_EMAIL_UPDATED => 'MAIL_TYPE_EMAIL_UPDATED',
        self::MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED => 'MAIL_TYPE_FRAUD_TRANSACTION_SUBMITTED',
        self::MAIL_TYPE_IMPORT_ADDRESS_COMPLETED => 'MAIL_TYPE_IMPORT_ADDRESS_COMPLETED',
        self::MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED => 'MAIL_TYPE_VALIDATOR_CHANGE_REQUESTED',
        self::MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS => 'MAIL_TYPE_UNCHECKED_TRANSFER_EXISTS',
        self::MAIL_TYPE_DOWNLOAD_RESOURCE => 'MAIL_TYPE_DOWNLOAD_RESOURCE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

