<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of unconfirmed transaction
 *
 * Generated from protobuf message <code>adamant.global.v1.UnconfirmedTransaction</code>
 */
class UnconfirmedTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     */
    protected $wallet_id = '';
    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     */
    protected $transaction_id = '';
    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 5 [json_name = "txId"];</code>
     */
    protected $tx_id = '';
    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     */
    protected $value = 0.0;
    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     */
    protected $string_value = '';
    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string address = 8 [json_name = "address"];</code>
     */
    protected $address = '';
    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 9 [json_name = "fee"];</code>
     */
    protected $fee = 0.0;
    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 10 [json_name = "stringFee"];</code>
     */
    protected $string_fee = '';
    /**
     * The fee rate of transaction (only BTC and its forks unit: sat/Byte)
     *
     * Generated from protobuf field <code>uint64 fee_rate = 11 [json_name = "feeRate"];</code>
     */
    protected $fee_rate = 0;
    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 12 [json_name = "createTime"];</code>
     */
    protected $create_time = null;
    /**
     * The Bitcoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoinSpecific bitcoin_specific = 13 [json_name = "bitcoinSpecific"];</code>
     */
    protected $bitcoin_specific = null;
    /**
     * The Litecoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.LitecoinSpecific litecoin_specific = 14 [json_name = "litecoinSpecific"];</code>
     */
    protected $litecoin_specific = null;
    /**
     * The Bitcoin Cash specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoincashSpecific bitcoincash_specific = 15 [json_name = "bitcoincashSpecific"];</code>
     */
    protected $bitcoincash_specific = null;
    /**
     * The C0ban specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.C0banSpecific c0ban_specific = 16 [json_name = "c0banSpecific"];</code>
     */
    protected $c0ban_specific = null;
    /**
     * The Cardano specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.CardanoSpecific cardano_specific = 17 [json_name = "cardanoSpecific"];</code>
     */
    protected $cardano_specific = null;
    /**
     * The Monacoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.MonacoinSpecific monacoin_specific = 18 [json_name = "monacoinSpecific"];</code>
     */
    protected $monacoin_specific = null;
    /**
     * The Avalanche Platform Chain specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.AvalanchePlatformChainSpecific avalanche_platform_chain_specific = 19 [json_name = "avalanchePlatformChainSpecific"];</code>
     */
    protected $avalanche_platform_chain_specific = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $wallet_id
     *           The id of wallet
     *     @type string $transaction_id
     *           id
     *     @type string $tx_id
     *           txID
     *     @type float $value
     *           The number-typed amount of transfer
     *     @type string $string_value
     *           The string-typed amount of transfer
     *     @type string $address
     *           The address of wallet to which the transfer send/receive
     *     @type float $fee
     *           The number-typed amount of transfer fee
     *     @type string $string_fee
     *           The string-typed amount of transfer fee
     *     @type int|string $fee_rate
     *           The fee rate of transaction (only BTC and its forks unit: sat/Byte)
     *     @type \Google\Protobuf\Timestamp $create_time
     *           the time at which the transfer was created
     *     @type \Adamant\PBGlobal\V1\BitcoinSpecific $bitcoin_specific
     *           The Bitcoin specific fields
     *     @type \Adamant\PBGlobal\V1\LitecoinSpecific $litecoin_specific
     *           The Litecoin specific fields
     *     @type \Adamant\PBGlobal\V1\BitcoincashSpecific $bitcoincash_specific
     *           The Bitcoin Cash specific fields
     *     @type \Adamant\PBGlobal\V1\C0banSpecific $c0ban_specific
     *           The C0ban specific fields
     *     @type \Adamant\PBGlobal\V1\CardanoSpecific $cardano_specific
     *           The Cardano specific fields
     *     @type \Adamant\PBGlobal\V1\MonacoinSpecific $monacoin_specific
     *           The Monacoin specific fields
     *     @type \Adamant\PBGlobal\V1\AvalanchePlatformChainSpecific $avalanche_platform_chain_specific
     *           The Avalanche Platform Chain specific fields
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return string
     */
    public function getTransactionId()
    {
        return $this->transaction_id;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->transaction_id = $var;

        return $this;
    }

    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 5 [json_name = "txId"];</code>
     * @return string
     */
    public function getTxId()
    {
        return $this->tx_id;
    }

    /**
     * txID
     *
     * Generated from protobuf field <code>string tx_id = 5 [json_name = "txId"];</code>
     * @param string $var
     * @return $this
     */
    public function setTxId($var)
    {
        GPBUtil::checkString($var, True);
        $this->tx_id = $var;

        return $this;
    }

    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * The number-typed amount of transfer
     *
     * Generated from protobuf field <code>double value = 6 [json_name = "value"];</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->value = $var;

        return $this;
    }

    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     * @return string
     */
    public function getStringValue()
    {
        return $this->string_value;
    }

    /**
     * The string-typed amount of transfer
     *
     * Generated from protobuf field <code>string string_value = 7 [json_name = "stringValue"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_value = $var;

        return $this;
    }

    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string address = 8 [json_name = "address"];</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * The address of wallet to which the transfer send/receive
     *
     * Generated from protobuf field <code>string address = 8 [json_name = "address"];</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 9 [json_name = "fee"];</code>
     * @return float
     */
    public function getFee()
    {
        return $this->fee;
    }

    /**
     * The number-typed amount of transfer fee
     *
     * Generated from protobuf field <code>double fee = 9 [json_name = "fee"];</code>
     * @param float $var
     * @return $this
     */
    public function setFee($var)
    {
        GPBUtil::checkDouble($var);
        $this->fee = $var;

        return $this;
    }

    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 10 [json_name = "stringFee"];</code>
     * @return string
     */
    public function getStringFee()
    {
        return $this->string_fee;
    }

    /**
     * The string-typed amount of transfer fee
     *
     * Generated from protobuf field <code>string string_fee = 10 [json_name = "stringFee"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringFee($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_fee = $var;

        return $this;
    }

    /**
     * The fee rate of transaction (only BTC and its forks unit: sat/Byte)
     *
     * Generated from protobuf field <code>uint64 fee_rate = 11 [json_name = "feeRate"];</code>
     * @return int|string
     */
    public function getFeeRate()
    {
        return $this->fee_rate;
    }

    /**
     * The fee rate of transaction (only BTC and its forks unit: sat/Byte)
     *
     * Generated from protobuf field <code>uint64 fee_rate = 11 [json_name = "feeRate"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setFeeRate($var)
    {
        GPBUtil::checkUint64($var);
        $this->fee_rate = $var;

        return $this;
    }

    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 12 [json_name = "createTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * the time at which the transfer was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 12 [json_name = "createTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * The Bitcoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoinSpecific bitcoin_specific = 13 [json_name = "bitcoinSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\BitcoinSpecific|null
     */
    public function getBitcoinSpecific()
    {
        return $this->bitcoin_specific;
    }

    public function hasBitcoinSpecific()
    {
        return isset($this->bitcoin_specific);
    }

    public function clearBitcoinSpecific()
    {
        unset($this->bitcoin_specific);
    }

    /**
     * The Bitcoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoinSpecific bitcoin_specific = 13 [json_name = "bitcoinSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\BitcoinSpecific $var
     * @return $this
     */
    public function setBitcoinSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\BitcoinSpecific::class);
        $this->bitcoin_specific = $var;

        return $this;
    }

    /**
     * The Litecoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.LitecoinSpecific litecoin_specific = 14 [json_name = "litecoinSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\LitecoinSpecific|null
     */
    public function getLitecoinSpecific()
    {
        return $this->litecoin_specific;
    }

    public function hasLitecoinSpecific()
    {
        return isset($this->litecoin_specific);
    }

    public function clearLitecoinSpecific()
    {
        unset($this->litecoin_specific);
    }

    /**
     * The Litecoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.LitecoinSpecific litecoin_specific = 14 [json_name = "litecoinSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\LitecoinSpecific $var
     * @return $this
     */
    public function setLitecoinSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\LitecoinSpecific::class);
        $this->litecoin_specific = $var;

        return $this;
    }

    /**
     * The Bitcoin Cash specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoincashSpecific bitcoincash_specific = 15 [json_name = "bitcoincashSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\BitcoincashSpecific|null
     */
    public function getBitcoincashSpecific()
    {
        return $this->bitcoincash_specific;
    }

    public function hasBitcoincashSpecific()
    {
        return isset($this->bitcoincash_specific);
    }

    public function clearBitcoincashSpecific()
    {
        unset($this->bitcoincash_specific);
    }

    /**
     * The Bitcoin Cash specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.BitcoincashSpecific bitcoincash_specific = 15 [json_name = "bitcoincashSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\BitcoincashSpecific $var
     * @return $this
     */
    public function setBitcoincashSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\BitcoincashSpecific::class);
        $this->bitcoincash_specific = $var;

        return $this;
    }

    /**
     * The C0ban specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.C0banSpecific c0ban_specific = 16 [json_name = "c0banSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\C0banSpecific|null
     */
    public function getC0BanSpecific()
    {
        return $this->c0ban_specific;
    }

    public function hasC0BanSpecific()
    {
        return isset($this->c0ban_specific);
    }

    public function clearC0BanSpecific()
    {
        unset($this->c0ban_specific);
    }

    /**
     * The C0ban specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.C0banSpecific c0ban_specific = 16 [json_name = "c0banSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\C0banSpecific $var
     * @return $this
     */
    public function setC0BanSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\C0banSpecific::class);
        $this->c0ban_specific = $var;

        return $this;
    }

    /**
     * The Cardano specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.CardanoSpecific cardano_specific = 17 [json_name = "cardanoSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\CardanoSpecific|null
     */
    public function getCardanoSpecific()
    {
        return $this->cardano_specific;
    }

    public function hasCardanoSpecific()
    {
        return isset($this->cardano_specific);
    }

    public function clearCardanoSpecific()
    {
        unset($this->cardano_specific);
    }

    /**
     * The Cardano specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.CardanoSpecific cardano_specific = 17 [json_name = "cardanoSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\CardanoSpecific $var
     * @return $this
     */
    public function setCardanoSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\CardanoSpecific::class);
        $this->cardano_specific = $var;

        return $this;
    }

    /**
     * The Monacoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.MonacoinSpecific monacoin_specific = 18 [json_name = "monacoinSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\MonacoinSpecific|null
     */
    public function getMonacoinSpecific()
    {
        return $this->monacoin_specific;
    }

    public function hasMonacoinSpecific()
    {
        return isset($this->monacoin_specific);
    }

    public function clearMonacoinSpecific()
    {
        unset($this->monacoin_specific);
    }

    /**
     * The Monacoin specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.MonacoinSpecific monacoin_specific = 18 [json_name = "monacoinSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\MonacoinSpecific $var
     * @return $this
     */
    public function setMonacoinSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\MonacoinSpecific::class);
        $this->monacoin_specific = $var;

        return $this;
    }

    /**
     * The Avalanche Platform Chain specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.AvalanchePlatformChainSpecific avalanche_platform_chain_specific = 19 [json_name = "avalanchePlatformChainSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\AvalanchePlatformChainSpecific|null
     */
    public function getAvalanchePlatformChainSpecific()
    {
        return $this->avalanche_platform_chain_specific;
    }

    public function hasAvalanchePlatformChainSpecific()
    {
        return isset($this->avalanche_platform_chain_specific);
    }

    public function clearAvalanchePlatformChainSpecific()
    {
        unset($this->avalanche_platform_chain_specific);
    }

    /**
     * The Avalanche Platform Chain specific fields
     *
     * Generated from protobuf field <code>.adamant.global.v1.AvalanchePlatformChainSpecific avalanche_platform_chain_specific = 19 [json_name = "avalanchePlatformChainSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\AvalanchePlatformChainSpecific $var
     * @return $this
     */
    public function setAvalanchePlatformChainSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\AvalanchePlatformChainSpecific::class);
        $this->avalanche_platform_chain_specific = $var;

        return $this;
    }

}

