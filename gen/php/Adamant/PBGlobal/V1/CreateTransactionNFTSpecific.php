<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of NFTSpecific fields of CreateTransaction
 *
 * Generated from protobuf message <code>adamant.global.v1.CreateTransactionNFTSpecific</code>
 */
class CreateTransactionNFTSpecific extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.NFTCallMethod nft_call_method = 1 [json_name = "nftCallMethod"];</code>
     */
    protected $nft_call_method = null;
    /**
     * Generated from protobuf field <code>repeated string token_ids = 2 [json_name = "tokenIds"];</code>
     */
    private $token_ids;
    /**
     * Generated from protobuf field <code>repeated string metadata_jsons = 3 [json_name = "metadataJsons"];</code>
     */
    private $metadata_jsons;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $nft_call_method
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $token_ids
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $metadata_jsons
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.NFTCallMethod nft_call_method = 1 [json_name = "nftCallMethod"];</code>
     * @return int
     */
    public function getNftCallMethod()
    {
        return isset($this->nft_call_method) ? $this->nft_call_method : 0;
    }

    public function hasNftCallMethod()
    {
        return isset($this->nft_call_method);
    }

    public function clearNftCallMethod()
    {
        unset($this->nft_call_method);
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.NFTCallMethod nft_call_method = 1 [json_name = "nftCallMethod"];</code>
     * @param int $var
     * @return $this
     */
    public function setNftCallMethod($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\NFTCallMethod::class);
        $this->nft_call_method = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string token_ids = 2 [json_name = "tokenIds"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTokenIds()
    {
        return $this->token_ids;
    }

    /**
     * Generated from protobuf field <code>repeated string token_ids = 2 [json_name = "tokenIds"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTokenIds($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->token_ids = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>repeated string metadata_jsons = 3 [json_name = "metadataJsons"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getMetadataJsons()
    {
        return $this->metadata_jsons;
    }

    /**
     * Generated from protobuf field <code>repeated string metadata_jsons = 3 [json_name = "metadataJsons"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setMetadataJsons($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->metadata_jsons = $arr;

        return $this;
    }

}

