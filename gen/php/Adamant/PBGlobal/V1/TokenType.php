<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

namespace Adamant\PBGlobal\V1;

use UnexpectedValueException;

/**
 * TokenType is a type of token.
 *
 * Protobuf type <code>adamant.global.v1.TokenType</code>
 */
class TokenType
{
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_INVALID = 0;</code>
     */
    const TOKEN_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_LOGIN_TOKEN = 1;</code>
     */
    const TOKEN_TYPE_LOGIN_TOKEN = 1;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_MAIL_TOKEN = 2;</code>
     */
    const TOKEN_TYPE_MAIL_TOKEN = 2;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_PASSWORD_RESET_TOKEN = 3;</code>
     */
    const TOKEN_TYPE_PASSWORD_RESET_TOKEN = 3;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_PASSWORD_UPDATE_TOKEN = 4;</code>
     */
    const TOKEN_TYPE_PASSWORD_UPDATE_TOKEN = 4;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_SIGNUP_TOKEN = 5;</code>
     */
    const TOKEN_TYPE_SIGNUP_TOKEN = 5;
    /**
     * Generated from protobuf enum <code>TOKEN_TYPE_REFRESH_TOKEN = 6;</code>
     */
    const TOKEN_TYPE_REFRESH_TOKEN = 6;

    private static $valueToName = [
        self::TOKEN_TYPE_INVALID => 'TOKEN_TYPE_INVALID',
        self::TOKEN_TYPE_LOGIN_TOKEN => 'TOKEN_TYPE_LOGIN_TOKEN',
        self::TOKEN_TYPE_MAIL_TOKEN => 'TOKEN_TYPE_MAIL_TOKEN',
        self::TOKEN_TYPE_PASSWORD_RESET_TOKEN => 'TOKEN_TYPE_PASSWORD_RESET_TOKEN',
        self::TOKEN_TYPE_PASSWORD_UPDATE_TOKEN => 'TOKEN_TYPE_PASSWORD_UPDATE_TOKEN',
        self::TOKEN_TYPE_SIGNUP_TOKEN => 'TOKEN_TYPE_SIGNUP_TOKEN',
        self::TOKEN_TYPE_REFRESH_TOKEN => 'TOKEN_TYPE_REFRESH_TOKEN',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

