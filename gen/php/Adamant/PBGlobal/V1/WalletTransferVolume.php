<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>adamant.global.v1.WalletTransferVolume</code>
 */
class WalletTransferVolume extends \Google\Protobuf\Internal\Message
{
    /**
     * coin volume
     *
     * Generated from protobuf field <code>string string_volume = 1 [json_name = "stringVolume"];</code>
     */
    protected $string_volume = '';
    /**
     * hot volume
     *
     * Generated from protobuf field <code>string string_jpy_volume = 2 [json_name = "stringJpyVolume"];</code>
     */
    protected $string_jpy_volume = '';
    /**
     * transfer number volume
     *
     * Generated from protobuf field <code>int64 number = 3 [json_name = "number"];</code>
     */
    protected $number = 0;
    /**
     * transfer type;
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 4 [json_name = "transferType"];</code>
     */
    protected $transfer_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $string_volume
     *           coin volume
     *     @type string $string_jpy_volume
     *           hot volume
     *     @type int|string $number
     *           transfer number volume
     *     @type int $transfer_type
     *           transfer type;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * coin volume
     *
     * Generated from protobuf field <code>string string_volume = 1 [json_name = "stringVolume"];</code>
     * @return string
     */
    public function getStringVolume()
    {
        return $this->string_volume;
    }

    /**
     * coin volume
     *
     * Generated from protobuf field <code>string string_volume = 1 [json_name = "stringVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_volume = $var;

        return $this;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string string_jpy_volume = 2 [json_name = "stringJpyVolume"];</code>
     * @return string
     */
    public function getStringJpyVolume()
    {
        return $this->string_jpy_volume;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string string_jpy_volume = 2 [json_name = "stringJpyVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringJpyVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_jpy_volume = $var;

        return $this;
    }

    /**
     * transfer number volume
     *
     * Generated from protobuf field <code>int64 number = 3 [json_name = "number"];</code>
     * @return int|string
     */
    public function getNumber()
    {
        return $this->number;
    }

    /**
     * transfer number volume
     *
     * Generated from protobuf field <code>int64 number = 3 [json_name = "number"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->number = $var;

        return $this;
    }

    /**
     * transfer type;
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 4 [json_name = "transferType"];</code>
     * @return int
     */
    public function getTransferType()
    {
        return $this->transfer_type;
    }

    /**
     * transfer type;
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 4 [json_name = "transferType"];</code>
     * @param int $var
     * @return $this
     */
    public function setTransferType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\TransferType::class);
        $this->transfer_type = $var;

        return $this;
    }

}

