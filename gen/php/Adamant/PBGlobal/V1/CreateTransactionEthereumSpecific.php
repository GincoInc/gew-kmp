<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of Ethereum specific fields of CreateTransaction
 *
 * Generated from protobuf message <code>adamant.global.v1.CreateTransactionEthereumSpecific</code>
 */
class CreateTransactionEthereumSpecific extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     */
    protected $data = '';
    /**
     * Generated from protobuf field <code>optional string staking_recipient_wallet_id = 2 [json_name = "stakingRecipientWalletId"];</code>
     */
    protected $staking_recipient_wallet_id = null;
    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.EthereumCallMethod call_method = 3 [json_name = "callMethod"];</code>
     */
    protected $call_method = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data
     *     @type string $staking_recipient_wallet_id
     *     @type int $call_method
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, True);
        $this->data = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string staking_recipient_wallet_id = 2 [json_name = "stakingRecipientWalletId"];</code>
     * @return string
     */
    public function getStakingRecipientWalletId()
    {
        return isset($this->staking_recipient_wallet_id) ? $this->staking_recipient_wallet_id : '';
    }

    public function hasStakingRecipientWalletId()
    {
        return isset($this->staking_recipient_wallet_id);
    }

    public function clearStakingRecipientWalletId()
    {
        unset($this->staking_recipient_wallet_id);
    }

    /**
     * Generated from protobuf field <code>optional string staking_recipient_wallet_id = 2 [json_name = "stakingRecipientWalletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setStakingRecipientWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->staking_recipient_wallet_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.EthereumCallMethod call_method = 3 [json_name = "callMethod"];</code>
     * @return int
     */
    public function getCallMethod()
    {
        return isset($this->call_method) ? $this->call_method : 0;
    }

    public function hasCallMethod()
    {
        return isset($this->call_method);
    }

    public function clearCallMethod()
    {
        unset($this->call_method);
    }

    /**
     * Generated from protobuf field <code>optional .gincoinc.global.v1.EthereumCallMethod call_method = 3 [json_name = "callMethod"];</code>
     * @param int $var
     * @return $this
     */
    public function setCallMethod($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\EthereumCallMethod::class);
        $this->call_method = $var;

        return $this;
    }

}

