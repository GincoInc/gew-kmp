<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of proposal to update wallet information
 *
 * Generated from protobuf message <code>adamant.global.v1.WalletProposal</code>
 */
class WalletProposal extends \Google\Protobuf\Internal\Message
{
    /**
     * The type of the proposal
     *
     * Generated from protobuf field <code>.adamant.global.v1.WalletProposalType proposal_type = 7 [json_name = "proposalType"];</code>
     */
    protected $proposal_type = 0;
    /**
     * The account id which create the proposal
     *
     * Generated from protobuf field <code>string requester_account_id = 1 [json_name = "requesterAccountId"];</code>
     */
    protected $requester_account_id = '';
    /**
     * The name of the account which create the proposal
     *
     * Generated from protobuf field <code>string requester_name = 2 [json_name = "requesterName"];</code>
     */
    protected $requester_name = '';
    /**
     * The account id which approve the proposal
     *
     * Generated from protobuf field <code>string approver_account_id = 3 [json_name = "approverAccountId"];</code>
     */
    protected $approver_account_id = '';
    /**
     * The name of the account which approve the proposal
     *
     * Generated from protobuf field <code>string approver_name = 4 [json_name = "approverName"];</code>
     */
    protected $approver_name = '';
    /**
     * The proposed id of the policy which is trying
     *
     * Generated from protobuf field <code>string proposed_policy = 5 [json_name = "proposedPolicy"];</code>
     */
    protected $proposed_policy = '';
    /**
     * to be applied in the proposal
     *
     * Generated from protobuf field <code>repeated string proposed_validators = 8 [json_name = "proposedValidators"];</code>
     */
    private $proposed_validators;
    /**
     * The proposed number of approvals by validator
     *
     * Generated from protobuf field <code>uint32 proposed_required_approval_count = 9 [json_name = "proposedRequiredApprovalCount"];</code>
     */
    protected $proposed_required_approval_count = 0;
    /**
     * The flag which indicates the proposal is reviewed or not
     *
     * Generated from protobuf field <code>bool is_reviewed = 6 [json_name = "isReviewed"];</code>
     */
    protected $is_reviewed = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $proposal_type
     *           The type of the proposal
     *     @type string $requester_account_id
     *           The account id which create the proposal
     *     @type string $requester_name
     *           The name of the account which create the proposal
     *     @type string $approver_account_id
     *           The account id which approve the proposal
     *     @type string $approver_name
     *           The name of the account which approve the proposal
     *     @type string $proposed_policy
     *           The proposed id of the policy which is trying
     *     @type array<string>|\Google\Protobuf\Internal\RepeatedField $proposed_validators
     *           to be applied in the proposal
     *     @type int $proposed_required_approval_count
     *           The proposed number of approvals by validator
     *     @type bool $is_reviewed
     *           The flag which indicates the proposal is reviewed or not
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The type of the proposal
     *
     * Generated from protobuf field <code>.adamant.global.v1.WalletProposalType proposal_type = 7 [json_name = "proposalType"];</code>
     * @return int
     */
    public function getProposalType()
    {
        return $this->proposal_type;
    }

    /**
     * The type of the proposal
     *
     * Generated from protobuf field <code>.adamant.global.v1.WalletProposalType proposal_type = 7 [json_name = "proposalType"];</code>
     * @param int $var
     * @return $this
     */
    public function setProposalType($var)
    {
        GPBUtil::checkEnum($var, \Adamant\PBGlobal\V1\WalletProposalType::class);
        $this->proposal_type = $var;

        return $this;
    }

    /**
     * The account id which create the proposal
     *
     * Generated from protobuf field <code>string requester_account_id = 1 [json_name = "requesterAccountId"];</code>
     * @return string
     */
    public function getRequesterAccountId()
    {
        return $this->requester_account_id;
    }

    /**
     * The account id which create the proposal
     *
     * Generated from protobuf field <code>string requester_account_id = 1 [json_name = "requesterAccountId"];</code>
     * @param string $var
     * @return $this
     */
    public function setRequesterAccountId($var)
    {
        GPBUtil::checkString($var, True);
        $this->requester_account_id = $var;

        return $this;
    }

    /**
     * The name of the account which create the proposal
     *
     * Generated from protobuf field <code>string requester_name = 2 [json_name = "requesterName"];</code>
     * @return string
     */
    public function getRequesterName()
    {
        return $this->requester_name;
    }

    /**
     * The name of the account which create the proposal
     *
     * Generated from protobuf field <code>string requester_name = 2 [json_name = "requesterName"];</code>
     * @param string $var
     * @return $this
     */
    public function setRequesterName($var)
    {
        GPBUtil::checkString($var, True);
        $this->requester_name = $var;

        return $this;
    }

    /**
     * The account id which approve the proposal
     *
     * Generated from protobuf field <code>string approver_account_id = 3 [json_name = "approverAccountId"];</code>
     * @return string
     */
    public function getApproverAccountId()
    {
        return $this->approver_account_id;
    }

    /**
     * The account id which approve the proposal
     *
     * Generated from protobuf field <code>string approver_account_id = 3 [json_name = "approverAccountId"];</code>
     * @param string $var
     * @return $this
     */
    public function setApproverAccountId($var)
    {
        GPBUtil::checkString($var, True);
        $this->approver_account_id = $var;

        return $this;
    }

    /**
     * The name of the account which approve the proposal
     *
     * Generated from protobuf field <code>string approver_name = 4 [json_name = "approverName"];</code>
     * @return string
     */
    public function getApproverName()
    {
        return $this->approver_name;
    }

    /**
     * The name of the account which approve the proposal
     *
     * Generated from protobuf field <code>string approver_name = 4 [json_name = "approverName"];</code>
     * @param string $var
     * @return $this
     */
    public function setApproverName($var)
    {
        GPBUtil::checkString($var, True);
        $this->approver_name = $var;

        return $this;
    }

    /**
     * The proposed id of the policy which is trying
     *
     * Generated from protobuf field <code>string proposed_policy = 5 [json_name = "proposedPolicy"];</code>
     * @return string
     */
    public function getProposedPolicy()
    {
        return $this->proposed_policy;
    }

    /**
     * The proposed id of the policy which is trying
     *
     * Generated from protobuf field <code>string proposed_policy = 5 [json_name = "proposedPolicy"];</code>
     * @param string $var
     * @return $this
     */
    public function setProposedPolicy($var)
    {
        GPBUtil::checkString($var, True);
        $this->proposed_policy = $var;

        return $this;
    }

    /**
     * to be applied in the proposal
     *
     * Generated from protobuf field <code>repeated string proposed_validators = 8 [json_name = "proposedValidators"];</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getProposedValidators()
    {
        return $this->proposed_validators;
    }

    /**
     * to be applied in the proposal
     *
     * Generated from protobuf field <code>repeated string proposed_validators = 8 [json_name = "proposedValidators"];</code>
     * @param array<string>|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setProposedValidators($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->proposed_validators = $arr;

        return $this;
    }

    /**
     * The proposed number of approvals by validator
     *
     * Generated from protobuf field <code>uint32 proposed_required_approval_count = 9 [json_name = "proposedRequiredApprovalCount"];</code>
     * @return int
     */
    public function getProposedRequiredApprovalCount()
    {
        return $this->proposed_required_approval_count;
    }

    /**
     * The proposed number of approvals by validator
     *
     * Generated from protobuf field <code>uint32 proposed_required_approval_count = 9 [json_name = "proposedRequiredApprovalCount"];</code>
     * @param int $var
     * @return $this
     */
    public function setProposedRequiredApprovalCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->proposed_required_approval_count = $var;

        return $this;
    }

    /**
     * The flag which indicates the proposal is reviewed or not
     *
     * Generated from protobuf field <code>bool is_reviewed = 6 [json_name = "isReviewed"];</code>
     * @return bool
     */
    public function getIsReviewed()
    {
        return $this->is_reviewed;
    }

    /**
     * The flag which indicates the proposal is reviewed or not
     *
     * Generated from protobuf field <code>bool is_reviewed = 6 [json_name = "isReviewed"];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsReviewed($var)
    {
        GPBUtil::checkBool($var);
        $this->is_reviewed = $var;

        return $this;
    }

}

