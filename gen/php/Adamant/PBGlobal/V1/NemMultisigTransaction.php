<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of nem multisig transaction
 *
 * Generated from protobuf message <code>adamant.global.v1.NemMultisigTransaction</code>
 */
class NemMultisigTransaction extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     */
    protected $wallet_id = '';
    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     */
    protected $transaction_id = '';
    /**
     * Generated from protobuf field <code>string nem_multisig_transaction_id = 3 [json_name = "nemMultisigTransactionId"];</code>
     */
    protected $nem_multisig_transaction_id = '';
    /**
     * AccountKeyID
     *
     * Generated from protobuf field <code>string account_key_id = 10 [json_name = "accountKeyId"];</code>
     */
    protected $account_key_id = '';
    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.NemTransactionType tx_type = 4 [json_name = "txType"];</code>
     */
    protected $tx_type = 0;
    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string data = 5 [json_name = "data"];</code>
     */
    protected $data = '';
    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string signature = 6 [json_name = "signature"];</code>
     */
    protected $signature = '';
    /**
     * state
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransactionState state = 7 [json_name = "state"];</code>
     */
    protected $state = 0;
    /**
     * the time at which the transaction was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [json_name = "createTime"];</code>
     */
    protected $create_time = null;
    /**
     * the time at which the transaction was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [json_name = "updateTime"];</code>
     */
    protected $update_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $wallet_id
     *           The id of wallet
     *     @type string $transaction_id
     *           id
     *     @type string $nem_multisig_transaction_id
     *     @type string $account_key_id
     *           AccountKeyID
     *     @type int $tx_type
     *     @type string $data
     *           The string-typed amount of transaction fee
     *     @type string $signature
     *           The string-typed amount of transaction fee
     *     @type int $state
     *           state
     *     @type \Google\Protobuf\Timestamp $create_time
     *           the time at which the transaction was created
     *     @type \Google\Protobuf\Timestamp $update_time
     *           the time at which the transaction was updated
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @return string
     */
    public function getTransactionId()
    {
        return $this->transaction_id;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string transaction_id = 2 [json_name = "transactionId"];</code>
     * @param string $var
     * @return $this
     */
    public function setTransactionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->transaction_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string nem_multisig_transaction_id = 3 [json_name = "nemMultisigTransactionId"];</code>
     * @return string
     */
    public function getNemMultisigTransactionId()
    {
        return $this->nem_multisig_transaction_id;
    }

    /**
     * Generated from protobuf field <code>string nem_multisig_transaction_id = 3 [json_name = "nemMultisigTransactionId"];</code>
     * @param string $var
     * @return $this
     */
    public function setNemMultisigTransactionId($var)
    {
        GPBUtil::checkString($var, True);
        $this->nem_multisig_transaction_id = $var;

        return $this;
    }

    /**
     * AccountKeyID
     *
     * Generated from protobuf field <code>string account_key_id = 10 [json_name = "accountKeyId"];</code>
     * @return string
     */
    public function getAccountKeyId()
    {
        return $this->account_key_id;
    }

    /**
     * AccountKeyID
     *
     * Generated from protobuf field <code>string account_key_id = 10 [json_name = "accountKeyId"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccountKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_key_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.NemTransactionType tx_type = 4 [json_name = "txType"];</code>
     * @return int
     */
    public function getTxType()
    {
        return $this->tx_type;
    }

    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.NemTransactionType tx_type = 4 [json_name = "txType"];</code>
     * @param int $var
     * @return $this
     */
    public function setTxType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\NemTransactionType::class);
        $this->tx_type = $var;

        return $this;
    }

    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string data = 5 [json_name = "data"];</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string data = 5 [json_name = "data"];</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, True);
        $this->data = $var;

        return $this;
    }

    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string signature = 6 [json_name = "signature"];</code>
     * @return string
     */
    public function getSignature()
    {
        return $this->signature;
    }

    /**
     * The string-typed amount of transaction fee
     *
     * Generated from protobuf field <code>string signature = 6 [json_name = "signature"];</code>
     * @param string $var
     * @return $this
     */
    public function setSignature($var)
    {
        GPBUtil::checkString($var, True);
        $this->signature = $var;

        return $this;
    }

    /**
     * state
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransactionState state = 7 [json_name = "state"];</code>
     * @return int
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     * state
     *
     * Generated from protobuf field <code>.adamant.global.v1.TransactionState state = 7 [json_name = "state"];</code>
     * @param int $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkEnum($var, \Adamant\PBGlobal\V1\TransactionState::class);
        $this->state = $var;

        return $this;
    }

    /**
     * the time at which the transaction was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [json_name = "createTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * the time at which the transaction was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 8 [json_name = "createTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * the time at which the transaction was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [json_name = "updateTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * the time at which the transaction was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 9 [json_name = "updateTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

}

