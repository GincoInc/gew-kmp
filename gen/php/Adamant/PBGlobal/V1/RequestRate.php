<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>adamant.global.v1.RequestRate</code>
 */
class RequestRate extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = {</code>
     */
    protected $coin = 0;
    /**
     * The rate of JPY
     *
     * Generated from protobuf field <code>double jpy = 2 [json_name = "jpy", (.validate.rules) = {</code>
     */
    protected $jpy = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $coin
     *           The id of coin
     *     @type float $jpy
     *           The rate of JPY
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = {</code>
     * @return int
     */
    public function getCoin()
    {
        return $this->coin;
    }

    /**
     * The id of coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin", (.validate.rules) = {</code>
     * @param int $var
     * @return $this
     */
    public function setCoin($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\Coin::class);
        $this->coin = $var;

        return $this;
    }

    /**
     * The rate of JPY
     *
     * Generated from protobuf field <code>double jpy = 2 [json_name = "jpy", (.validate.rules) = {</code>
     * @return float
     */
    public function getJpy()
    {
        return $this->jpy;
    }

    /**
     * The rate of JPY
     *
     * Generated from protobuf field <code>double jpy = 2 [json_name = "jpy", (.validate.rules) = {</code>
     * @param float $var
     * @return $this
     */
    public function setJpy($var)
    {
        GPBUtil::checkDouble($var);
        $this->jpy = $var;

        return $this;
    }

}

