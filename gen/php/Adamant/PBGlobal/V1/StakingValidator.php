<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of StakingValidator
 *
 * Generated from protobuf message <code>adamant.global.v1.StakingValidator</code>
 */
class StakingValidator extends \Google\Protobuf\Internal\Message
{
    /**
     * id
     *
     * Generated from protobuf field <code>string staking_validator_id = 1 [json_name = "stakingValidatorId"];</code>
     */
    protected $staking_validator_id = '';
    /**
     * owner id
     *
     * Generated from protobuf field <code>string owner_id = 2 [json_name = "ownerId"];</code>
     */
    protected $owner_id = '';
    /**
     * wallet id
     *
     * Generated from protobuf field <code>string wallet_id = 3 [json_name = "walletId"];</code>
     */
    protected $wallet_id = '';
    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 4 [json_name = "coin"];</code>
     */
    protected $coin = 0;
    /**
     * validator id
     *
     * Generated from protobuf field <code>string validator_id = 5 [json_name = "validatorId"];</code>
     */
    protected $validator_id = '';
    /**
     * recipient wallet id
     *
     * Generated from protobuf field <code>string recipient_wallet_id = 6 [json_name = "recipientWalletId"];</code>
     */
    protected $recipient_wallet_id = '';
    /**
     * status
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingValidatorStatus status = 7 [json_name = "status"];</code>
     */
    protected $status = 0;
    /**
     * The number-typed amount of staking
     *
     * Generated from protobuf field <code>double value = 8 [json_name = "value"];</code>
     */
    protected $value = 0.0;
    /**
     * The string-typed amount of staking
     *
     * Generated from protobuf field <code>string string_value = 9 [json_name = "stringValue"];</code>
     */
    protected $string_value = '';
    /**
     * expiration time
     *
     * Generated from protobuf field <code>int64 expiration_time = 10 [json_name = "expirationTime"];</code>
     */
    protected $expiration_time = 0;
    /**
     * the time at which the staking validator was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [json_name = "createTime"];</code>
     */
    protected $create_time = null;
    /**
     * the time at which the staking validator was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 12 [json_name = "updateTime"];</code>
     */
    protected $update_time = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $staking_validator_id
     *           id
     *     @type string $owner_id
     *           owner id
     *     @type string $wallet_id
     *           wallet id
     *     @type int $coin
     *           coin
     *     @type string $validator_id
     *           validator id
     *     @type string $recipient_wallet_id
     *           recipient wallet id
     *     @type int $status
     *           status
     *     @type float $value
     *           The number-typed amount of staking
     *     @type string $string_value
     *           The string-typed amount of staking
     *     @type int|string $expiration_time
     *           expiration time
     *     @type \Google\Protobuf\Timestamp $create_time
     *           the time at which the staking validator was created
     *     @type \Google\Protobuf\Timestamp $update_time
     *           the time at which the staking validator was updated
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string staking_validator_id = 1 [json_name = "stakingValidatorId"];</code>
     * @return string
     */
    public function getStakingValidatorId()
    {
        return $this->staking_validator_id;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string staking_validator_id = 1 [json_name = "stakingValidatorId"];</code>
     * @param string $var
     * @return $this
     */
    public function setStakingValidatorId($var)
    {
        GPBUtil::checkString($var, True);
        $this->staking_validator_id = $var;

        return $this;
    }

    /**
     * owner id
     *
     * Generated from protobuf field <code>string owner_id = 2 [json_name = "ownerId"];</code>
     * @return string
     */
    public function getOwnerId()
    {
        return $this->owner_id;
    }

    /**
     * owner id
     *
     * Generated from protobuf field <code>string owner_id = 2 [json_name = "ownerId"];</code>
     * @param string $var
     * @return $this
     */
    public function setOwnerId($var)
    {
        GPBUtil::checkString($var, True);
        $this->owner_id = $var;

        return $this;
    }

    /**
     * wallet id
     *
     * Generated from protobuf field <code>string wallet_id = 3 [json_name = "walletId"];</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * wallet id
     *
     * Generated from protobuf field <code>string wallet_id = 3 [json_name = "walletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 4 [json_name = "coin"];</code>
     * @return int
     */
    public function getCoin()
    {
        return $this->coin;
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 4 [json_name = "coin"];</code>
     * @param int $var
     * @return $this
     */
    public function setCoin($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\Coin::class);
        $this->coin = $var;

        return $this;
    }

    /**
     * validator id
     *
     * Generated from protobuf field <code>string validator_id = 5 [json_name = "validatorId"];</code>
     * @return string
     */
    public function getValidatorId()
    {
        return $this->validator_id;
    }

    /**
     * validator id
     *
     * Generated from protobuf field <code>string validator_id = 5 [json_name = "validatorId"];</code>
     * @param string $var
     * @return $this
     */
    public function setValidatorId($var)
    {
        GPBUtil::checkString($var, True);
        $this->validator_id = $var;

        return $this;
    }

    /**
     * recipient wallet id
     *
     * Generated from protobuf field <code>string recipient_wallet_id = 6 [json_name = "recipientWalletId"];</code>
     * @return string
     */
    public function getRecipientWalletId()
    {
        return $this->recipient_wallet_id;
    }

    /**
     * recipient wallet id
     *
     * Generated from protobuf field <code>string recipient_wallet_id = 6 [json_name = "recipientWalletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setRecipientWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->recipient_wallet_id = $var;

        return $this;
    }

    /**
     * status
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingValidatorStatus status = 7 [json_name = "status"];</code>
     * @return int
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * status
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.StakingValidatorStatus status = 7 [json_name = "status"];</code>
     * @param int $var
     * @return $this
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\StakingValidatorStatus::class);
        $this->status = $var;

        return $this;
    }

    /**
     * The number-typed amount of staking
     *
     * Generated from protobuf field <code>double value = 8 [json_name = "value"];</code>
     * @return float
     */
    public function getValue()
    {
        return $this->value;
    }

    /**
     * The number-typed amount of staking
     *
     * Generated from protobuf field <code>double value = 8 [json_name = "value"];</code>
     * @param float $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->value = $var;

        return $this;
    }

    /**
     * The string-typed amount of staking
     *
     * Generated from protobuf field <code>string string_value = 9 [json_name = "stringValue"];</code>
     * @return string
     */
    public function getStringValue()
    {
        return $this->string_value;
    }

    /**
     * The string-typed amount of staking
     *
     * Generated from protobuf field <code>string string_value = 9 [json_name = "stringValue"];</code>
     * @param string $var
     * @return $this
     */
    public function setStringValue($var)
    {
        GPBUtil::checkString($var, True);
        $this->string_value = $var;

        return $this;
    }

    /**
     * expiration time
     *
     * Generated from protobuf field <code>int64 expiration_time = 10 [json_name = "expirationTime"];</code>
     * @return int|string
     */
    public function getExpirationTime()
    {
        return $this->expiration_time;
    }

    /**
     * expiration time
     *
     * Generated from protobuf field <code>int64 expiration_time = 10 [json_name = "expirationTime"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkInt64($var);
        $this->expiration_time = $var;

        return $this;
    }

    /**
     * the time at which the staking validator was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [json_name = "createTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    public function hasCreateTime()
    {
        return isset($this->create_time);
    }

    public function clearCreateTime()
    {
        unset($this->create_time);
    }

    /**
     * the time at which the staking validator was created
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp create_time = 11 [json_name = "createTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;

        return $this;
    }

    /**
     * the time at which the staking validator was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 12 [json_name = "updateTime"];</code>
     * @return \Google\Protobuf\Timestamp|null
     */
    public function getUpdateTime()
    {
        return $this->update_time;
    }

    public function hasUpdateTime()
    {
        return isset($this->update_time);
    }

    public function clearUpdateTime()
    {
        unset($this->update_time);
    }

    /**
     * the time at which the staking validator was updated
     *
     * Generated from protobuf field <code>.google.protobuf.Timestamp update_time = 12 [json_name = "updateTime"];</code>
     * @param \Google\Protobuf\Timestamp $var
     * @return $this
     */
    public function setUpdateTime($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->update_time = $var;

        return $this;
    }

}

