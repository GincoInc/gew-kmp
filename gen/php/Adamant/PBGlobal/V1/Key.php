<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of key pair
 *
 * Generated from protobuf message <code>adamant.global.v1.Key</code>
 */
class Key extends \Google\Protobuf\Internal\Message
{
    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     */
    protected $wallet_id = '';
    /**
     * The id of account which owns the key
     *
     * Generated from protobuf field <code>string account_id = 2 [json_name = "accountId"];</code>
     */
    protected $account_id = '';
    /**
     * The account type of key owner
     *
     * Generated from protobuf field <code>.adamant.global.v1.AccountType account_type = 3 [json_name = "accountType"];</code>
     */
    protected $account_type = 0;
    /**
     * id
     *
     * Generated from protobuf field <code>string key_id = 4 [json_name = "keyId"];</code>
     */
    protected $key_id = '';
    /**
     * The index of key
     *
     * Generated from protobuf field <code>uint32 key_index = 5 [json_name = "keyIndex"];</code>
     */
    protected $key_index = 0;
    /**
     * The index of hdkey
     *
     * Generated from protobuf field <code>uint32 hd_index = 6 [json_name = "hdIndex"];</code>
     */
    protected $hd_index = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $wallet_id
     *           The id of wallet
     *     @type string $account_id
     *           The id of account which owns the key
     *     @type int $account_type
     *           The account type of key owner
     *     @type string $key_id
     *           id
     *     @type int $key_index
     *           The index of key
     *     @type int $hd_index
     *           The index of hdkey
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * The id of wallet
     *
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId"];</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * The id of account which owns the key
     *
     * Generated from protobuf field <code>string account_id = 2 [json_name = "accountId"];</code>
     * @return string
     */
    public function getAccountId()
    {
        return $this->account_id;
    }

    /**
     * The id of account which owns the key
     *
     * Generated from protobuf field <code>string account_id = 2 [json_name = "accountId"];</code>
     * @param string $var
     * @return $this
     */
    public function setAccountId($var)
    {
        GPBUtil::checkString($var, True);
        $this->account_id = $var;

        return $this;
    }

    /**
     * The account type of key owner
     *
     * Generated from protobuf field <code>.adamant.global.v1.AccountType account_type = 3 [json_name = "accountType"];</code>
     * @return int
     */
    public function getAccountType()
    {
        return $this->account_type;
    }

    /**
     * The account type of key owner
     *
     * Generated from protobuf field <code>.adamant.global.v1.AccountType account_type = 3 [json_name = "accountType"];</code>
     * @param int $var
     * @return $this
     */
    public function setAccountType($var)
    {
        GPBUtil::checkEnum($var, \Adamant\PBGlobal\V1\AccountType::class);
        $this->account_type = $var;

        return $this;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string key_id = 4 [json_name = "keyId"];</code>
     * @return string
     */
    public function getKeyId()
    {
        return $this->key_id;
    }

    /**
     * id
     *
     * Generated from protobuf field <code>string key_id = 4 [json_name = "keyId"];</code>
     * @param string $var
     * @return $this
     */
    public function setKeyId($var)
    {
        GPBUtil::checkString($var, True);
        $this->key_id = $var;

        return $this;
    }

    /**
     * The index of key
     *
     * Generated from protobuf field <code>uint32 key_index = 5 [json_name = "keyIndex"];</code>
     * @return int
     */
    public function getKeyIndex()
    {
        return $this->key_index;
    }

    /**
     * The index of key
     *
     * Generated from protobuf field <code>uint32 key_index = 5 [json_name = "keyIndex"];</code>
     * @param int $var
     * @return $this
     */
    public function setKeyIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->key_index = $var;

        return $this;
    }

    /**
     * The index of hdkey
     *
     * Generated from protobuf field <code>uint32 hd_index = 6 [json_name = "hdIndex"];</code>
     * @return int
     */
    public function getHdIndex()
    {
        return $this->hd_index;
    }

    /**
     * The index of hdkey
     *
     * Generated from protobuf field <code>uint32 hd_index = 6 [json_name = "hdIndex"];</code>
     * @param int $var
     * @return $this
     */
    public function setHdIndex($var)
    {
        GPBUtil::checkUint32($var);
        $this->hd_index = $var;

        return $this;
    }

}

