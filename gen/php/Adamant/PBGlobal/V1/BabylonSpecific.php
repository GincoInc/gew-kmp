<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of Babylon specific fields of transaction
 *
 * Generated from protobuf message <code>adamant.global.v1.BabylonSpecific</code>
 */
class BabylonSpecific extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     */
    protected $gas_limit = 0;
    /**
     * Generated from protobuf field <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     */
    protected $nonce = 0;
    /**
     * Generated from protobuf field <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     */
    protected $is_next_nonce = false;
    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.BabylonMsgType type = 4 [json_name = "type"];</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>string memo = 5 [json_name = "memo"];</code>
     */
    protected $memo = '';
    /**
     * Generated from protobuf field <code>double gas_adjustment = 6 [json_name = "gasAdjustment"];</code>
     */
    protected $gas_adjustment = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $gas_limit
     *     @type int|string $nonce
     *     @type bool $is_next_nonce
     *     @type int $type
     *     @type string $memo
     *     @type float $gas_adjustment
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     * @return int|string
     */
    public function getGasLimit()
    {
        return $this->gas_limit;
    }

    /**
     * Generated from protobuf field <code>uint64 gas_limit = 1 [json_name = "gasLimit"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setGasLimit($var)
    {
        GPBUtil::checkUint64($var);
        $this->gas_limit = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     * @return int|string
     */
    public function getNonce()
    {
        return $this->nonce;
    }

    /**
     * Generated from protobuf field <code>uint64 nonce = 2 [json_name = "nonce"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setNonce($var)
    {
        GPBUtil::checkUint64($var);
        $this->nonce = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     * @return bool
     */
    public function getIsNextNonce()
    {
        return $this->is_next_nonce;
    }

    /**
     * Generated from protobuf field <code>bool is_next_nonce = 3 [json_name = "isNextNonce"];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsNextNonce($var)
    {
        GPBUtil::checkBool($var);
        $this->is_next_nonce = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.BabylonMsgType type = 4 [json_name = "type"];</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.gincoinc.global.v1.BabylonMsgType type = 4 [json_name = "type"];</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\BabylonMsgType::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string memo = 5 [json_name = "memo"];</code>
     * @return string
     */
    public function getMemo()
    {
        return $this->memo;
    }

    /**
     * Generated from protobuf field <code>string memo = 5 [json_name = "memo"];</code>
     * @param string $var
     * @return $this
     */
    public function setMemo($var)
    {
        GPBUtil::checkString($var, True);
        $this->memo = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double gas_adjustment = 6 [json_name = "gasAdjustment"];</code>
     * @return float
     */
    public function getGasAdjustment()
    {
        return $this->gas_adjustment;
    }

    /**
     * Generated from protobuf field <code>double gas_adjustment = 6 [json_name = "gasAdjustment"];</code>
     * @param float $var
     * @return $this
     */
    public function setGasAdjustment($var)
    {
        GPBUtil::checkDouble($var);
        $this->gas_adjustment = $var;

        return $this;
    }

}

