<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * The model of Ethereum specific fields of CalculateFee
 *
 * Generated from protobuf message <code>adamant.global.v1.CalculateFeeEthereumSpecific</code>
 */
class CalculateFeeEthereumSpecific extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     */
    protected $data = '';
    /**
     * optional
     *
     * Generated from protobuf field <code>optional bool is_staking_transaction = 2 [json_name = "isStakingTransaction"];</code>
     */
    protected $is_staking_transaction = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $data
     *     @type bool $is_staking_transaction
     *           optional
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\GlobalApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     * @return string
     */
    public function getData()
    {
        return $this->data;
    }

    /**
     * Generated from protobuf field <code>string data = 1 [json_name = "data"];</code>
     * @param string $var
     * @return $this
     */
    public function setData($var)
    {
        GPBUtil::checkString($var, True);
        $this->data = $var;

        return $this;
    }

    /**
     * optional
     *
     * Generated from protobuf field <code>optional bool is_staking_transaction = 2 [json_name = "isStakingTransaction"];</code>
     * @return bool
     */
    public function getIsStakingTransaction()
    {
        return isset($this->is_staking_transaction) ? $this->is_staking_transaction : false;
    }

    public function hasIsStakingTransaction()
    {
        return isset($this->is_staking_transaction);
    }

    public function clearIsStakingTransaction()
    {
        unset($this->is_staking_transaction);
    }

    /**
     * optional
     *
     * Generated from protobuf field <code>optional bool is_staking_transaction = 2 [json_name = "isStakingTransaction"];</code>
     * @param bool $var
     * @return $this
     */
    public function setIsStakingTransaction($var)
    {
        GPBUtil::checkBool($var);
        $this->is_staking_transaction = $var;

        return $this;
    }

}

