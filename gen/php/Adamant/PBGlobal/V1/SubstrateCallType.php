<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

namespace Adamant\PBGlobal\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>adamant.global.v1.SubstrateCallType</code>
 */
class SubstrateCallType
{
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_INVALID = 0;</code>
     */
    const SUBSTRATE_CALL_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_TRANSFER = 1;</code>
     */
    const SUBSTRATE_CALL_TYPE_TRANSFER = 1;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_TRANSFER_ALL = 2;</code>
     */
    const SUBSTRATE_CALL_TYPE_TRANSFER_ALL = 2;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_TRANSFER_KEEP_ALIVE = 3;</code>
     */
    const SUBSTRATE_CALL_TYPE_TRANSFER_KEEP_ALIVE = 3;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_APPROVE_AS_MULTI = 4;</code>
     */
    const SUBSTRATE_CALL_TYPE_APPROVE_AS_MULTI = 4;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_AS_MULTI = 5;</code>
     */
    const SUBSTRATE_CALL_TYPE_AS_MULTI = 5;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_AS_MULTI_THRESHOLD1 = 6;</code>
     */
    const SUBSTRATE_CALL_TYPE_AS_MULTI_THRESHOLD1 = 6;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_CANCEL_AS_MULTI = 7;</code>
     */
    const SUBSTRATE_CALL_TYPE_CANCEL_AS_MULTI = 7;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_TRANSFER_ALLOW_DEATH = 8;</code>
     */
    const SUBSTRATE_CALL_TYPE_TRANSFER_ALLOW_DEATH = 8;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_JOIN = 9;</code>
     */
    const SUBSTRATE_CALL_TYPE_JOIN = 9;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_BOND_EXTRA_FREE_BALANCE = 10;</code>
     */
    const SUBSTRATE_CALL_TYPE_BOND_EXTRA_FREE_BALANCE = 10;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_BOND_EXTRA_REWARDS = 11;</code>
     */
    const SUBSTRATE_CALL_TYPE_BOND_EXTRA_REWARDS = 11;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_UNBOND = 12;</code>
     */
    const SUBSTRATE_CALL_TYPE_UNBOND = 12;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_WITHDRAW_UNBONDED = 13;</code>
     */
    const SUBSTRATE_CALL_TYPE_WITHDRAW_UNBONDED = 13;
    /**
     * Generated from protobuf enum <code>SUBSTRATE_CALL_TYPE_CLAIM_PAYOUT = 14;</code>
     */
    const SUBSTRATE_CALL_TYPE_CLAIM_PAYOUT = 14;

    private static $valueToName = [
        self::SUBSTRATE_CALL_TYPE_INVALID => 'SUBSTRATE_CALL_TYPE_INVALID',
        self::SUBSTRATE_CALL_TYPE_TRANSFER => 'SUBSTRATE_CALL_TYPE_TRANSFER',
        self::SUBSTRATE_CALL_TYPE_TRANSFER_ALL => 'SUBSTRATE_CALL_TYPE_TRANSFER_ALL',
        self::SUBSTRATE_CALL_TYPE_TRANSFER_KEEP_ALIVE => 'SUBSTRATE_CALL_TYPE_TRANSFER_KEEP_ALIVE',
        self::SUBSTRATE_CALL_TYPE_APPROVE_AS_MULTI => 'SUBSTRATE_CALL_TYPE_APPROVE_AS_MULTI',
        self::SUBSTRATE_CALL_TYPE_AS_MULTI => 'SUBSTRATE_CALL_TYPE_AS_MULTI',
        self::SUBSTRATE_CALL_TYPE_AS_MULTI_THRESHOLD1 => 'SUBSTRATE_CALL_TYPE_AS_MULTI_THRESHOLD1',
        self::SUBSTRATE_CALL_TYPE_CANCEL_AS_MULTI => 'SUBSTRATE_CALL_TYPE_CANCEL_AS_MULTI',
        self::SUBSTRATE_CALL_TYPE_TRANSFER_ALLOW_DEATH => 'SUBSTRATE_CALL_TYPE_TRANSFER_ALLOW_DEATH',
        self::SUBSTRATE_CALL_TYPE_JOIN => 'SUBSTRATE_CALL_TYPE_JOIN',
        self::SUBSTRATE_CALL_TYPE_BOND_EXTRA_FREE_BALANCE => 'SUBSTRATE_CALL_TYPE_BOND_EXTRA_FREE_BALANCE',
        self::SUBSTRATE_CALL_TYPE_BOND_EXTRA_REWARDS => 'SUBSTRATE_CALL_TYPE_BOND_EXTRA_REWARDS',
        self::SUBSTRATE_CALL_TYPE_UNBOND => 'SUBSTRATE_CALL_TYPE_UNBOND',
        self::SUBSTRATE_CALL_TYPE_WITHDRAW_UNBONDED => 'SUBSTRATE_CALL_TYPE_WITHDRAW_UNBONDED',
        self::SUBSTRATE_CALL_TYPE_CLAIM_PAYOUT => 'SUBSTRATE_CALL_TYPE_CLAIM_PAYOUT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

