<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/global_api.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>adamant.global.v1.CreateInitTransactionRequest</code>
 */
class CreateInitTransactionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = {</code>
     */
    protected $wallet_id = '';
    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
     */
    protected $iost_specific = null;
    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
     */
    protected $symbol_specific = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $wallet_id
     *     @type \Adamant\PBGlobal\V1\CreateTransactionIOSTSpecific $iost_specific
     *     @type \Adamant\PBGlobal\V1\CreateTransactionSymbolSpecific $symbol_specific
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\GlobalApi::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = {</code>
     * @return string
     */
    public function getWalletId()
    {
        return $this->wallet_id;
    }

    /**
     * Generated from protobuf field <code>string wallet_id = 1 [json_name = "walletId", (.validate.rules) = {</code>
     * @param string $var
     * @return $this
     */
    public function setWalletId($var)
    {
        GPBUtil::checkString($var, True);
        $this->wallet_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\CreateTransactionIOSTSpecific|null
     */
    public function getIostSpecific()
    {
        return $this->iost_specific;
    }

    public function hasIostSpecific()
    {
        return isset($this->iost_specific);
    }

    public function clearIostSpecific()
    {
        unset($this->iost_specific);
    }

    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionIOSTSpecific iost_specific = 2 [json_name = "iostSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\CreateTransactionIOSTSpecific $var
     * @return $this
     */
    public function setIostSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\CreateTransactionIOSTSpecific::class);
        $this->iost_specific = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
     * @return \Adamant\PBGlobal\V1\CreateTransactionSymbolSpecific|null
     */
    public function getSymbolSpecific()
    {
        return $this->symbol_specific;
    }

    public function hasSymbolSpecific()
    {
        return isset($this->symbol_specific);
    }

    public function clearSymbolSpecific()
    {
        unset($this->symbol_specific);
    }

    /**
     * Generated from protobuf field <code>.adamant.global.v1.CreateTransactionSymbolSpecific symbol_specific = 3 [json_name = "symbolSpecific"];</code>
     * @param \Adamant\PBGlobal\V1\CreateTransactionSymbolSpecific $var
     * @return $this
     */
    public function setSymbolSpecific($var)
    {
        GPBUtil::checkMessage($var, \Adamant\PBGlobal\V1\CreateTransactionSymbolSpecific::class);
        $this->symbol_specific = $var;

        return $this;
    }

}

