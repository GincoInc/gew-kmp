<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

namespace Adamant\PBGlobal\V1;

use UnexpectedValueException;

/**
 * WalletProposalType is a type of proposal
 *
 * Protobuf type <code>adamant.global.v1.WalletProposalType</code>
 */
class WalletProposalType
{
    /**
     * Generated from protobuf enum <code>WALLET_PROPOSAL_TYPE_INVALID = 0;</code>
     */
    const WALLET_PROPOSAL_TYPE_INVALID = 0;
    /**
     * the wallet is requested to change policy
     *
     * Generated from protobuf enum <code>WALLET_PROPOSAL_TYPE_POLICY = 1;</code>
     */
    const WALLET_PROPOSAL_TYPE_POLICY = 1;
    /**
     * the wallet is requested to change validator/required_approval_count
     *
     * Generated from protobuf enum <code>WALLET_PROPOSAL_TYPE_VALIDATOR = 2;</code>
     */
    const WALLET_PROPOSAL_TYPE_VALIDATOR = 2;

    private static $valueToName = [
        self::WALLET_PROPOSAL_TYPE_INVALID => 'WALLET_PROPOSAL_TYPE_INVALID',
        self::WALLET_PROPOSAL_TYPE_POLICY => 'WALLET_PROPOSAL_TYPE_POLICY',
        self::WALLET_PROPOSAL_TYPE_VALIDATOR => 'WALLET_PROPOSAL_TYPE_VALIDATOR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

