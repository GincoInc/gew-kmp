<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/enum.proto

namespace Adamant\PBGlobal\V1;

use UnexpectedValueException;

/**
 * Protobuf type <code>adamant.global.v1.EthereumContractMethodIDType</code>
 */
class EthereumContractMethodIDType
{
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID = 0;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID = 0;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_APPROVE = 1;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_APPROVE = 1;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_UNISWAP_MULTICALL = 2;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_UNISWAP_MULTICALL = 2;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_INITIALIZE = 3;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_INITIALIZE = 3;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFIGURE_MINTER = 4;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFIGURE_MINTER = 4;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT_AND_TRANSFER = 5;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT_AND_TRANSFER = 5;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT = 6;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT = 6;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BURN = 7;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BURN = 7;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_WHITELIST = 8;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_WHITELIST = 8;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_UNSET = 9;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_UNSET = 9;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_BLACKLIST = 10;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_BLACKLIST = 10;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFISCATE = 11;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFISCATE = 11;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_PAUSE = 12;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_PAUSE = 12;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UNPAUSE = 13;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UNPAUSE = 13;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_GRANT_WHITE_AND_BLACK_LISTER = 14;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_GRANT_WHITE_AND_BLACK_LISTER = 14;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONTRACT_CREATION = 15;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONTRACT_CREATION = 15;
    /**
     * Generated from protobuf enum <code>ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UPGRADE_TO_AND_CALL = 16;</code>
     */
    const ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UPGRADE_TO_AND_CALL = 16;

    private static $valueToName = [
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_INVALID',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_APPROVE => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_APPROVE',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_UNISWAP_MULTICALL => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_UNISWAP_MULTICALL',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_INITIALIZE => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_INITIALIZE',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFIGURE_MINTER => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFIGURE_MINTER',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT_AND_TRANSFER => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT_AND_TRANSFER',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_MINT',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BURN => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BURN',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_WHITELIST => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_WHITELIST',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_UNSET => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_UNSET',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_BLACKLIST => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_BULK_UPDATE_TO_BLACKLIST',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFISCATE => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONFISCATE',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_PAUSE => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_PAUSE',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UNPAUSE => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UNPAUSE',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_GRANT_WHITE_AND_BLACK_LISTER => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_GRANT_WHITE_AND_BLACK_LISTER',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONTRACT_CREATION => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_CONTRACT_CREATION',
        self::ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UPGRADE_TO_AND_CALL => 'ETHEREUM_CONTRACT_METHOD_ID_TYPE_ERC20_UPGRADE_TO_AND_CALL',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

