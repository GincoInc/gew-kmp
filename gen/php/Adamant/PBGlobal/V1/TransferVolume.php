<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gincoinc/adamant/global/v1/adamantglobalv1/model.proto

namespace Adamant\PBGlobal\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>adamant.global.v1.TransferVolume</code>
 */
class TransferVolume extends \Google\Protobuf\Internal\Message
{
    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin"];</code>
     */
    protected $coin = 0;
    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_volume = 2 [json_name = "hotStringVolume"];</code>
     */
    protected $hot_string_volume = '';
    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_volume = 3 [json_name = "coldStringVolume"];</code>
     */
    protected $cold_string_volume = '';
    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_jpy_volume = 4 [json_name = "hotStringJpyVolume"];</code>
     */
    protected $hot_string_jpy_volume = '';
    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_jpy_volume = 5 [json_name = "coldStringJpyVolume"];</code>
     */
    protected $cold_string_jpy_volume = '';
    /**
     * hot transfer number volume
     *
     * Generated from protobuf field <code>int64 hot_number = 6 [json_name = "hotNumber"];</code>
     */
    protected $hot_number = 0;
    /**
     * cold transfer number volume
     *
     * Generated from protobuf field <code>int64 cold_number = 7 [json_name = "coldNumber"];</code>
     */
    protected $cold_number = 0;
    /**
     * transfer type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 8 [json_name = "transferType"];</code>
     */
    protected $transfer_type = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $coin
     *           coin
     *     @type string $hot_string_volume
     *           hot volume
     *     @type string $cold_string_volume
     *           col volume
     *     @type string $hot_string_jpy_volume
     *           hot volume
     *     @type string $cold_string_jpy_volume
     *           col volume
     *     @type int|string $hot_number
     *           hot transfer number volume
     *     @type int|string $cold_number
     *           cold transfer number volume
     *     @type int $transfer_type
     *           transfer type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Gincoinc\Adamant\PBGlobal\V1\Adamantglobalv1\Model::initOnce();
        parent::__construct($data);
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin"];</code>
     * @return int
     */
    public function getCoin()
    {
        return $this->coin;
    }

    /**
     * coin
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.Coin coin = 1 [json_name = "coin"];</code>
     * @param int $var
     * @return $this
     */
    public function setCoin($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\Coin::class);
        $this->coin = $var;

        return $this;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_volume = 2 [json_name = "hotStringVolume"];</code>
     * @return string
     */
    public function getHotStringVolume()
    {
        return $this->hot_string_volume;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_volume = 2 [json_name = "hotStringVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setHotStringVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->hot_string_volume = $var;

        return $this;
    }

    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_volume = 3 [json_name = "coldStringVolume"];</code>
     * @return string
     */
    public function getColdStringVolume()
    {
        return $this->cold_string_volume;
    }

    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_volume = 3 [json_name = "coldStringVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setColdStringVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->cold_string_volume = $var;

        return $this;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_jpy_volume = 4 [json_name = "hotStringJpyVolume"];</code>
     * @return string
     */
    public function getHotStringJpyVolume()
    {
        return $this->hot_string_jpy_volume;
    }

    /**
     * hot volume
     *
     * Generated from protobuf field <code>string hot_string_jpy_volume = 4 [json_name = "hotStringJpyVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setHotStringJpyVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->hot_string_jpy_volume = $var;

        return $this;
    }

    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_jpy_volume = 5 [json_name = "coldStringJpyVolume"];</code>
     * @return string
     */
    public function getColdStringJpyVolume()
    {
        return $this->cold_string_jpy_volume;
    }

    /**
     * col volume
     *
     * Generated from protobuf field <code>string cold_string_jpy_volume = 5 [json_name = "coldStringJpyVolume"];</code>
     * @param string $var
     * @return $this
     */
    public function setColdStringJpyVolume($var)
    {
        GPBUtil::checkString($var, True);
        $this->cold_string_jpy_volume = $var;

        return $this;
    }

    /**
     * hot transfer number volume
     *
     * Generated from protobuf field <code>int64 hot_number = 6 [json_name = "hotNumber"];</code>
     * @return int|string
     */
    public function getHotNumber()
    {
        return $this->hot_number;
    }

    /**
     * hot transfer number volume
     *
     * Generated from protobuf field <code>int64 hot_number = 6 [json_name = "hotNumber"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setHotNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->hot_number = $var;

        return $this;
    }

    /**
     * cold transfer number volume
     *
     * Generated from protobuf field <code>int64 cold_number = 7 [json_name = "coldNumber"];</code>
     * @return int|string
     */
    public function getColdNumber()
    {
        return $this->cold_number;
    }

    /**
     * cold transfer number volume
     *
     * Generated from protobuf field <code>int64 cold_number = 7 [json_name = "coldNumber"];</code>
     * @param int|string $var
     * @return $this
     */
    public function setColdNumber($var)
    {
        GPBUtil::checkInt64($var);
        $this->cold_number = $var;

        return $this;
    }

    /**
     * transfer type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 8 [json_name = "transferType"];</code>
     * @return int
     */
    public function getTransferType()
    {
        return $this->transfer_type;
    }

    /**
     * transfer type
     *
     * Generated from protobuf field <code>.gincoinc.global.v1.TransferType transfer_type = 8 [json_name = "transferType"];</code>
     * @param int $var
     * @return $this
     */
    public function setTransferType($var)
    {
        GPBUtil::checkEnum($var, \Gincoinc\PBGlobal\V1\TransferType::class);
        $this->transfer_type = $var;

        return $this;
    }

}

